import{i as k,k as h,O as b,P as B,Q as O,l as M,u as A,R as E}from"./entry.d45912a7.js";const H=()=>null;function j(...s){var _,D,v,P,g,x,w;const l=typeof s[s.length-1]=="string"?s.pop():void 0;typeof s[0]!="string"&&s.unshift(l);let[t,f,a={}]=s;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof f!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");a.server=(_=a.server)!=null?_:!0,a.default=(D=a.default)!=null?D:H,a.lazy=(v=a.lazy)!=null?v:!1,a.immediate=(P=a.immediate)!=null?P:!0;const e=k(),d=()=>e.isHydrating?e.payload.data[t]:e.static.data[t],y=()=>d()!==void 0;e._asyncData[t]||(e._asyncData[t]={data:h((w=(x=d())!=null?x:(g=a.default)==null?void 0:g.call(a))!=null?w:null),pending:h(!y()),error:h(e.payload._errors[t]?b(e.payload._errors[t]):null)});const n={...e._asyncData[t]};n.refresh=n.execute=(i={})=>{if(e._asyncDataPromises[t]){if(i.dedupe===!1)return e._asyncDataPromises[t];e._asyncDataPromises[t].cancelled=!0}if(i._initial&&y())return d();n.pending.value=!0;const o=new Promise((r,c)=>{try{r(f(e))}catch(u){c(u)}}).then(r=>{if(o.cancelled)return e._asyncDataPromises[t];a.transform&&(r=a.transform(r)),a.pick&&(r=z(r,a.pick)),n.data.value=r,n.error.value=null}).catch(r=>{var c,u;if(o.cancelled)return e._asyncDataPromises[t];n.error.value=r,n.data.value=A((u=(c=a.default)==null?void 0:c.call(a))!=null?u:null)}).finally(()=>{o.cancelled||(n.pending.value=!1,e.payload.data[t]=n.data.value,n.error.value&&(e.payload._errors[t]=b(n.error.value)),delete e._asyncDataPromises[t])});return e._asyncDataPromises[t]=o,e._asyncDataPromises[t]};const p=()=>n.refresh({_initial:!0}),C=a.server!==!1&&e.payload.serverRendered;{const i=E();if(i&&!i._nuxtOnBeforeMountCbs){i._nuxtOnBeforeMountCbs=[];const r=i._nuxtOnBeforeMountCbs;i&&(B(()=>{r.forEach(c=>{c()}),r.splice(0,r.length)}),O(()=>r.splice(0,r.length)))}C&&e.isHydrating&&y()?n.pending.value=!1:i&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?i._nuxtOnBeforeMountCbs.push(p):a.immediate&&p(),a.watch&&M(a.watch,()=>n.refresh());const o=e.hook("app:data:refresh",r=>{if(!r||r.includes(t))return n.refresh()});i&&O(o)}const m=Promise.resolve(e._asyncDataPromises[t]).then(()=>n);return Object.assign(m,n),m}async function N(s){const l=s?Array.isArray(s)?s:[s]:void 0;await k().hooks.callHookParallel("app:data:refresh",l)}function z(s,l){const t={};for(const f of l)t[f]=s[f];return t}export{N as r,j as u};
