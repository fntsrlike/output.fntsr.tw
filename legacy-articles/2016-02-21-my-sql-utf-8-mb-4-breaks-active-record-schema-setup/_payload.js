export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb){return {data:{"content-query-RecLGoBgkJ":{_path:"\u002Flegacy-articles\u002F2016-02-21-my-sql-utf-8-mb-4-breaks-active-record-schema-setup",_dir:"legacy-articles",_draft:E,_partial:E,_locale:"en",_empty:E,title:$,description:h,excerpt:{type:aa,children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:ab,rel:[e]},children:[{type:b,value:ac}]}]},{type:a,tag:c,props:{},children:[{type:b,value:ad}]},{type:a,tag:g,props:{code:F},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:b,value:F}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:ae}]},{type:a,tag:g,props:{code:G},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:b,value:G}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:af}]},{type:a,tag:l,props:{id:H},children:[{type:b,value:I}]},{type:a,tag:c,props:{},children:[{type:b,value:ag}]},{type:a,tag:c,props:{},children:[{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:ai}]},{type:b,value:aj}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:y,rel:[e]},children:[{type:a,tag:u,props:{alt:h,src:y},children:[]}]}]},{type:a,tag:l,props:{id:J},children:[{type:b,value:K}]},{type:a,tag:c,props:{},children:[{type:b,value:ak},{type:a,tag:f,props:{},children:[{type:b,value:r}]},{type:b,value:al},{type:a,tag:f,props:{},children:[{type:b,value:am}]},{type:b,value:an}]},{type:a,tag:c,props:{},children:[{type:b,value:ao},{type:a,tag:f,props:{},children:[{type:b,value:ap}]},{type:b,value:aq}]},{type:a,tag:l,props:{id:L},children:[{type:b,value:M}]},{type:a,tag:m,props:{id:n},children:[{type:b,value:n}]},{type:a,tag:c,props:{},children:[{type:b,value:ar},{type:a,tag:as,props:{},children:[{type:b,value:at}]},{type:b,value:au}]},{type:a,tag:c,props:{},children:[{type:b,value:av},{type:a,tag:f,props:{},children:[{type:b,value:aw}]},{type:b,value:ax}]},{type:a,tag:m,props:{id:o},children:[{type:b,value:o}]},{type:a,tag:c,props:{},children:[{type:b,value:ay},{type:a,tag:d,props:{href:z,rel:[e]},children:[{type:b,value:az}]},{type:b,value:aA}]},{type:a,tag:c,props:{},children:[{type:b,value:aB},{type:a,tag:f,props:{},children:[{type:b,value:aC}]},{type:b,value:aD}]},{type:a,tag:g,props:{code:N},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:b,value:N}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:aE},{type:a,tag:f,props:{},children:[{type:b,value:r}]},{type:b,value:aF}]},{type:a,tag:g,props:{code:O},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:b,value:O}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:aG},{type:a,tag:aH,props:{},children:[]},{type:b,value:aI},{type:a,tag:d,props:{href:aJ,rel:[e]},children:[{type:b,value:aK}]},{type:b,value:aL}]},{type:a,tag:m,props:{id:p},children:[{type:b,value:p}]},{type:a,tag:c,props:{},children:[{type:b,value:aM},{type:a,tag:f,props:{},children:[{type:b,value:r}]},{type:b,value:aN}]},{type:a,tag:c,props:{},children:[{type:b,value:aO},{type:a,tag:f,props:{},children:[{type:b,value:r}]},{type:b,value:aP},{type:a,tag:d,props:{href:aQ,rel:[e]},children:[{type:b,value:aR}]},{type:b,value:A}]},{type:a,tag:l,props:{id:P},children:[{type:b,value:Q}]},{type:a,tag:c,props:{},children:[{type:b,value:aS}]},{type:a,tag:m,props:{id:R},children:[{type:b,value:n}]},{type:a,tag:c,props:{},children:[{type:b,value:aT},{type:a,tag:f,props:{},children:[{type:b,value:aU}]},{type:b,value:aV}]},{type:a,tag:c,props:{},children:[{type:b,value:aW}]},{type:a,tag:m,props:{id:S},children:[{type:b,value:o}]},{type:a,tag:c,props:{},children:[{type:a,tag:aX,props:{},children:[{type:b,value:aY}]}]},{type:a,tag:c,props:{},children:[{type:b,value:aZ},{type:a,tag:f,props:{},children:[{type:b,value:a_}]},{type:b,value:a$}]},{type:a,tag:g,props:{code:T},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:b,value:T}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:ba},{type:a,tag:d,props:{href:bb,rel:[e]},children:[{type:b,value:bc}]},{type:b,value:bd}]},{type:a,tag:v,props:{id:be},children:[{type:b,value:bf}]},{type:a,tag:c,props:{},children:[{type:b,value:bg},{type:a,tag:f,props:{},children:[{type:b,value:bh}]},{type:b,value:bi},{type:a,tag:f,props:{},children:[{type:b,value:bj}]},{type:b,value:bk}]},{type:a,tag:g,props:{code:U},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:b,value:U}]}]}]},{type:a,tag:v,props:{id:bl},children:[{type:b,value:bm}]},{type:a,tag:c,props:{},children:[{type:b,value:bn}]},{type:a,tag:c,props:{},children:[{type:b,value:bo},{type:a,tag:f,props:{},children:[{type:b,value:bp}]},{type:b,value:bq}]},{type:a,tag:g,props:{code:V},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:b,value:V}]}]}]},{type:a,tag:m,props:{id:W},children:[{type:b,value:p}]},{type:a,tag:c,props:{},children:[{type:b,value:br}]},{type:a,tag:l,props:{id:w},children:[{type:b,value:w}]},{type:a,tag:c,props:{},children:[{type:b,value:bs}]},{type:a,tag:l,props:{id:X},children:[{type:b,value:Y}]},{type:a,tag:c,props:{},children:[{type:b,value:bt}]},{type:a,tag:c,props:{},children:[{type:b,value:bu}]},{type:a,tag:m,props:{id:Z},children:[{type:b,value:_}]},{type:a,tag:c,props:{},children:[{type:b,value:bv},{type:a,tag:d,props:{href:bw,rel:[e]},children:[{type:b,value:bx}]},{type:b,value:A}]},{type:a,tag:c,props:{},children:[{type:b,value:by}]},{type:a,tag:v,props:{id:bz},children:[{type:b,value:bA}]},{type:a,tag:c,props:{},children:[{type:b,value:bB}]},{type:a,tag:c,props:{},children:[{type:b,value:bC},{type:a,tag:d,props:{href:bD,rel:[e]},children:[{type:b,value:bE}]}]},{type:a,tag:l,props:{id:x},children:[{type:b,value:x}]},{type:a,tag:B,props:{},children:[{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:z,rel:[e]},children:[{type:b,value:bF}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bG,rel:[e]},children:[{type:b,value:bH}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bI,rel:[e]},children:[{type:b,value:bJ}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bK,rel:[e]},children:[{type:b,value:bL}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bM,rel:[e]},children:[{type:b,value:bN}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bO,rel:[e]},children:[{type:b,value:bP}]}]}]},{type:a,tag:bQ,props:{},children:[]},{type:a,tag:B,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:bR},{type:a,tag:f,props:{},children:[{type:b,value:bS}]},{type:b,value:bT},{type:a,tag:f,props:{},children:[{type:b,value:bU}]},{type:b,value:bV},{type:a,tag:d,props:{href:bW,rel:[e]},children:[{type:a,tag:u,props:{alt:C,src:D},children:[]}]}]},{type:a,tag:j,props:{},children:[{type:b,value:bX},{type:a,tag:d,props:{href:bY,rel:[e]},children:[{type:b,value:bZ}]},{type:b,value:b_},{type:a,tag:d,props:{href:b$,rel:[e]},children:[{type:a,tag:u,props:{alt:C,src:D},children:[]}]}]}]}]},title_en:ca,slug:"my-sql-utf-8-mb-4-breaks-active-record-schema-setup",aliases:[$,ca],created_at:"2016-02-21T23:30:29.000Z",published_at:cb,updated_at:cb,tags:["database","mysql","ruby-on-rails","web"],moc:["Information Technology"],body:{type:aa,children:[{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:ab,rel:[e]},children:[{type:b,value:ac}]}]},{type:a,tag:c,props:{},children:[{type:b,value:ad}]},{type:a,tag:g,props:{code:F},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:a,tag:i,props:{class:s},children:[{type:a,tag:i,props:{},children:[{type:b,value:"~\u002Fapp $ RAILS_ENV=production rake db:migrate\n\n== 20150226092347 DeviseCreateUsers: migrating================================\n-- create_table(:users)\n   -\u003E 0.0070s\n-- add_index(:users, :email, {:unique=\u003Etrue})\nrake aborted!\nStandardError: An error has occurred, all later migrations canceled:\n\nMysql2::Error: Specified key was too long; max key length is 767 bytes: CREATE UNIQUE INDEX `index_users_on_email`  ON `users` (`email`) ~\u002F.rvm\u002Fgems\u002Fruby-2.2.2\u002Fgems\u002Fmysql2-0.4.2\u002Flib\u002Fmysql2\u002Fclient.rb:107:in `_query'\n......"}]}]}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:ae}]},{type:a,tag:g,props:{code:G},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:a,tag:i,props:{class:s},children:[{type:a,tag:i,props:{},children:[{type:b,value:"Mysql2::Error: Specified key was too long; max key length is 767 bytes"}]}]}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:af}]},{type:a,tag:l,props:{id:H},children:[{type:b,value:I}]},{type:a,tag:c,props:{},children:[{type:b,value:ag}]},{type:a,tag:c,props:{},children:[{type:b,value:ah},{type:a,tag:i,props:{},children:[{type:b,value:ai}]},{type:b,value:aj}]},{type:a,tag:c,props:{},children:[{type:a,tag:d,props:{href:y,rel:[e]},children:[{type:a,tag:u,props:{alt:h,src:y},children:[]}]}]},{type:a,tag:l,props:{id:J},children:[{type:b,value:K}]},{type:a,tag:c,props:{},children:[{type:b,value:ak},{type:a,tag:f,props:{},children:[{type:b,value:r}]},{type:b,value:al},{type:a,tag:f,props:{},children:[{type:b,value:am}]},{type:b,value:an}]},{type:a,tag:c,props:{},children:[{type:b,value:ao},{type:a,tag:f,props:{},children:[{type:b,value:ap}]},{type:b,value:aq}]},{type:a,tag:l,props:{id:L},children:[{type:b,value:M}]},{type:a,tag:m,props:{id:n},children:[{type:b,value:n}]},{type:a,tag:c,props:{},children:[{type:b,value:ar},{type:a,tag:as,props:{},children:[{type:b,value:at}]},{type:b,value:au}]},{type:a,tag:c,props:{},children:[{type:b,value:av},{type:a,tag:f,props:{},children:[{type:b,value:aw}]},{type:b,value:ax}]},{type:a,tag:m,props:{id:o},children:[{type:b,value:o}]},{type:a,tag:c,props:{},children:[{type:b,value:ay},{type:a,tag:d,props:{href:z,rel:[e]},children:[{type:b,value:az}]},{type:b,value:aA}]},{type:a,tag:c,props:{},children:[{type:b,value:aB},{type:a,tag:f,props:{},children:[{type:b,value:aC}]},{type:b,value:aD}]},{type:a,tag:g,props:{code:N},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:a,tag:i,props:{class:s},children:[{type:a,tag:i,props:{},children:[{type:b,value:"# config\u002Finitializers\u002Fmysqlpls.rb\nrequire 'active_record\u002Fconnection_adapters\u002Fabstract_mysql_adapter'\n\nmodule ActiveRecord\n  module ConnectionAdapters\n    class AbstractMysqlAdapter\n      NATIVE_DATABASE_TYPES[:string] = { :name =\u003E \"varchar\", :limit =\u003E 191 }\n    end\n  end\nend"}]}]}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:aE},{type:a,tag:f,props:{},children:[{type:b,value:r}]},{type:b,value:aF}]},{type:a,tag:g,props:{code:O},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:a,tag:i,props:{class:s},children:[{type:a,tag:i,props:{},children:[{type:b,value:"NATIVE_DATABASE_TYPES = {\n  primary_key: \"int auto_increment PRIMARY KEY\",\n  string:      { name: \"varchar\", limit: 255 },\n  text:        { name: \"text\" },\n  integer:     { name: \"int\", limit: 4 },\n  float:       { name: \"float\" },\n  decimal:     { name: \"decimal\" },\n  datetime:    { name: \"datetime\" },\n  time:        { name: \"time\" },\n  date:        { name: \"date\" },\n  binary:      { name: \"blob\" },\n  boolean:     { name: \"tinyint\", limit: 1 },\n  json:        { name: \"json\" },\n}"}]}]}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:aG},{type:a,tag:aH,props:{},children:[]},{type:b,value:aI},{type:a,tag:d,props:{href:aJ,rel:[e]},children:[{type:b,value:aK}]},{type:b,value:aL}]},{type:a,tag:m,props:{id:p},children:[{type:b,value:p}]},{type:a,tag:c,props:{},children:[{type:b,value:aM},{type:a,tag:f,props:{},children:[{type:b,value:r}]},{type:b,value:aN}]},{type:a,tag:c,props:{},children:[{type:b,value:aO},{type:a,tag:f,props:{},children:[{type:b,value:r}]},{type:b,value:aP},{type:a,tag:d,props:{href:aQ,rel:[e]},children:[{type:b,value:aR}]},{type:b,value:A}]},{type:a,tag:l,props:{id:P},children:[{type:b,value:Q}]},{type:a,tag:c,props:{},children:[{type:b,value:aS}]},{type:a,tag:m,props:{id:R},children:[{type:b,value:n}]},{type:a,tag:c,props:{},children:[{type:b,value:aT},{type:a,tag:f,props:{},children:[{type:b,value:aU}]},{type:b,value:aV}]},{type:a,tag:c,props:{},children:[{type:b,value:aW}]},{type:a,tag:m,props:{id:S},children:[{type:b,value:o}]},{type:a,tag:c,props:{},children:[{type:a,tag:aX,props:{},children:[{type:b,value:aY}]}]},{type:a,tag:c,props:{},children:[{type:b,value:aZ},{type:a,tag:f,props:{},children:[{type:b,value:a_}]},{type:b,value:a$}]},{type:a,tag:g,props:{code:T},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:a,tag:i,props:{class:s},children:[{type:a,tag:i,props:{},children:[{type:b,value:"[mysqld]\ninnodb_file_format = Barracuda\ninnodb_file_per_table = 1\ninnodb_large_prefix"}]}]}]}]}]},{type:a,tag:c,props:{},children:[{type:b,value:ba},{type:a,tag:d,props:{href:bb,rel:[e]},children:[{type:b,value:bc}]},{type:b,value:bd}]},{type:a,tag:v,props:{id:be},children:[{type:b,value:bf}]},{type:a,tag:c,props:{},children:[{type:b,value:bg},{type:a,tag:f,props:{},children:[{type:b,value:bh}]},{type:b,value:bi},{type:a,tag:f,props:{},children:[{type:b,value:bj}]},{type:b,value:bk}]},{type:a,tag:g,props:{code:U},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:a,tag:i,props:{class:s},children:[{type:a,tag:i,props:{},children:[{type:b,value:"create_table :table_name, options: 'ROW_FORMAT=DYNAMIC' do |t|\n  ..."}]}]}]}]}]},{type:a,tag:v,props:{id:bl},children:[{type:b,value:bm}]},{type:a,tag:c,props:{},children:[{type:b,value:bn}]},{type:a,tag:c,props:{},children:[{type:b,value:bo},{type:a,tag:f,props:{},children:[{type:b,value:bp}]},{type:b,value:bq}]},{type:a,tag:g,props:{code:V},children:[{type:a,tag:k,props:{},children:[{type:a,tag:g,props:{__ignoreMap:h},children:[{type:a,tag:i,props:{class:s},children:[{type:a,tag:i,props:{},children:[{type:b,value:"ActiveSupport.on_load :active_record do\n  module ActiveRecord::ConnectionAdapters   \n    class AbstractMysqlAdapter \n      def create_table_with_innodb_row_format(table_name, options = {}) \n        table_options = options.reverse_merge(:options =\u003E 'ENGINE=InnoDB ROW_FORMAT=DYNAMIC')\n\n        create_table_without_innodb_row_format(table_name, table_options) do |td|\n         yield td if block_given? \n        end\n      end\n      alias_method_chain :create_table, :innodb_row_format \n    end\n  end\nend"}]}]}]}]}]},{type:a,tag:m,props:{id:W},children:[{type:b,value:p}]},{type:a,tag:c,props:{},children:[{type:b,value:br}]},{type:a,tag:l,props:{id:w},children:[{type:b,value:w}]},{type:a,tag:c,props:{},children:[{type:b,value:bs}]},{type:a,tag:l,props:{id:X},children:[{type:b,value:Y}]},{type:a,tag:c,props:{},children:[{type:b,value:bt}]},{type:a,tag:c,props:{},children:[{type:b,value:bu}]},{type:a,tag:m,props:{id:Z},children:[{type:b,value:_}]},{type:a,tag:c,props:{},children:[{type:b,value:bv},{type:a,tag:d,props:{href:bw,rel:[e]},children:[{type:b,value:bx}]},{type:b,value:A}]},{type:a,tag:c,props:{},children:[{type:b,value:by}]},{type:a,tag:v,props:{id:bz},children:[{type:b,value:bA}]},{type:a,tag:c,props:{},children:[{type:b,value:bB}]},{type:a,tag:c,props:{},children:[{type:b,value:bC},{type:a,tag:d,props:{href:bD,rel:[e]},children:[{type:b,value:bE}]}]},{type:a,tag:l,props:{id:x},children:[{type:b,value:x}]},{type:a,tag:B,props:{},children:[{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:z,rel:[e]},children:[{type:b,value:bF}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bG,rel:[e]},children:[{type:b,value:bH}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bI,rel:[e]},children:[{type:b,value:bJ}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bK,rel:[e]},children:[{type:b,value:bL}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bM,rel:[e]},children:[{type:b,value:bN}]}]},{type:a,tag:j,props:{},children:[{type:a,tag:d,props:{href:bO,rel:[e]},children:[{type:b,value:bP}]}]}]},{type:a,tag:bQ,props:{},children:[]},{type:a,tag:B,props:{},children:[{type:a,tag:j,props:{},children:[{type:b,value:bR},{type:a,tag:f,props:{},children:[{type:b,value:bS}]},{type:b,value:bT},{type:a,tag:f,props:{},children:[{type:b,value:bU}]},{type:b,value:bV},{type:a,tag:d,props:{href:bW,rel:[e]},children:[{type:a,tag:u,props:{alt:C,src:D},children:[]}]}]},{type:a,tag:j,props:{},children:[{type:b,value:bX},{type:a,tag:d,props:{href:bY,rel:[e]},children:[{type:b,value:bZ}]},{type:b,value:b_},{type:a,tag:d,props:{href:b$,rel:[e]},children:[{type:a,tag:u,props:{alt:C,src:D},children:[]}]}]}]}],toc:{title:h,searchDepth:q,depth:q,links:[{id:H,depth:q,text:I},{id:J,depth:q,text:K},{id:L,depth:q,text:M,children:[{id:n,depth:t,text:n},{id:o,depth:t,text:o},{id:p,depth:t,text:p}]},{id:P,depth:q,text:Q,children:[{id:R,depth:t,text:n},{id:S,depth:t,text:o},{id:W,depth:t,text:p}]},{id:w,depth:q,text:w},{id:X,depth:q,text:Y,children:[{id:Z,depth:t,text:_}]},{id:x,depth:q,text:x}]}},_type:"markdown",_id:"garden:legacy-articles:2016-02-21-my-sql-utf-8-mb-4-breaks-active-record-schema-setup.md",_source:"garden",_file:"legacy-articles\u002F2016-02-21-my-sql-utf-8-mb-4-breaks-active-record-schema-setup.md",_extension:"md"}},prerenderedAt:void 0}}("element","text","p","a","nofollow","code-inline","code","","span","li","pre","h2","h3","方向","方法","總結",2,":string","line",3,"img","h4","結語","參考資料","https:\u002F\u002Fi0.wp.com\u002Fblog.fntsr.tw\u002Fwp-content\u002Fuploads\u002F2016\u002F02\u002F%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7-2016-02-20-%E4%B8%8A%E5%8D%883.12.53.png?ssl=1","https:\u002F\u002Fgithub.com\u002Frails\u002Frails\u002Fissues\u002F9855","。","ol","↩","https:\u002F\u002Fs.w.org\u002Fimages\u002Fcore\u002Femoji\u002F14.0.0\u002Fsvg\u002F21a9.svg",false,"~\u002Fapp $ RAILS_ENV=production rake db:migrate\n\n== 20150226092347 DeviseCreateUsers: migrating================================\n-- create_table(:users)\n   -\u003E 0.0070s\n-- add_index(:users, :email, {:unique=\u003Etrue})\nrake aborted!\nStandardError: An error has occurred, all later migrations canceled:\n\nMysql2::Error: Specified key was too long; max key length is 767 bytes: CREATE UNIQUE INDEX `index_users_on_email`  ON `users` (`email`) ~\u002F.rvm\u002Fgems\u002Fruby-2.2.2\u002Fgems\u002Fmysql2-0.4.2\u002Flib\u002Fmysql2\u002Fclient.rb:107:in `_query'\n......\n","Mysql2::Error: Specified key was too long; max key length is 767 bytes\n","什麼時候會採用utf8mb4作為-mysql-的編碼","什麼時候會採用 utf8mb4 作為 MySQL 的編碼？","為什麼-rails-改用utf8mb4編碼就會超過長度呢","為什麼 Rails 改用 utf8mb4 編碼就會超過長度呢？","解決方案-1","解決方案 (1)","# config\u002Finitializers\u002Fmysqlpls.rb\nrequire 'active_record\u002Fconnection_adapters\u002Fabstract_mysql_adapter'\n\nmodule ActiveRecord\n  module ConnectionAdapters\n    class AbstractMysqlAdapter\n      NATIVE_DATABASE_TYPES[:string] = { :name =\u003E \"varchar\", :limit =\u003E 191 }\n    end\n  end\nend\n","NATIVE_DATABASE_TYPES = {\n  primary_key: \"int auto_increment PRIMARY KEY\",\n  string:      { name: \"varchar\", limit: 255 },\n  text:        { name: \"text\" },\n  integer:     { name: \"int\", limit: 4 },\n  float:       { name: \"float\" },\n  decimal:     { name: \"decimal\" },\n  datetime:    { name: \"datetime\" },\n  time:        { name: \"time\" },\n  date:        { name: \"date\" },\n  binary:      { name: \"blob\" },\n  boolean:     { name: \"tinyint\", limit: 1 },\n  json:        { name: \"json\" },\n}\n","解決方案-2","解決方案 (2)","方向-1","方法-1","[mysqld]\ninnodb_file_format = Barracuda\ninnodb_file_per_table = 1\ninnodb_large_prefix\n","create_table :table_name, options: 'ROW_FORMAT=DYNAMIC' do |t|\n  ...\n","ActiveSupport.on_load :active_record do\n  module ActiveRecord::ConnectionAdapters   \n    class AbstractMysqlAdapter \n      def create_table_with_innodb_row_format(table_name, options = {}) \n        table_options = options.reverse_merge(:options =\u003E 'ENGINE=InnoDB ROW_FORMAT=DYNAMIC')\n\n        create_table_without_innodb_row_format(table_name, table_options) do |td|\n         yield td if block_given? \n        end\n      end\n      alias_method_chain :create_table, :innodb_row_format \n    end\n  end\nend\n","總結-1","附錄unicode-與-utf","附錄：Unicode 與 UTF","utf-8","UTF-8","解決 MySQL 使用 utf8mb4 編碼導致 Rails 資料庫遷移失敗的問題","root","http:\u002F\u002Fblog.fntsr.tw\u002Farticles\u002F293\u002F","解決 MySQL 使用 utf8mb4 編碼導致 Rails 資料庫遷移失敗的問題 - 深藏若虛","當 MySQL 使用 utf8mb4 編碼，會導致 Rails 資料庫遷移失敗，並輸出此錯誤訊息的問題：","上面那段訊息的重點在於：","也就說，作為 index 的欄位，他的長度（bytes）已經超過 MySQL 規定的 767 bytes 了，所以被 MySQL 拒絕繼續進行操作。","在一般的情況下，其實 utf8 編碼就已經很夠用了，然而在 MySQL 6.0 前， 使用 utf8 一個字元最多只使用 3-Byte，所以他並不能表達所有 unicode 的字符。若是你的網站會使用的一些罕見字符或是有使用者是用罕見字元當做人名，就可能會不在 utf8 所支援的字符中。所以在 MySQL 5.5 時，新增了 utf8mb4 作為擴充，使最大佔用長度增為 4-byte。","或許你會以為這種情況離生活很遠，但事實上在這個行動裝置隨處可見的情況下，這種情況反而更容易發生。為什麼？因為現在手機、平板等的輸入法，都多會附上表情符號諸如 [😎][😀][😁][😂][😃][😄][😅]","😆","，這 8 個表符都各佔了 4-byte，也就是超過 utf8 的支援。我想讀者應該對這些符號都挺有印象的，所以這種採用 utf8mb4 作為 MySQL 的編碼的需求其實是離我們開發者越來越近。","那是因為 Rails ActiveRecord 的 "," 資料欄位，等同於 MySQL 長度為 255 的 VARCHAR 欄位類型，所以使用 utf8 時，會使用 ","255 * 3 = 765"," (bytes)。","當編碼改成 utf8mb4 後，每個字元固定長度為 4-byte，所以大小就會有 ","255 * 4 = 1020"," (bytes) ，而超過 MySQL 用來當作索引的鍵值長度的最大值。這也就是為什麼在資料庫 Migrate 會報錯的原因所在。","那我們該如何解決這個問題呢？","em","這裡提供的方案僅限於目前網站在開發，並沒有擁有需要保存資料的情況下才能實行","。因為這個方案是透過修改 Rails 在資料表架構上，VARCHAR 類型欄位的預設長度。若是已經有資料的網站，可能會因為修改長度比現存的資料小，導致無法執行。","承襲上章所闡述的問題原因，為了改善這個問題，我們在這裡將 VARCHAR 的長度改成鍵值長度最大值以內。由算式 ","767 \u002F 4 = 191 ... 3"," 可得知，在這個範圍內若以 4-byte 來儲存 1 個字符，我們共可以儲存 191 個字符，最大長度就只會到 764 bytes，符合 MySQL 標準，因而解決這個問題。所以解決方向就如前面所述，要將 Rails 的 VARCHAR 類型欄位的預設長度改成 191 個字符。","這個方法來自於 Github Rails\u002FRails 專案中的 ","Issue #9885"," 中 @nanaya 的留言。","我們在專案目錄下新增 ",".\u002Fconfig\u002Finitializers\u002Fmysqlpls.rb"," 這個檔案，然後將下面的程式碼貼近檔案中儲存，就會將 VARCHAR 類型欄位的預設長度從 255 個字符改成 191 個字符，解決了這個問題。","這個程式碼主要是覆蓋掉原本 Rails 在這部分的設定，也就是說我要針對 ActiveRecord module 下的 ConnectionAdapters module 中的 AbstractMysqlAdapter Class 裡的 NATIVE_DATABASE_TYPES 雜湊常數中的 "," 鍵值所代表的值做重新定義。講得這麼密麻麻，可能有點不懂，我們可以先看看原始針對這部份的定義，如下","這部份就是將 migration 中定義的資料類型轉成 MySQL 的欄位類型，而我們就是將原本 ","string"," 類型定義的長度做了修改並覆蓋。這樣解釋應該好懂很多。想要更深入了解的可以直接看 Rails 關於這部分的","https:\u002F\u002Fgithub.com\u002Frails\u002Frails\u002Fblob\u002Fmaster\u002Factiverecord\u002Flib\u002Factive_record\u002Fconnection_adapters\u002Fabstract_mysql_adapter.rb#L37","原始碼","囉。","本解決方案是直接縮減 Rails 在 ActvieRecord 裡 "," 資料類型中的長度，以符合 MySQL 所支援的大小。","但如前面所述，若是你已經有資料，且你無法確保現有資料中 "," 資料類型的值都在 191 以下的話，就會比較麻煩。可能就要先將結構與資料分別 dump，改完結構後，再將資料中超過長度的值做縮減，最後再重新 import 到資料庫裡。這部分可參考 XDite 關於這部分所書寫的","http:\u002F\u002Fblog.xdite.net\u002Fposts\u002F2013\u002F12\u002F19\u002Fmysql-with-utf8mb4","部落格文章","這個方案我不打算如前一個方案般詳述，主要是因為我沒有實際去實驗，而只是將網路上看到的資料做個整理、筆記而已，實際運作上狀況如何，就不敢保證了，但至少紀錄了一個方向。","在 MySQL 5.5.14 時，新增了一個名為 ","innodb_large_prefix"," 的功能，啟用後可將鍵值長度擴充到 3072 bytes。而這個功能相依於 MySQL 5.5 新增的一個叫做 Barracuda 的 innodb 的檔案格式（File Formate），這個檔案格式除了支援 innodb 原有的資料列格式（Row Formats），還包括了新的資料列格式：COMPRESSED 和 DYNAMIC。","所以要解決這個問題，就是修改 MySQL 的選項，將檔案格式改成 Barracuda，並且啟用 innodb_large_prefix 這個選項去擴充鍵值長度。最後在 Rails 建立表格時，指定使用 DYNAMIC 的資料列格式即可。","strong","在進行本方法前，請先將資料庫備份，或是使用虛擬機器或是容器開一個新的資料庫伺服器作為練習、試驗","在 MySQL 的設定檔 ","my.conf"," 加入下面內容：","在 Rails 部分有兩個選項，擇一即可，見仁見智。有興趣的可以參考在同一篇 Issue 裡，從","https:\u002F\u002Fgithub.com\u002Frails\u002Frails\u002Fissues\u002F9855#issuecomment-57666389","這篇回覆","開始的討論，主要就是 @NaN1488 和 @yyyc514 兩人回覆的部分。","rails-1","Rails (1)","在 migration 中的 ","create_table"," 方法加入 ","option"," 參數：","rails-2","Rails (2)","若是覺得要在每個有建立資料表的 migration 一一加入上述選項的參數太麻煩的話，也可以直接加入一個 MonkeyPatch。這個 patch 會幫你在建立資料表時直接幫你加入該參數。","在專案目錄下新增 ",".\u002Fconfig\u002Finitializers\u002Far_innodb_row_format.rb"," 這個檔案，並貼上程式碼：","與前一方案是透過修改 Rails 對 string 欄位類型的預設長度達到目的，這個方案則是透過升級、修改 MySQL 的設定檔，擴大鍵值長度去修正這個錯誤。","兩個方案方向不一樣，所以也沒有孰優孰劣，就看開發者當前的專案適合哪個方案了。若是沒有資料庫修改權限的，第一個方案我想就是一個挺貼切的做法，也讓專案在部署的難度降低。若是擁有資料庫伺服器管理權限，也可以使用第二個方案，直接一勞永逸囉。","Unicode 是一種文字、符號在電腦科學領域的業界標準，由非營利機構 The Unicode Consortium 負責。在 1991 年 10月發布第一個版本，隔年 6 月發布 1.0.1 擴增了中日韓統一表意文字最初的 20,902 個字，之後陸陸續需編修與擴增。最近的發布是在 2015 年 6 月時的 8.0 版本，總計有 120,737 個字符。","UTF 為 Unicode Transformation Format，中文為 Unicode轉換格式，即為 Unicode 的實作方式。","UTF-8 的全名為 8-bit Unicode Transformation Format，即以 1 個位元組（1-byte = 8-bit）為單位，用 1 到 4 個位元組表示一個字符編碼","http:\u002F\u002Fblog.fntsr.tw\u002Farticles\u002F293\u002F#fn-293-2","1","由於 UTF-8 的長度是可變動的，所以 ASCII 可以作為 UTF-8 的一個子集，所以現存的 ASCII 文字不需要轉換。","utf8mb3utf8mb4","utf8mb3、utf8mb4","utf8mb3、utf8mb4 都是 MySQL 所支援的 Unicode 編碼實作，兩者的差別在於 utf8mb3 最大佔用長度為 3-byte，utf8mb4 則為 4-byte。所以其實兩者幾乎是一樣的，但是 utf8mb4 多了對擴充字符的支持，如本篇文章所提到的表情符號。","utf8mb4 是 MySQL 5.5 所新增的，因為原本 MySQL 5.5 的 utf8 只有支持最大佔用長度為 3-byte，所以新增這個實作作為擴充。到了 MySQL 6.0，原本的 utf8 被更名為 utf8mb3，並加入新的 utf8 編碼實作，並預設支最大佔用長度為 4-byte。","http:\u002F\u002Fblog.fntsr.tw\u002Farticles\u002F293\u002F#fn-293-3","2","MySQL utf8mb4 breaks ActiveRecord schema setup","https:\u002F\u002Fmathiasbynens.be\u002Fnotes\u002Fmysql-utf8mb4","How to support full Unicode in MySQL databases","https:\u002F\u002Fencoding.spec.whatwg.org\u002F#utf-8","Encoding: Living Standard","http:\u002F\u002Fwww.utf8-chartable.de\u002Funicode-utf8-table.pl?start=128512","UTF-8 encoding table and Unicode characters","https:\u002F\u002Fmothereff.in\u002Fbyte-counter","UTF-8 string length & byte counter","http:\u002F\u002Fblog.kamipo.net\u002Fentry\u002F2012\u002F11\u002F13\u002F102024","MySQL(InnoDB) で “Index column size too large. The maximum column size is 767 bytes.” いわれるときの対策","hr","原來的規範允許長達 6 位元組，但是在 2003 年 11 月 UTF-8 被 RFC 3629 重新規範，只能使用原來 Unicode 定義的區域，即 ","U+0000"," 到 ","U+10FFFF"," 。 ","http:\u002F\u002Fblog.fntsr.tw\u002Farticles\u002F293\u002F#fnref-293-2","這部分可以參照 ","http:\u002F\u002Fforums.mysql.com\u002Fread.php?3,199803,199803","MySQL 6.0.4 Alpha 的 Release Note","。 ","http:\u002F\u002Fblog.fntsr.tw\u002Farticles\u002F293\u002F#fnref-293-3","MySQL utf8mb4 breaks ActiveRecord schema setup",null))