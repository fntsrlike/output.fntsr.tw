export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb){return {data:{"content-query-c5kXjvWBtD":{_path:"\u002Flegacy-articles\u002F2014-11-07-how-to-build-discourse-with-docker",_dir:"legacy-articles",_draft:E,_partial:E,_locale:"en",_empty:E,title:ai,description:h,excerpt:{type:aj,children:[{type:a,tag:d,props:{},children:[{type:a,tag:f,props:{href:ak,rel:[g]},children:[{type:b,value:al}]}]},{type:a,tag:d,props:{},children:[{type:b,value:am},{type:a,tag:an,props:{},children:[{type:b,value:t},{type:a,tag:f,props:{href:ao,rel:[g]},children:[{type:b,value:ap}]},{type:b,value:aq}]},{type:b,value:t},{type:a,tag:f,props:{href:ar,rel:[g]},children:[{type:b,value:as}]},{type:b,value:at}]},{type:a,tag:d,props:{},children:[{type:b,value:au}]},{type:a,tag:m,props:{id:F},children:[{type:b,value:G}]},{type:a,tag:d,props:{},children:[{type:b,value:av}]},{type:a,tag:r,props:{},children:[{type:a,tag:i,props:{},children:[{type:b,value:aw}]},{type:a,tag:i,props:{},children:[{type:b,value:ax}]}]},{type:a,tag:m,props:{id:H},children:[{type:b,value:I}]},{type:a,tag:d,props:{},children:[{type:b,value:ay}]},{type:a,tag:r,props:{},children:[{type:a,tag:i,props:{},children:[{type:b,value:az},{type:a,tag:c,props:{},children:[{type:b,value:aA}]},{type:b,value:aB},{type:a,tag:c,props:{},children:[{type:b,value:aC}]},{type:b,value:o}]},{type:a,tag:i,props:{},children:[{type:b,value:aD},{type:a,tag:c,props:{},children:[{type:b,value:u}]},{type:b,value:aE},{type:a,tag:c,props:{},children:[{type:b,value:aF}]},{type:b,value:o}]},{type:a,tag:i,props:{},children:[{type:b,value:aG},{type:a,tag:c,props:{},children:[{type:b,value:v}]},{type:b,value:aH},{type:a,tag:c,props:{},children:[{type:b,value:v}]},{type:b,value:aI},{type:a,tag:c,props:{},children:[{type:b,value:aJ}]},{type:b,value:o}]}]},{type:a,tag:m,props:{id:J},children:[{type:b,value:K}]},{type:a,tag:l,props:{id:L},children:[{type:b,value:M}]},{type:a,tag:d,props:{},children:[{type:b,value:aK},{type:a,tag:f,props:{href:w,rel:[g]},children:[{type:b,value:x}]},{type:b,value:aL},{type:a,tag:c,props:{},children:[{type:b,value:y}]},{type:b,value:aM}]},{type:a,tag:e,props:{code:N},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:N}]}]}]},{type:a,tag:l,props:{id:O},children:[{type:b,value:P}]},{type:a,tag:z,props:{id:aN},children:[{type:b,value:A}]},{type:a,tag:d,props:{},children:[{type:b,value:aO},{type:a,tag:c,props:{},children:[{type:b,value:aP}]},{type:b,value:aQ},{type:a,tag:c,props:{},children:[{type:b,value:u}]},{type:b,value:aR}]},{type:a,tag:d,props:{},children:[{type:b,value:aS},{type:a,tag:c,props:{},children:[{type:b,value:aT}]},{type:b,value:o}]},{type:a,tag:e,props:{code:Q},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:Q}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:aU}]},{type:a,tag:e,props:{code:R},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:R}]}]}]},{type:a,tag:l,props:{id:S},children:[{type:b,value:T}]},{type:a,tag:d,props:{},children:[{type:b,value:aV},{type:a,tag:c,props:{},children:[{type:b,value:y}]},{type:b,value:aW},{type:a,tag:c,props:{},children:[{type:b,value:B}]},{type:b,value:aX},{type:a,tag:c,props:{},children:[{type:b,value:aY}]},{type:b,value:aZ}]},{type:a,tag:e,props:{code:U},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:U}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:a_},{type:a,tag:c,props:{},children:[{type:b,value:a$}]},{type:b,value:ba},{type:a,tag:c,props:{},children:[{type:b,value:bb}]},{type:b,value:bc}]},{type:a,tag:l,props:{id:V},children:[{type:b,value:W}]},{type:a,tag:d,props:{},children:[{type:b,value:bd}]},{type:a,tag:d,props:{},children:[{type:b,value:be}]},{type:a,tag:e,props:{code:X},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:X}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:bf},{type:a,tag:c,props:{},children:[{type:b,value:bg}]},{type:b,value:bh},{type:a,tag:c,props:{},children:[{type:b,value:bi}]},{type:b,value:bj}]},{type:a,tag:bk,props:{id:bl},children:[{type:b,value:C}]},{type:a,tag:z,props:{id:bm},children:[{type:b,value:A}]},{type:a,tag:d,props:{},children:[{type:b,value:bn}]},{type:a,tag:d,props:{},children:[{type:b,value:bo},{type:a,tag:f,props:{href:bp,rel:[g]},children:[{type:b,value:C}]},{type:b,value:bq}]},{type:a,tag:l,props:{id:Y},children:[{type:b,value:Z}]},{type:a,tag:d,props:{},children:[{type:b,value:br},{type:a,tag:c,props:{},children:[{type:b,value:bs}]},{type:b,value:bt}]},{type:a,tag:e,props:{code:_},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:_}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:bu},{type:a,tag:f,props:{href:bv,rel:[g]},children:[{type:b,value:bw}]},{type:b,value:bx}]},{type:a,tag:d,props:{},children:[{type:b,value:by},{type:a,tag:c,props:{},children:[{type:b,value:bz}]},{type:b,value:bA},{type:a,tag:c,props:{},children:[{type:b,value:bB}]},{type:b,value:bC}]},{type:a,tag:e,props:{code:$},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:$}]}]}]},{type:a,tag:l,props:{id:aa},children:[{type:b,value:ab}]},{type:a,tag:d,props:{},children:[{type:b,value:bD},{type:a,tag:c,props:{},children:[{type:b,value:bE}]},{type:b,value:bF}]},{type:a,tag:e,props:{code:ac},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:ac}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:bG},{type:a,tag:c,props:{},children:[{type:b,value:bH}]},{type:b,value:bI}]},{type:a,tag:e,props:{code:ad},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:b,value:ad}]}]}]},{type:a,tag:l,props:{id:ae},children:[{type:b,value:af}]},{type:a,tag:d,props:{},children:[{type:b,value:bJ},{type:a,tag:c,props:{},children:[{type:b,value:bK}]},{type:b,value:bL}]},{type:a,tag:d,props:{},children:[{type:b,value:bM},{type:a,tag:c,props:{},children:[{type:b,value:bN}]},{type:b,value:bO},{type:a,tag:c,props:{},children:[{type:b,value:bP}]},{type:b,value:bQ}]},{type:a,tag:d,props:{},children:[{type:b,value:bR}]},{type:a,tag:d,props:{},children:[{type:b,value:bS},{type:a,tag:f,props:{href:D,rel:[g]},children:[{type:b,value:D}]},{type:b,value:bT}]},{type:a,tag:m,props:{id:s},children:[{type:b,value:s}]},{type:a,tag:d,props:{},children:[{type:b,value:bU},{type:a,tag:c,props:{},children:[{type:b,value:B}]},{type:b,value:bV}]},{type:a,tag:m,props:{id:ag},children:[{type:b,value:ah}]},{type:a,tag:r,props:{},children:[{type:a,tag:i,props:{},children:[{type:a,tag:f,props:{href:bW,rel:[g]},children:[{type:b,value:bX}]}]},{type:a,tag:i,props:{},children:[{type:a,tag:f,props:{href:w,rel:[g]},children:[{type:b,value:x}]}]},{type:a,tag:i,props:{},children:[{type:a,tag:f,props:{href:bY,rel:[g]},children:[{type:b,value:bZ}]}]},{type:a,tag:i,props:{},children:[{type:a,tag:f,props:{href:b_,rel:[g]},children:[{type:b,value:b$}]}]}]}]},title_en:ca,slug:"how-to-build-discourse-with-docker",aliases:[ai,ca],created_at:"2014-11-07T15:15:29.000Z",published_at:cb,updated_at:cb,tags:["docker"],moc:["Information Technology"],body:{type:aj,children:[{type:a,tag:d,props:{},children:[{type:a,tag:f,props:{href:ak,rel:[g]},children:[{type:b,value:al}]}]},{type:a,tag:d,props:{},children:[{type:b,value:am},{type:a,tag:an,props:{},children:[{type:b,value:t},{type:a,tag:f,props:{href:ao,rel:[g]},children:[{type:b,value:ap}]},{type:b,value:aq}]},{type:b,value:t},{type:a,tag:f,props:{href:ar,rel:[g]},children:[{type:b,value:as}]},{type:b,value:at}]},{type:a,tag:d,props:{},children:[{type:b,value:au}]},{type:a,tag:m,props:{id:F},children:[{type:b,value:G}]},{type:a,tag:d,props:{},children:[{type:b,value:av}]},{type:a,tag:r,props:{},children:[{type:a,tag:i,props:{},children:[{type:b,value:aw}]},{type:a,tag:i,props:{},children:[{type:b,value:ax}]}]},{type:a,tag:m,props:{id:H},children:[{type:b,value:I}]},{type:a,tag:d,props:{},children:[{type:b,value:ay}]},{type:a,tag:r,props:{},children:[{type:a,tag:i,props:{},children:[{type:b,value:az},{type:a,tag:c,props:{},children:[{type:b,value:aA}]},{type:b,value:aB},{type:a,tag:c,props:{},children:[{type:b,value:aC}]},{type:b,value:o}]},{type:a,tag:i,props:{},children:[{type:b,value:aD},{type:a,tag:c,props:{},children:[{type:b,value:u}]},{type:b,value:aE},{type:a,tag:c,props:{},children:[{type:b,value:aF}]},{type:b,value:o}]},{type:a,tag:i,props:{},children:[{type:b,value:aG},{type:a,tag:c,props:{},children:[{type:b,value:v}]},{type:b,value:aH},{type:a,tag:c,props:{},children:[{type:b,value:v}]},{type:b,value:aI},{type:a,tag:c,props:{},children:[{type:b,value:aJ}]},{type:b,value:o}]}]},{type:a,tag:m,props:{id:J},children:[{type:b,value:K}]},{type:a,tag:l,props:{id:L},children:[{type:b,value:M}]},{type:a,tag:d,props:{},children:[{type:b,value:aK},{type:a,tag:f,props:{href:w,rel:[g]},children:[{type:b,value:x}]},{type:b,value:aL},{type:a,tag:c,props:{},children:[{type:b,value:y}]},{type:b,value:aM}]},{type:a,tag:e,props:{code:N},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"# 先移動到你想要放置專案的資料夾，通常會是 \u002Fvar ，本例則是使用 \u002Fsrv\n~ $ cd \u002Fsrv\n\n# 將 discourse_docker 專案 git clone 下來，並將資料夾名稱改為 discourse\n\u002Fsrv $ git clone https:\u002F\u002Fgithub.com\u002Fdiscourse\u002Fdiscourse_docker.git discourse\n\u002Fsrv $ cd discourse\n\n# 把 All in one 的設定範例複製一份到 container 資料夾，並改為自己想要的名稱，這裡是用`childish`。\n\u002Fsrv\u002Fdiscourse $ cp samples\u002Fstandalone.yml containers\u002Fchildish.yml"}]}]}]}]}]},{type:a,tag:l,props:{id:O},children:[{type:b,value:P}]},{type:a,tag:z,props:{id:aN},children:[{type:b,value:A}]},{type:a,tag:d,props:{},children:[{type:b,value:aO},{type:a,tag:c,props:{},children:[{type:b,value:aP}]},{type:b,value:aQ},{type:a,tag:c,props:{},children:[{type:b,value:u}]},{type:b,value:aR}]},{type:a,tag:d,props:{},children:[{type:b,value:aS},{type:a,tag:c,props:{},children:[{type:b,value:aT}]},{type:b,value:o}]},{type:a,tag:e,props:{code:Q},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"\u002Fsrv\u002Fdiscourse $ vim containers\u002Fchildish.yml"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:aU}]},{type:a,tag:e,props:{code:R},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"## \u002Fsrv\u002Fdiscourse_docker\u002Fcontainers\u002Fchildish.yml\n\n## 設定你要輸出的 Port，可以配合你網頁伺服器的設定，這裡是將`10080`對到`80`\n## 若不想使用網頁伺服器，可以直接將`80`對到`80`，這樣就可以直接讀取你的 domain 做拜訪。\nexpose:\n  - \"10080:80\"  # 把 host 的 port 10080 轉到 container 的 port 80 (http)\n  - \"2222:22\"   # 把 host 的 port 2222 轉到 container 的 port 22 (ssh)\n\n## 分給資料庫的記憶體，如果你的記憶體有 1 GB，設定 128MB ，若有 4GB ，則建議設為 1GB\ndb_shared_buffers: \"256MB\"\n\n## Unicorn 的 workers 數量，如果你的記憶體有 1 GB ，則設定 2：若是有 2 GB ，則建議 3 或 4。\nUNICORN_WORKERS: 3\n\n## 設定 DISCOURSE_DEVELOPER_EMAILS 為您的 Email，記得加單引號。\nDISCOURSE_DEVELOPER_EMAILS: 'diz@childish.tw'\n\n## 設定 DISCOURSE_HOSTNAME 為您的 hostname ，記得加單引號。\n## 若只是架設在本機上，可以寫 localhost\nDISCOURSE_HOSTNAME: 'diz.childish.tw'\n\n## 設定郵件伺服器資訊，這裡很重要，若是沒設定好就無法使用論壇。非常不建議直接使用 Gmail。\n## 建議：這部分可以使用 Mandrill 的服務，詳細可參見本文的 Mail Test 說明。\nDISCOURSE_SMTP_ADDRESS: smtp.mandrillapp.com       # 必填\nDISCOURSE_SMTP_PORT: 587                           # 選填\nDISCOURSE_SMTP_USER_NAME: diz@childish.tw          # 選填\nDISCOURSE_SMTP_PASSWORD: MANDRILL_APP_PASSWORD     # 選填\n\n## 這裡是放置你論壇資料的目錄，包括 Database。\n## 將 \u002Fvar\u002Fdiscourse\u002F 改為你專案的路徑，就是你 git clone 的目錄。這裡是改 \u002Fsrv\u002Fdiscourse\u002F。\n## 建議：可以把原本的 standalone 改成你的設定檔名稱或 hostname，讓以後要架多重論壇時可以方便管理。這裡是改成 diz.childish.tw\nvolumes:\n  - volume:\n      host: \u002Fsrv\u002Fdiscourse\u002Fshared\u002Fdiz.childish.tw\n      guest: \u002Fshared\n  - volume:\n      host: \u002Fsrv\u002Fdiscourse\u002Fshared\u002Fdiz.childish.tw\u002Flog\u002Fvar-log\n      guest: \u002Fvar\u002Flog"}]}]}]}]}]},{type:a,tag:l,props:{id:S},children:[{type:b,value:T}]},{type:a,tag:d,props:{},children:[{type:b,value:aV},{type:a,tag:c,props:{},children:[{type:b,value:y}]},{type:b,value:aW},{type:a,tag:c,props:{},children:[{type:b,value:B}]},{type:b,value:aX},{type:a,tag:c,props:{},children:[{type:b,value:aY}]},{type:b,value:aZ}]},{type:a,tag:e,props:{code:U},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"\u002Fsrv\u002Fdiscourse $ .\u002Flauncher\nUsage: launcher COMMAND CONFIG [--skip-prereqs]\nCommands:\n    start:      Start\u002Finitialize a container\n    stop:       Stop a running container\n    restart:    Restart a container\n    destroy:    Stop and remove a container\n    enter:      Use nsenter to enter a container\n    ssh:        Start a bash shell in a running container\n    logs:       Docker logs for container\n    mailtest:   Test the mail settings in a container\n    bootstrap:  Bootstrap a container for the config based on a template\n    rebuild:    Rebuild a container (destroy old, bootstrap, start new)\n\nOptions:\n    --skip-prereqs   Don't check prerequisites"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:a_},{type:a,tag:c,props:{},children:[{type:b,value:a$}]},{type:b,value:ba},{type:a,tag:c,props:{},children:[{type:b,value:bb}]},{type:b,value:bc}]},{type:a,tag:l,props:{id:V},children:[{type:b,value:W}]},{type:a,tag:d,props:{},children:[{type:b,value:bd}]},{type:a,tag:d,props:{},children:[{type:b,value:be}]},{type:a,tag:e,props:{code:X},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"# launcher mailtest \u003Cconfig_name\u003E\n\u002Fsrv\u002Fdiscourse $ .\u002Flauncher mailtest childish\nEnter your email address: diz@childish.tw\nDISCOURSE_SMTP_ settings:\n DISCOURSE_SMTP_PASSWORD = (hidden)\n DISCOURSE_SMTP_USER_NAME = diz@childish.tw\n DISCOURSE_SMTP_ADDRESS = smtp.mandrillapp.com\n DISCOURSE_SMTP_PORT = 587\n\nYou are correctly configured to use: Mandrill\nSuccess!"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:bf},{type:a,tag:c,props:{},children:[{type:b,value:bg}]},{type:b,value:bh},{type:a,tag:c,props:{},children:[{type:b,value:bi}]},{type:b,value:bj}]},{type:a,tag:bk,props:{id:bl},children:[{type:b,value:C}]},{type:a,tag:z,props:{id:bm},children:[{type:b,value:A}]},{type:a,tag:d,props:{},children:[{type:b,value:bn}]},{type:a,tag:d,props:{},children:[{type:b,value:bo},{type:a,tag:f,props:{href:bp,rel:[g]},children:[{type:b,value:C}]},{type:b,value:bq}]},{type:a,tag:l,props:{id:Y},children:[{type:b,value:Z}]},{type:a,tag:d,props:{},children:[{type:b,value:br},{type:a,tag:c,props:{},children:[{type:b,value:bs}]},{type:b,value:bt}]},{type:a,tag:e,props:{code:_},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"# launcher bootstrap \u003Cconfig_name\u003E\n\u002Fsrv\u002Fdiscourse $ .\u002Flauncher bootstrap childish\n........."}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:bu},{type:a,tag:f,props:{href:bv,rel:[g]},children:[{type:b,value:bw}]},{type:b,value:bx}]},{type:a,tag:d,props:{},children:[{type:b,value:by},{type:a,tag:c,props:{},children:[{type:b,value:bz}]},{type:b,value:bA},{type:a,tag:c,props:{},children:[{type:b,value:bB}]},{type:b,value:bC}]},{type:a,tag:e,props:{code:$},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"$ docker images\nREPOSITORY                 TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nlocal_discourse\u002Fchildish   latest              61004de94a0c        22 hours ago        1.489 GB"}]}]}]}]}]},{type:a,tag:l,props:{id:aa},children:[{type:b,value:ab}]},{type:a,tag:d,props:{},children:[{type:b,value:bD},{type:a,tag:c,props:{},children:[{type:b,value:bE}]},{type:b,value:bF}]},{type:a,tag:e,props:{code:ac},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"# launcher start \u003Cconfig_name\u003E\n\u002Fsrv\u002Fdiscourse $ .\u002Flauncher start childish\nNo cid found, creating a new container\nCalculated ENV: .............. # Your enveironment setting\n945342195fc05cbfa706f3d1875ab6383fbf5d21a73488367908d9ece21e1abd"}]}]}]}]}]},{type:a,tag:d,props:{},children:[{type:b,value:bG},{type:a,tag:c,props:{},children:[{type:b,value:bH}]},{type:b,value:bI}]},{type:a,tag:e,props:{code:ad},children:[{type:a,tag:j,props:{},children:[{type:a,tag:e,props:{__ignoreMap:h},children:[{type:a,tag:k,props:{class:n},children:[{type:a,tag:k,props:{},children:[{type:b,value:"\u002Fsrv\u002Fdocker\u002Fdiscourse $ docker ps\nCONTAINER ID        IMAGE                             COMMAND       CREATED         STATUS         PORTS                                         NAMES\n945342195fc0        local_discourse\u002Fchildish:latest   \"\u002Fsbin\u002Fboot\"  52 seconds ago  Up 51 seconds  0.0.0.0:2222-\u003E22\u002Ftcp, 0.0.0.0:10080-\u003E80\u002Ftcp   childish"}]}]}]}]}]},{type:a,tag:l,props:{id:ae},children:[{type:b,value:af}]},{type:a,tag:d,props:{},children:[{type:b,value:bJ},{type:a,tag:c,props:{},children:[{type:b,value:bK}]},{type:b,value:bL}]},{type:a,tag:d,props:{},children:[{type:b,value:bM},{type:a,tag:c,props:{},children:[{type:b,value:bN}]},{type:b,value:bO},{type:a,tag:c,props:{},children:[{type:b,value:bP}]},{type:b,value:bQ}]},{type:a,tag:d,props:{},children:[{type:b,value:bR}]},{type:a,tag:d,props:{},children:[{type:b,value:bS},{type:a,tag:f,props:{href:D,rel:[g]},children:[{type:b,value:D}]},{type:b,value:bT}]},{type:a,tag:m,props:{id:s},children:[{type:b,value:s}]},{type:a,tag:d,props:{},children:[{type:b,value:bU},{type:a,tag:c,props:{},children:[{type:b,value:B}]},{type:b,value:bV}]},{type:a,tag:m,props:{id:ag},children:[{type:b,value:ah}]},{type:a,tag:r,props:{},children:[{type:a,tag:i,props:{},children:[{type:a,tag:f,props:{href:bW,rel:[g]},children:[{type:b,value:bX}]}]},{type:a,tag:i,props:{},children:[{type:a,tag:f,props:{href:w,rel:[g]},children:[{type:b,value:x}]}]},{type:a,tag:i,props:{},children:[{type:a,tag:f,props:{href:bY,rel:[g]},children:[{type:b,value:bZ}]}]},{type:a,tag:i,props:{},children:[{type:a,tag:f,props:{href:b_,rel:[g]},children:[{type:b,value:b$}]}]}]}],toc:{title:h,searchDepth:p,depth:p,links:[{id:F,depth:p,text:G},{id:H,depth:p,text:I},{id:J,depth:p,text:K,children:[{id:L,depth:q,text:M},{id:O,depth:q,text:P},{id:S,depth:q,text:T},{id:V,depth:q,text:W},{id:Y,depth:q,text:Z},{id:aa,depth:q,text:ab},{id:ae,depth:q,text:af}]},{id:s,depth:p,text:s},{id:ag,depth:p,text:ah}]}},_type:"markdown",_id:"garden:legacy-articles:2014-11-07-how-to-build-discourse-with-docker.md",_source:"garden",_file:"legacy-articles\u002F2014-11-07-how-to-build-discourse-with-docker.md",_extension:"md"}},prerenderedAt:void 0}}("element","text","code-inline","p","code","a","nofollow","","li","pre","span","h3","h2","line","。",2,3,"ul","後記","「","app.yml","port 80","https:\u002F\u002Fgithub.com\u002Fdiscourse\u002Fdiscourse_docker","discourse\u002Fdiscourse_docker","git clone","h5","2017-01-16 補充：","launcher","Mandrill","http:\u002F\u002Fdiz.childish.tw\u002F",false,"requirement","Requirement","開始之前before-beginning","開始之前（Before Beginning）","設定與安裝set-up","設定與安裝（Set Up）","step-1-install-discourse","Step 1: Install Discourse","# 先移動到你想要放置專案的資料夾，通常會是 \u002Fvar ，本例則是使用 \u002Fsrv\n~ $ cd \u002Fsrv\n\n# 將 discourse_docker 專案 git clone 下來，並將資料夾名稱改為 discourse\n\u002Fsrv $ git clone https:\u002F\u002Fgithub.com\u002Fdiscourse\u002Fdiscourse_docker.git discourse\n\u002Fsrv $ cd discourse\n\n# 把 All in one 的設定範例複製一份到 container 資料夾，並改為自己想要的名稱，這裡是用`childish`。\n\u002Fsrv\u002Fdiscourse $ cp samples\u002Fstandalone.yml containers\u002Fchildish.yml\n","step-2-edit-configuration","Step 2: Edit Configuration","\u002Fsrv\u002Fdiscourse $ vim containers\u002Fchildish.yml\n","## \u002Fsrv\u002Fdiscourse_docker\u002Fcontainers\u002Fchildish.yml\n\n## 設定你要輸出的 Port，可以配合你網頁伺服器的設定，這裡是將`10080`對到`80`\n## 若不想使用網頁伺服器，可以直接將`80`對到`80`，這樣就可以直接讀取你的 domain 做拜訪。\nexpose:\n  - \"10080:80\"  # 把 host 的 port 10080 轉到 container 的 port 80 (http)\n  - \"2222:22\"   # 把 host 的 port 2222 轉到 container 的 port 22 (ssh)\n\n## 分給資料庫的記憶體，如果你的記憶體有 1 GB，設定 128MB ，若有 4GB ，則建議設為 1GB\ndb_shared_buffers: \"256MB\"\n\n## Unicorn 的 workers 數量，如果你的記憶體有 1 GB ，則設定 2：若是有 2 GB ，則建議 3 或 4。\nUNICORN_WORKERS: 3\n\n## 設定 DISCOURSE_DEVELOPER_EMAILS 為您的 Email，記得加單引號。\nDISCOURSE_DEVELOPER_EMAILS: 'diz@childish.tw'\n\n## 設定 DISCOURSE_HOSTNAME 為您的 hostname ，記得加單引號。\n## 若只是架設在本機上，可以寫 localhost\nDISCOURSE_HOSTNAME: 'diz.childish.tw'\n\n## 設定郵件伺服器資訊，這裡很重要，若是沒設定好就無法使用論壇。非常不建議直接使用 Gmail。\n## 建議：這部分可以使用 Mandrill 的服務，詳細可參見本文的 Mail Test 說明。\nDISCOURSE_SMTP_ADDRESS: smtp.mandrillapp.com       # 必填\nDISCOURSE_SMTP_PORT: 587                           # 選填\nDISCOURSE_SMTP_USER_NAME: diz@childish.tw          # 選填\nDISCOURSE_SMTP_PASSWORD: MANDRILL_APP_PASSWORD     # 選填\n\n## 這裡是放置你論壇資料的目錄，包括 Database。\n## 將 \u002Fvar\u002Fdiscourse\u002F 改為你專案的路徑，就是你 git clone 的目錄。這裡是改 \u002Fsrv\u002Fdiscourse\u002F。\n## 建議：可以把原本的 standalone 改成你的設定檔名稱或 hostname，讓以後要架多重論壇時可以方便管理。這裡是改成 diz.childish.tw\nvolumes:\n  - volume:\n      host: \u002Fsrv\u002Fdiscourse\u002Fshared\u002Fdiz.childish.tw\n      guest: \u002Fshared\n  - volume:\n      host: \u002Fsrv\u002Fdiscourse\u002Fshared\u002Fdiz.childish.tw\u002Flog\u002Fvar-log\n      guest: \u002Fvar\u002Flog\n","command","Command","\u002Fsrv\u002Fdiscourse $ .\u002Flauncher\nUsage: launcher COMMAND CONFIG [--skip-prereqs]\nCommands:\n    start:      Start\u002Finitialize a container\n    stop:       Stop a running container\n    restart:    Restart a container\n    destroy:    Stop and remove a container\n    enter:      Use nsenter to enter a container\n    ssh:        Start a bash shell in a running container\n    logs:       Docker logs for container\n    mailtest:   Test the mail settings in a container\n    bootstrap:  Bootstrap a container for the config based on a template\n    rebuild:    Rebuild a container (destroy old, bootstrap, start new)\n\nOptions:\n    --skip-prereqs   Don't check prerequisites\n","step-3-mail-test","Step 3: Mail Test","# launcher mailtest \u003Cconfig_name\u003E\n\u002Fsrv\u002Fdiscourse $ .\u002Flauncher mailtest childish\nEnter your email address: diz@childish.tw\nDISCOURSE_SMTP_ settings:\n DISCOURSE_SMTP_PASSWORD = (hidden)\n DISCOURSE_SMTP_USER_NAME = diz@childish.tw\n DISCOURSE_SMTP_ADDRESS = smtp.mandrillapp.com\n DISCOURSE_SMTP_PORT = 587\n\nYou are correctly configured to use: Mandrill\nSuccess!\n","step-4-bootstrap","Step 4: Bootstrap","# launcher bootstrap \u003Cconfig_name\u003E\n\u002Fsrv\u002Fdiscourse $ .\u002Flauncher bootstrap childish\n.........\n","$ docker images\nREPOSITORY                 TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nlocal_discourse\u002Fchildish   latest              61004de94a0c        22 hours ago        1.489 GB\n","step-5-start","Step 5: Start","# launcher start \u003Cconfig_name\u003E\n\u002Fsrv\u002Fdiscourse $ .\u002Flauncher start childish\nNo cid found, creating a new container\nCalculated ENV: .............. # Your enveironment setting\n945342195fc05cbfa706f3d1875ab6383fbf5d21a73488367908d9ece21e1abd\n","\u002Fsrv\u002Fdocker\u002Fdiscourse $ docker ps\nCONTAINER ID        IMAGE                             COMMAND       CREATED         STATUS         PORTS                                         NAMES\n945342195fc0        local_discourse\u002Fchildish:latest   \"\u002Fsbin\u002Fboot\"  52 seconds ago  Up 51 seconds  0.0.0.0:2222-\u003E22\u002Ftcp, 0.0.0.0:10080-\u003E80\u002Ftcp   childish\n","step-6-browse","Step 6: Browse","reference","Reference","如何使用 Docker 架設 Discourse","root","http:\u002F\u002Fblog.fntsr.tw\u002Farticles\u002F180\u002F","Site is undergoing maintenance","Discourse 是一個使用 Ruby on Rails 編寫的開源論壇程式。與傳統論壇以看版（Boards）為單位去收束文章的方式不同，他是直接使用分類（Categories）作為篩選，讓你去檢視你想要看的文章。這種方式比較適合作為文章性質相近的討論平台，然後再去做比較細的分類。例如：","del","http:\u002F\u002Fcommunity.g0v.tw\u002F","新・g0v 後勤中心","」就是討論有關零時政府的專案開發、或是","http:\u002F\u002Frailsfun.tw\u002F","RailsFun","」則專門針對 Ruby、Ruby on Rails 做手把手教學的討論與問答。","會特別以這篇論壇作為教學題材，除了它本身真的滿好用以外，重要得是官方有提供 Docker 支援！它讓我們可以輕鬆使用它寫好的設定，去架設 Discourse ，甚至同時架設數個都輕而易舉！官方都如此貼心了，那我們還不來試試嗎？","在開始前，你必須先安裝下列項目，相關安裝方法，網路上已經滿多教學文了，可以喂狗問問。因為我們是把論壇架設在 Container 中，所以你不需要再去安裝 Ruby on Rails 或其他開發工具。","Git","Docker","在開始前，先做個說明。與官方教學文件不同，我這裡會將一些沒有提到可以改的地方做修改，讓讀者知道原來那邊是可以更換的，而不是以為「我只能這樣做」。比較大的改變如下，希望這些小改變能讓讀者懂得更加彈性的架設論壇。","官方的安裝路徑是在","\u002Fvar","下，本文則是使用","\u002Fsrv","官方的設定檔名稱是","，本文則是用","childish.yml","官方的 Port 設定是將 container "," 對應到 host ","，本文改成對應到 host ","port 10080","首先，我們要把官方寫好的工具 "," "," 下來。然後複製一份設定檔範例到該專案的 containers 資料夾下。","2017-01-16-補充","現在只需要執行 ",".\u002Fdiscourse-setup"," 就會透過一系列命令列問題的互動去幫我們建立名為 "," 的設定檔，不須再使用下面的方式進行。除非有需要修改問題沒有詢問的設定，再另行修改設定檔","接下來我們要編輯設定，可以使用你熟悉的軟體去做編輯，這邊是使用","vim","這裡會依照原本設定項目的順序，把需要修改的部分列出來。並且已做修改，可以和原值做比較。","在你","下來的專案根目錄中，有一個檔名為","的腳本執行檔，它可以幫助我們快速使用 docker 架設論壇。在該資料夾下，使用",".\u002Flauncger","去呼叫。","它的使用方式就是程式",".\u002Flauncher","，接著一個 COMMAND 參數，最後加上你的設定檔名稱（不含",".yml","）。在接下來的步驟中，會一一提及各 COMMAN 的使用時機。在這裡先知道它的使用方法就好。","在設定檔裡有提到 Mail Server 的設定很重要，這是因為在申請會員時，會寄信請你啟用帳號，否則就無法使用。而這也包括了我們要建立的第一個帳號，管理員帳號。若是這部分設定錯誤，將會導致連管理員帳號都無法登入的窘境。為了讓你知道設定是否正確，這個工具也提供了測試的程式，讓你在建立論壇前，先寄一封信自己，以測試設定是否正常。","在下指令後，他會要求你輸入要寄送的信箱位址，填寫後送出即可。若是有收到信，就代表你的設定是正常的囉。","因為這隻程式會使用到 python 去讀取 yml ，若是你的伺服器環境有缺 ","python3-yaml","這個套件，他會提示你去安裝，按照他給的訊息去安裝缺的套件就可以了。若你的作業系統是 Debian \u002F Ubuntu ，可以下 ","sudo apt-get install python3-yaml"," 去安裝。","h4","mandrill","2017-01-16-補充-1","Mandrill 已經變成 MAILCHIMP 的付費外掛了，有需要免費使用類似服務的夥伴可能就要另外找了。","若是你沒有自己的 Mail Server ，可以去申請 ","https:\u002F\u002Fmandrill.com\u002F"," 的服務。它是一個免費的 Mail Server 服務，特別針對網站系統信件的部分。他會提供您去建立多組 SMTP & API Credentials ，讓我們減少泄漏帳號密碼的危險（這也是我不建議直接使用 Gmail的原因，而且還會時常無法連線，讓你收不到確認信，囧）。總之，若沒有自己的 Mail Server ，就去申請吧！","設定檔編輯好、Mail Servrt 測試後，可以來產生 image 了。這裡使用","bootstrap","去建立。ˊ這部分會需要花一段時間，取決伺服器的網路速度和效能。","這邊若是遇到無法解析 github.com 的錯誤，可以參考 ","http:\u002F\u002Fblog.fntsr.tw\u002Farticles\u002F2014\u002F11\u002F08\u002Fdocker-cant-resolve-github-dot-com\u002F","Docker Can’t Resolve github.com"," 這篇文章去解決。","產生成功後，可以用","docker images","做確認。程式會產生以","local_discourse\u002F\u003Cconfig_name\u003E","格式為命名的 image 。","有了 image 後，就使用","start","來初始化 contianer 吧。","接著，我們可以使用","docker ps","做確認。程式會產生以你設定檔名稱命名的 container。若是 STATUS 是顯示 Up 即代表成功了！","最後，您就可以透過你前面坐的設定來瀏覽網站啦。若是在本機可以拜訪 ","http:\u002F\u002Flocalhost"," ，或是去拜訪該伺服器的 hostname 。若 container 的 port 80 不是對應到 host 的 port 80 ，記得加上 port。","以本範例來說就是拜訪 ","http:\u002F\u002Fdiz.childish.tw:10080","。會這樣做設定，是因為我會再透過 nginx 去監聽 10080 port，讓後 bind 到透過 ","diz.childish.tw"," 訪問伺服器的連線。當然，這是延伸應用了。","之後，就是 Discourse 相關的操作了，也不在本文的範疇內，按照網站上，官方給的提示去做就行啦。","架設出來大致就如同 ","。希望大家都能架設成功囉！","這是第一篇 Docker 實例應用的教學文，推廣性質還是比較重，主要還是讓讀者能夠跟著步驟，透過 Docker 將論壇建立起來。之後會想再寫一篇延伸，大概是關於使用 "," 的其他管理，以及如何備份資料以及搬遷，展現使用 Docker 的靈活性。還請大家期待囉。","http:\u002F\u002Fwww.discourse.org\u002F","Discourse","https:\u002F\u002Fwww.digitalocean.com\u002Fcommunity\u002Ftutorials\u002Fhow-to-install-discourse-on-ubuntu-14-04","How To Install Discourse on Ubuntu 14.04","https:\u002F\u002Fgithub.com\u002Fdiscourse\u002Fdiscourse\u002Fblob\u002Fmaster\u002Fdocs\u002FINSTALL-digital-ocean.md","discourse \u002F docs \u002F INSTALL-digital-ocean.md","How to build Discourse with docker",null))