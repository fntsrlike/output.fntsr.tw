[{"_path":"/legacy-articles/2014-11-07-how-to-build-discourse-with-docker","_dir":"legacy-articles","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"如何使用 Docker 架設 Discourse","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://blog.fntsr.tw/articles/180/","rel":["nofollow"]},"children":[{"type":"text","value":"Site is undergoing maintenance"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Discourse 是一個使用 Ruby on Rails 編寫的開源論壇程式。與傳統論壇以看版（Boards）為單位去收束文章的方式不同，他是直接使用分類（Categories）作為篩選，讓你去檢視你想要看的文章。這種方式比較適合作為文章性質相近的討論平台，然後再去做比較細的分類。例如："},{"type":"element","tag":"del","props":{},"children":[{"type":"text","value":"「"},{"type":"element","tag":"a","props":{"href":"http://community.g0v.tw/","rel":["nofollow"]},"children":[{"type":"text","value":"新・g0v 後勤中心"}]},{"type":"text","value":"」就是討論有關零時政府的專案開發、或是"}]},{"type":"text","value":"「"},{"type":"element","tag":"a","props":{"href":"http://railsfun.tw/","rel":["nofollow"]},"children":[{"type":"text","value":"RailsFun"}]},{"type":"text","value":"」則專門針對 Ruby、Ruby on Rails 做手把手教學的討論與問答。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"會特別以這篇論壇作為教學題材，除了它本身真的滿好用以外，重要得是官方有提供 Docker 支援！它讓我們可以輕鬆使用它寫好的設定，去架設 Discourse ，甚至同時架設數個都輕而易舉！官方都如此貼心了，那我們還不來試試嗎？"}]},{"type":"element","tag":"h2","props":{"id":"requirement"},"children":[{"type":"text","value":"Requirement"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在開始前，你必須先安裝下列項目，相關安裝方法，網路上已經滿多教學文了，可以喂狗問問。因為我們是把論壇架設在 Container 中，所以你不需要再去安裝 Ruby on Rails 或其他開發工具。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Git"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Docker"}]}]},{"type":"element","tag":"h2","props":{"id":"開始之前before-beginning"},"children":[{"type":"text","value":"開始之前（Before Beginning）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在開始前，先做個說明。與官方教學文件不同，我這裡會將一些沒有提到可以改的地方做修改，讓讀者知道原來那邊是可以更換的，而不是以為「我只能這樣做」。比較大的改變如下，希望這些小改變能讓讀者懂得更加彈性的架設論壇。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"官方的安裝路徑是在"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/var"}]},{"type":"text","value":"下，本文則是使用"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/srv"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"官方的設定檔名稱是"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"app.yml"}]},{"type":"text","value":"，本文則是用"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"childish.yml"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"官方的 Port 設定是將 container "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"port 80"}]},{"type":"text","value":" 對應到 host "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"port 80"}]},{"type":"text","value":"，本文改成對應到 host "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"port 10080"}]},{"type":"text","value":"。"}]}]},{"type":"element","tag":"h2","props":{"id":"設定與安裝set-up"},"children":[{"type":"text","value":"設定與安裝（Set Up）"}]},{"type":"element","tag":"h3","props":{"id":"step-1-install-discourse"},"children":[{"type":"text","value":"Step 1: Install Discourse"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"首先，我們要把官方寫好的工具 "},{"type":"element","tag":"a","props":{"href":"https://github.com/discourse/discourse_docker","rel":["nofollow"]},"children":[{"type":"text","value":"discourse/discourse_docker"}]},{"type":"text","value":" "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"git clone"}]},{"type":"text","value":" 下來。然後複製一份設定檔範例到該專案的 containers 資料夾下。"}]},{"type":"element","tag":"code","props":{"code":"# 先移動到你想要放置專案的資料夾，通常會是 /var ，本例則是使用 /srv\n~ $ cd /srv\n\n# 將 discourse_docker 專案 git clone 下來，並將資料夾名稱改為 discourse\n/srv $ git clone https://github.com/discourse/discourse_docker.git discourse\n/srv $ cd discourse\n\n# 把 All in one 的設定範例複製一份到 container 資料夾，並改為自己想要的名稱，這裡是用`childish`。\n/srv/discourse $ cp samples/standalone.yml containers/childish.yml\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 先移動到你想要放置專案的資料夾，通常會是 /var ，本例則是使用 /srv\n~ $ cd /srv\n\n# 將 discourse_docker 專案 git clone 下來，並將資料夾名稱改為 discourse\n/srv $ git clone https://github.com/discourse/discourse_docker.git discourse\n/srv $ cd discourse\n\n# 把 All in one 的設定範例複製一份到 container 資料夾，並改為自己想要的名稱，這裡是用`childish`。\n/srv/discourse $ cp samples/standalone.yml containers/childish.yml\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"step-2-edit-configuration"},"children":[{"type":"text","value":"Step 2: Edit Configuration"}]},{"type":"element","tag":"h5","props":{"id":"2017-01-16-補充"},"children":[{"type":"text","value":"2017-01-16 補充："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"現在只需要執行 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"./discourse-setup"}]},{"type":"text","value":" 就會透過一系列命令列問題的互動去幫我們建立名為 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"app.yml"}]},{"type":"text","value":" 的設定檔，不須再使用下面的方式進行。除非有需要修改問題沒有詢問的設定，再另行修改設定檔"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接下來我們要編輯設定，可以使用你熟悉的軟體去做編輯，這邊是使用"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"vim"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"/srv/discourse $ vim containers/childish.yml\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/srv/discourse $ vim containers/childish.yml\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這裡會依照原本設定項目的順序，把需要修改的部分列出來。並且已做修改，可以和原值做比較。"}]},{"type":"element","tag":"code","props":{"code":"## /srv/discourse_docker/containers/childish.yml\n\n## 設定你要輸出的 Port，可以配合你網頁伺服器的設定，這裡是將`10080`對到`80`\n## 若不想使用網頁伺服器，可以直接將`80`對到`80`，這樣就可以直接讀取你的 domain 做拜訪。\nexpose:\n  - \"10080:80\"  # 把 host 的 port 10080 轉到 container 的 port 80 (http)\n  - \"2222:22\"   # 把 host 的 port 2222 轉到 container 的 port 22 (ssh)\n\n## 分給資料庫的記憶體，如果你的記憶體有 1 GB，設定 128MB ，若有 4GB ，則建議設為 1GB\ndb_shared_buffers: \"256MB\"\n\n## Unicorn 的 workers 數量，如果你的記憶體有 1 GB ，則設定 2：若是有 2 GB ，則建議 3 或 4。\nUNICORN_WORKERS: 3\n\n## 設定 DISCOURSE_DEVELOPER_EMAILS 為您的 Email，記得加單引號。\nDISCOURSE_DEVELOPER_EMAILS: 'diz@childish.tw'\n\n## 設定 DISCOURSE_HOSTNAME 為您的 hostname ，記得加單引號。\n## 若只是架設在本機上，可以寫 localhost\nDISCOURSE_HOSTNAME: 'diz.childish.tw'\n\n## 設定郵件伺服器資訊，這裡很重要，若是沒設定好就無法使用論壇。非常不建議直接使用 Gmail。\n## 建議：這部分可以使用 Mandrill 的服務，詳細可參見本文的 Mail Test 說明。\nDISCOURSE_SMTP_ADDRESS: smtp.mandrillapp.com       # 必填\nDISCOURSE_SMTP_PORT: 587                           # 選填\nDISCOURSE_SMTP_USER_NAME: diz@childish.tw          # 選填\nDISCOURSE_SMTP_PASSWORD: MANDRILL_APP_PASSWORD     # 選填\n\n## 這裡是放置你論壇資料的目錄，包括 Database。\n## 將 /var/discourse/ 改為你專案的路徑，就是你 git clone 的目錄。這裡是改 /srv/discourse/。\n## 建議：可以把原本的 standalone 改成你的設定檔名稱或 hostname，讓以後要架多重論壇時可以方便管理。這裡是改成 diz.childish.tw\nvolumes:\n  - volume:\n      host: /srv/discourse/shared/diz.childish.tw\n      guest: /shared\n  - volume:\n      host: /srv/discourse/shared/diz.childish.tw/log/var-log\n      guest: /var/log\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"## /srv/discourse_docker/containers/childish.yml\n\n## 設定你要輸出的 Port，可以配合你網頁伺服器的設定，這裡是將`10080`對到`80`\n## 若不想使用網頁伺服器，可以直接將`80`對到`80`，這樣就可以直接讀取你的 domain 做拜訪。\nexpose:\n  - \"10080:80\"  # 把 host 的 port 10080 轉到 container 的 port 80 (http)\n  - \"2222:22\"   # 把 host 的 port 2222 轉到 container 的 port 22 (ssh)\n\n## 分給資料庫的記憶體，如果你的記憶體有 1 GB，設定 128MB ，若有 4GB ，則建議設為 1GB\ndb_shared_buffers: \"256MB\"\n\n## Unicorn 的 workers 數量，如果你的記憶體有 1 GB ，則設定 2：若是有 2 GB ，則建議 3 或 4。\nUNICORN_WORKERS: 3\n\n## 設定 DISCOURSE_DEVELOPER_EMAILS 為您的 Email，記得加單引號。\nDISCOURSE_DEVELOPER_EMAILS: 'diz@childish.tw'\n\n## 設定 DISCOURSE_HOSTNAME 為您的 hostname ，記得加單引號。\n## 若只是架設在本機上，可以寫 localhost\nDISCOURSE_HOSTNAME: 'diz.childish.tw'\n\n## 設定郵件伺服器資訊，這裡很重要，若是沒設定好就無法使用論壇。非常不建議直接使用 Gmail。\n## 建議：這部分可以使用 Mandrill 的服務，詳細可參見本文的 Mail Test 說明。\nDISCOURSE_SMTP_ADDRESS: smtp.mandrillapp.com       # 必填\nDISCOURSE_SMTP_PORT: 587                           # 選填\nDISCOURSE_SMTP_USER_NAME: diz@childish.tw          # 選填\nDISCOURSE_SMTP_PASSWORD: MANDRILL_APP_PASSWORD     # 選填\n\n## 這裡是放置你論壇資料的目錄，包括 Database。\n## 將 /var/discourse/ 改為你專案的路徑，就是你 git clone 的目錄。這裡是改 /srv/discourse/。\n## 建議：可以把原本的 standalone 改成你的設定檔名稱或 hostname，讓以後要架多重論壇時可以方便管理。這裡是改成 diz.childish.tw\nvolumes:\n  - volume:\n      host: /srv/discourse/shared/diz.childish.tw\n      guest: /shared\n  - volume:\n      host: /srv/discourse/shared/diz.childish.tw/log/var-log\n      guest: /var/log\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"command"},"children":[{"type":"text","value":"Command"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在你"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"git clone"}]},{"type":"text","value":"下來的專案根目錄中，有一個檔名為"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"launcher"}]},{"type":"text","value":"的腳本執行檔，它可以幫助我們快速使用 docker 架設論壇。在該資料夾下，使用"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"./launcger"}]},{"type":"text","value":"去呼叫。"}]},{"type":"element","tag":"code","props":{"code":"/srv/discourse $ ./launcher\nUsage: launcher COMMAND CONFIG [--skip-prereqs]\nCommands:\n    start:      Start/initialize a container\n    stop:       Stop a running container\n    restart:    Restart a container\n    destroy:    Stop and remove a container\n    enter:      Use nsenter to enter a container\n    ssh:        Start a bash shell in a running container\n    logs:       Docker logs for container\n    mailtest:   Test the mail settings in a container\n    bootstrap:  Bootstrap a container for the config based on a template\n    rebuild:    Rebuild a container (destroy old, bootstrap, start new)\n\nOptions:\n    --skip-prereqs   Don't check prerequisites\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/srv/discourse $ ./launcher\nUsage: launcher COMMAND CONFIG [--skip-prereqs]\nCommands:\n    start:      Start/initialize a container\n    stop:       Stop a running container\n    restart:    Restart a container\n    destroy:    Stop and remove a container\n    enter:      Use nsenter to enter a container\n    ssh:        Start a bash shell in a running container\n    logs:       Docker logs for container\n    mailtest:   Test the mail settings in a container\n    bootstrap:  Bootstrap a container for the config based on a template\n    rebuild:    Rebuild a container (destroy old, bootstrap, start new)\n\nOptions:\n    --skip-prereqs   Don't check prerequisites\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"它的使用方式就是程式"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"./launcher"}]},{"type":"text","value":"，接著一個 COMMAND 參數，最後加上你的設定檔名稱（不含"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".yml"}]},{"type":"text","value":"）。在接下來的步驟中，會一一提及各 COMMAN 的使用時機。在這裡先知道它的使用方法就好。"}]},{"type":"element","tag":"h3","props":{"id":"step-3-mail-test"},"children":[{"type":"text","value":"Step 3: Mail Test"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在設定檔裡有提到 Mail Server 的設定很重要，這是因為在申請會員時，會寄信請你啟用帳號，否則就無法使用。而這也包括了我們要建立的第一個帳號，管理員帳號。若是這部分設定錯誤，將會導致連管理員帳號都無法登入的窘境。為了讓你知道設定是否正確，這個工具也提供了測試的程式，讓你在建立論壇前，先寄一封信自己，以測試設定是否正常。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在下指令後，他會要求你輸入要寄送的信箱位址，填寫後送出即可。若是有收到信，就代表你的設定是正常的囉。"}]},{"type":"element","tag":"code","props":{"code":"# launcher mailtest <config_name>\n/srv/discourse $ ./launcher mailtest childish\nEnter your email address: diz@childish.tw\nDISCOURSE_SMTP_ settings:\n DISCOURSE_SMTP_PASSWORD = (hidden)\n DISCOURSE_SMTP_USER_NAME = diz@childish.tw\n DISCOURSE_SMTP_ADDRESS = smtp.mandrillapp.com\n DISCOURSE_SMTP_PORT = 587\n\nYou are correctly configured to use: Mandrill\nSuccess!\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# launcher mailtest <config_name>\n/srv/discourse $ ./launcher mailtest childish\nEnter your email address: diz@childish.tw\nDISCOURSE_SMTP_ settings:\n DISCOURSE_SMTP_PASSWORD = (hidden)\n DISCOURSE_SMTP_USER_NAME = diz@childish.tw\n DISCOURSE_SMTP_ADDRESS = smtp.mandrillapp.com\n DISCOURSE_SMTP_PORT = 587\n\nYou are correctly configured to use: Mandrill\nSuccess!\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因為這隻程式會使用到 python 去讀取 yml ，若是你的伺服器環境有缺 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"python3-yaml"}]},{"type":"text","value":"這個套件，他會提示你去安裝，按照他給的訊息去安裝缺的套件就可以了。若你的作業系統是 Debian / Ubuntu ，可以下 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"sudo apt-get install python3-yaml"}]},{"type":"text","value":" 去安裝。"}]},{"type":"element","tag":"h4","props":{"id":"mandrill"},"children":[{"type":"text","value":"Mandrill"}]},{"type":"element","tag":"h5","props":{"id":"2017-01-16-補充-1"},"children":[{"type":"text","value":"2017-01-16 補充："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mandrill 已經變成 MAILCHIMP 的付費外掛了，有需要免費使用類似服務的夥伴可能就要另外找了。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若是你沒有自己的 Mail Server ，可以去申請 "},{"type":"element","tag":"a","props":{"href":"https://mandrill.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Mandrill"}]},{"type":"text","value":" 的服務。它是一個免費的 Mail Server 服務，特別針對網站系統信件的部分。他會提供您去建立多組 SMTP & API Credentials ，讓我們減少泄漏帳號密碼的危險（這也是我不建議直接使用 Gmail的原因，而且還會時常無法連線，讓你收不到確認信，囧）。總之，若沒有自己的 Mail Server ，就去申請吧！"}]},{"type":"element","tag":"h3","props":{"id":"step-4-bootstrap"},"children":[{"type":"text","value":"Step 4: Bootstrap"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"設定檔編輯好、Mail Servrt 測試後，可以來產生 image 了。這裡使用"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"bootstrap"}]},{"type":"text","value":"去建立。ˊ這部分會需要花一段時間，取決伺服器的網路速度和效能。"}]},{"type":"element","tag":"code","props":{"code":"# launcher bootstrap <config_name>\n/srv/discourse $ ./launcher bootstrap childish\n.........\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# launcher bootstrap <config_name>\n/srv/discourse $ ./launcher bootstrap childish\n.........\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這邊若是遇到無法解析 github.com 的錯誤，可以參考 "},{"type":"element","tag":"a","props":{"href":"http://blog.fntsr.tw/articles/2014/11/08/docker-cant-resolve-github-dot-com/","rel":["nofollow"]},"children":[{"type":"text","value":"Docker Can’t Resolve github.com"}]},{"type":"text","value":" 這篇文章去解決。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"產生成功後，可以用"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"docker images"}]},{"type":"text","value":"做確認。程式會產生以"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"local_discourse/<config_name>"}]},{"type":"text","value":"格式為命名的 image 。"}]},{"type":"element","tag":"code","props":{"code":"$ docker images\nREPOSITORY                 TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nlocal_discourse/childish   latest              61004de94a0c        22 hours ago        1.489 GB\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ docker images\nREPOSITORY                 TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nlocal_discourse/childish   latest              61004de94a0c        22 hours ago        1.489 GB\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"step-5-start"},"children":[{"type":"text","value":"Step 5: Start"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有了 image 後，就使用"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"start"}]},{"type":"text","value":"來初始化 contianer 吧。"}]},{"type":"element","tag":"code","props":{"code":"# launcher start <config_name>\n/srv/discourse $ ./launcher start childish\nNo cid found, creating a new container\nCalculated ENV: .............. # Your enveironment setting\n945342195fc05cbfa706f3d1875ab6383fbf5d21a73488367908d9ece21e1abd\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# launcher start <config_name>\n/srv/discourse $ ./launcher start childish\nNo cid found, creating a new container\nCalculated ENV: .............. # Your enveironment setting\n945342195fc05cbfa706f3d1875ab6383fbf5d21a73488367908d9ece21e1abd\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著，我們可以使用"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"docker ps"}]},{"type":"text","value":"做確認。程式會產生以你設定檔名稱命名的 container。若是 STATUS 是顯示 Up 即代表成功了！"}]},{"type":"element","tag":"code","props":{"code":"/srv/docker/discourse $ docker ps\nCONTAINER ID        IMAGE                             COMMAND       CREATED         STATUS         PORTS                                         NAMES\n945342195fc0        local_discourse/childish:latest   \"/sbin/boot\"  52 seconds ago  Up 51 seconds  0.0.0.0:2222->22/tcp, 0.0.0.0:10080->80/tcp   childish\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"/srv/docker/discourse $ docker ps\nCONTAINER ID        IMAGE                             COMMAND       CREATED         STATUS         PORTS                                         NAMES\n945342195fc0        local_discourse/childish:latest   \"/sbin/boot\"  52 seconds ago  Up 51 seconds  0.0.0.0:2222->22/tcp, 0.0.0.0:10080->80/tcp   childish\n"}]}]}]},{"type":"element","tag":"h3","props":{"id":"step-6-browse"},"children":[{"type":"text","value":"Step 6: Browse"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最後，您就可以透過你前面坐的設定來瀏覽網站啦。若是在本機可以拜訪 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"http://localhost"}]},{"type":"text","value":" ，或是去拜訪該伺服器的 hostname 。若 container 的 port 80 不是對應到 host 的 port 80 ，記得加上 port。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以本範例來說就是拜訪 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"http://diz.childish.tw:10080"}]},{"type":"text","value":"。會這樣做設定，是因為我會再透過 nginx 去監聽 10080 port，讓後 bind 到透過 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"diz.childish.tw"}]},{"type":"text","value":" 訪問伺服器的連線。當然，這是延伸應用了。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"之後，就是 Discourse 相關的操作了，也不在本文的範疇內，按照網站上，官方給的提示去做就行啦。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"架設出來大致就如同 "},{"type":"element","tag":"a","props":{"href":"http://diz.childish.tw/","rel":["nofollow"]},"children":[{"type":"text","value":"http://diz.childish.tw/"}]},{"type":"text","value":"。希望大家都能架設成功囉！"}]},{"type":"element","tag":"h2","props":{"id":"後記"},"children":[{"type":"text","value":"後記"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這是第一篇 Docker 實例應用的教學文，推廣性質還是比較重，主要還是讓讀者能夠跟著步驟，透過 Docker 將論壇建立起來。之後會想再寫一篇延伸，大概是關於使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"launcher"}]},{"type":"text","value":" 的其他管理，以及如何備份資料以及搬遷，展現使用 Docker 的靈活性。還請大家期待囉。"}]},{"type":"element","tag":"h2","props":{"id":"reference"},"children":[{"type":"text","value":"Reference"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.discourse.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Discourse"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/discourse/discourse_docker","rel":["nofollow"]},"children":[{"type":"text","value":"discourse/discourse_docker"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.digitalocean.com/community/tutorials/how-to-install-discourse-on-ubuntu-14-04","rel":["nofollow"]},"children":[{"type":"text","value":"How To Install Discourse on Ubuntu 14.04"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/discourse/discourse/blob/master/docs/INSTALL-digital-ocean.md","rel":["nofollow"]},"children":[{"type":"text","value":"discourse / docs / INSTALL-digital-ocean.md"}]}]}]}]},"title_en":"How to build Discourse with docker","slug":"how-to-build-discourse-with-docker","aliases":["如何使用 Docker 架設 Discourse","How to build Discourse with docker"],"created_at":"2014-11-07T15:15:29.000Z","published_at":null,"updated_at":null,"tags":["docker"],"moc":["Information Technology"],"_type":"markdown","_id":"garden:legacy-articles:2014-11-07-how-to-build-discourse-with-docker.md","_source":"garden","_file":"legacy-articles/2014-11-07-how-to-build-discourse-with-docker.md","_extension":"md"},{"_path":"/legacy-articles/2014-11-30-december-of-2014","_dir":"legacy-articles","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"來到 2014 年的 12 月，半年回顧","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在 11 月的倒數三分鐘開始寫起了這篇文章，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n並在 12 月的第一天發表。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"學期來到了尾聲，十二月到了，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n是一個值得沈澱的時期，把過去的種種做個收尾。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n回首半年，是一個很好的開始。"}]},{"type":"element","tag":"h2","props":{"id":"六月"},"children":[{"type":"text","value":"六月"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"與家人去了日本，彌補了自己沒有畢旅的憾。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n走過畢業典禮的儀式，在還來不及紀念下，結束了期末考。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n然後，與歷史學系道別，我走向了另一條路。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"感謝歷史系、學生會在這四年給了我許多經驗與回憶，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n對於身邊的人的幫助與砥礪，只有感謝與感謝。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"隨後，整理房間散落的回憶，我搬離的台中，回到了老家休息。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n匆匆的一週過後，我就又帶著新整理出來的行囊，來到了中壢。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n簡單佈置了新租處後，開始了新生活。"}]},{"type":"element","tag":"h2","props":{"id":"七月"},"children":[{"type":"text","value":"七月"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"走進了 EZTABLE，開始為時兩個月暑期實習，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在 Kernel Team 展開了全新的團隊開發的冒險。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"期間參加了大拜拜 COSCUP，與舊雨新知聚聚吃飯。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n然後繼續實習，桃園與台北之間，日日來回。"}]},{"type":"element","tag":"h2","props":{"id":"八月"},"children":[{"type":"text","value":"八月"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"進度算是超前，與公司告了假，去了高雄約會玩耍。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n天搖地動，竟然遭遇了氣爆事件，至今仍心有餘悸。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"逐漸收尾公司的進度，因為月底要到了，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n結束前一週 Presentation，接著在最後一週嘗試報了 Docker。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n很珍惜這些演說的機會。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"感謝 EZTABLE 在這兩個月給予我的新視野，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n我體驗了一個美式文化的開發經驗，認識了許多強大的前輩，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n在這工作很愉快，很喜歡這裡的夥伴，希望畢業後有機會能回來。"}]},{"type":"element","tag":"h2","props":{"id":"九月"},"children":[{"type":"text","value":"九月"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"結束了實習，在開學前趕緊著放自己假，出去走走，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n去年遇到颱風擱置的花蓮旅，終於如願以償，感謝親愛的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"開學，走進了實驗室，從那時起，我不再只是歷史學徒，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n軟體工程所，讓我聽著就興奮的新方向，我走回了資訊本科。"}]},{"type":"element","tag":"h2","props":{"id":"十月"},"children":[{"type":"text","value":"十月"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這是一個特殊的月份，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n慶祝了兩週年紀念日以及二十四歲生日（老），"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n都這把年紀了感覺還一事無成呢。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"接著就是讓我全力以備的 PHPConf 2014，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n講述 Docker 這個火熱的工具，很感謝會眾的喜愛，受寵若驚。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n會後問卷調查的建言與指教，我銘記在心，謝謝您們點出我的不足。"}]},{"type":"element","tag":"h2","props":{"id":"十一月"},"children":[{"type":"text","value":"十一月"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這大概是最挫敗與沮喪的月份，我面臨了學業的困境。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n尤其是牽扯到數論的應用密碼學，我深深感受到自己的弱點。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"歷經期中考，我逃避了一段時間。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n我開始打起遊戲、陷入渾渾噩噩、作息又幾近日夜顛倒。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是，夠了。沒有目標的靈魂是迷茫地。該清醒了。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n回台中休養了，投下第二次市長選舉，同時也給自己一巴掌。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"看著柯文哲不斷的努力與成功，我得到了鼓勵。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n對於台灣大環境我不再絕望與恐懼，不再封鎖自己。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n這次的選舉也點燃我對於新社會的希望。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"社會在進步，我不能停滯，"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n我也希望加入改革，從自己做起。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最後，來到了十二月，一年的尾聲。"}]},{"type":"element","tag":"h2","props":{"id":"十二月"},"children":[{"type":"text","value":"十二月"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"沈澱後，訂定目標，努力執行。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"「當你真心渴望追求某種事物的話，整個宇宙都會聯合起來幫你完成。」— 牧羊少年奇幻之旅"}]}]},"title_en":"December of 2014","slug":"december-of-2014","aliases":["來到 2014 年的 12 月，半年回顧","December of 2014"],"created_at":"2014-11-30T23:58:59.000Z","published_at":null,"updated_at":null,"tags":[],"moc":["General"],"_type":"markdown","_id":"garden:legacy-articles:2014-11-30-december-of-2014.md","_source":"garden","_file":"legacy-articles/2014-11-30-december-of-2014.md","_extension":"md"}]