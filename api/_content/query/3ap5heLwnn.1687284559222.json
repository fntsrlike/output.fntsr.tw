[{"_path":"/articles/papers-of-change-leader-of-the-year-of-act-taiwan-agile-awards","_dir":"articles","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"ACT 台灣敏捷大賞 - 年度變革引導者 投稿文","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"成果"},"children":[{"type":"text","value":"成果"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"交付結果"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"回顧成果"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"回顧成果的落實方式與樣貌"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我在鈦坦擔任了 3 年全職的 ScrumMaster，帶領組織從單團隊的 Scrum 逐漸演進成為實踐 LeSS 的多團隊 Scrum，持續為客戶迭代交付增量。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"從只存在 PO 腦海裡、沒有一個被視覺化出來的 Product Backlog，轉為使用 Jira 管理，讓整個 Scrum Team 可以一起維護的狀態。並且進而發展 Product Roadmap 與 Release Plan，突破過往只執行 Scrum 會陷於只專注在短期規劃的困境，讓整個 Scrum Team 更能夠專注、對準中長期目標，去討論、調整 Product Backlog 的 Priority，並且去取捨時間與範疇。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了增加敏捷的透明、檢視與調適性，也陸續使用各種方式揭露資訊前對齊我們的認知。從過去靠直覺去估算 Item 的大小，我們會使用相對估軟去比較過去記錄有參考價值的 Item，揭露彼此對於當張 Item 範疇與工作量的認知。並善用估算出來的點數，製作速率表，讓我們有能力去預判未來數個迭代的可能交付的範圍，並在發現與預期不合時，及時去做範疇的調整與相關協調。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了確保 Item 的品質，我們也從零到有去制定了完成的定義 (DoD)，從最基本的核心功能要手動測試，擴展到從 Refine 階段，到設計階段、開發階段、交付階段，整個 Item 生命週期各有要求的 DoD。也會每季一次檢視，進行調整。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在團隊的擴展上，除了具有全端能力的產品工程師團隊拓展外，也藉著組織的變動，導入了設計團隊進入 Scrum Team，讓整體 Scrum Team 更能符合有能力在一個部門內完成端對端的開發。這過程中不斷摸索摸索如何讓設計團隊執行 Scrum，包括讓設計師也暸解 User Story、Sprint Goal、估點的方式、寫出使用者導向而不是規格的 Acceptance Criteria。到現在設計團隊已經能與產品工程師團隊一起執行 Scrum，在確保當前產品工程師團隊能夠交付出增量外，也提前去持續交付設計的增量，讓產品的開發能夠持續推進。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在檢視產品增量的 Sprint Review，也協助 Scrum Team 從原本的報告與單向的展示成果的方式，轉向 LeSS 提倡的 Bazaar，也就是內部常稱的擺攤博覽會。我們是兩個產品合辦博覽會，團隊會在會議一開始預告擺攤的內容，然後鼓勵不同產品的夥伴去其他產品線去試玩。除了產出實際可運作的軟體增量的產品開發團隊，設計團隊也會擺攤和參與者介紹他們的設計，包括理念、流程，各攤位搜集回饋，讓 PO 參考，並在下個迭代 SP1 開始前的和團隊說明參考的理由。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在團隊成長的過程中，也持續培養能夠在團隊擔負 ScrumMaster 職責的成員，讓團隊有能力持續前進。讓身為全職的 ScrumMaster 能夠持續地放手，以 RACI 模型來說，就是從在 Scrum 的執行上佔據較多 Reponsible 逐漸轉移到 Consulting 的角色。包括原本逐漸成為多團隊的 Retrospective 引導者機器，透過分享技巧與工具箱的建立，讓團隊逐漸能夠自主去 Retrospective，也各自發展自己激發觀點與創意的主持方式，互相分享。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我也這過程中轉換成觀察者的角色，去觀察團隊，並將我看到的狀態鏡映團隊給團隊參考。為符合我們價值觀的給予肯定，點出團隊的需要注意的盲點，讓團隊能夠自己意識到自身狀態，逐漸調整成自己理想的樣貌。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"目前整個 Scrum Team 已經不用 ScrumMaster 時時刻刻的關注，能夠自己持續前進，並在需要 ScrumMaster 的專業時提出需求討論。身為 ScrumMaster 可以更多專注在重要但不緊急的事情去推進整個 Scrum Team 的成長，並且隨時做好準備與團隊面對在 VUCA 時代可能會迎來的動盪與暴風，一起討論如何應對與調整。"}]},{"type":"element","tag":"h2","props":{"id":"技巧"},"children":[{"type":"text","value":"技巧"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"執行的確實度"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"透明度"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"引導團隊的能力"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"帶領團隊逐步改善的成果"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了讓團隊逐漸成長為一個更加敏捷的團隊，身為沒有實權的 ScrumMaster，最忌諱的就是用 command 與 control 的方式要團隊去執行行動。也很高興在這個組織裡，團隊也不會是被動的接受改變，會去提出自己的困惑、不理解，甚至是提出基於當時認知的反對立場，讓我們可以聊解認知落差是什麼。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以在推動 Agile 與 Scrum 的過程中，是經過一次次的知識分享與討論而逐漸在這方面的知識建立理解，無論是在導入估算、速率表、DoD、LeSS 時，我總是會準備好題材，邀請大家一起來理解。或是說明一些改變的意圖，邀請 Scrum Team 一起實驗，並訂下下次檢視的日期，讓大家明確知道這真的只是嘗試，而不是一個定案，像是 Sprint Review 改成博覽會就是一場實驗。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"剛導入多團隊 Scrum 時，兩個來自不同小產品的團隊一起開 Scrum 時，更是一場大型實驗。我們會在每個 Scrum Events 結束時，當下面對白板進行五分鐘左右的 Retrospective，讓大家能夠及時提出覺得好，可以在下次會議保持的、覺得不好，我們要來想怎麼調整的，讓這些事件也跟著迭代，並且是一起變他，而不是單方面由 ScrumMaster 去規定要怎麼做。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過 ScrumMaster 確保事件發生，但執行方式卻是整個 Scrum Team 一起共創。唯有透過這樣的執行方式，能夠創造出最適合我們組織當下狀況的 Scrum 執行方式。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"身為 ScrumMaster，另外能做的事情就是做好各項準備，在團隊有痛點與需求時。也就是俗稱的 Learning Moment 出現時，端出事前就準備好的食材與料理指南，再次與團隊展開討論和實驗設計，料理出最合我們胃口的菜餚。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"就像是當團隊對於當前的估算感到困惑時，馬上約個時間在當週辦一場分享說明估算的概念。當團隊開始對於速率表與估算方式開始走偏以及沒有信心時，即時的提出一個在其他 Scrum Team 迭代過數次的新速率表，以及在 RSG 培訓課程中學到的估算執行方式，和團隊一起探討，重新對齊了我們之後在這方面的執行方式。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"又像是我們要開啟現在產品中，一個較大的專案時，團隊對於充滿未知與不確定性的範疇感到焦慮，就可以端出 User Story Mapping，一起釐清這次專案的全貌，並且劃分我們的 MVP、MMP、Good to have 的範疇，估算出最少和最多個迭代才能完成的預測。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"延續上段，當團隊對於這類和過去相比較大、長達數月的開發範疇感到絕望與失去動力時，我們就辦一場簡單的 Workshop，訂出這個專案的發布計畫。一起在牆上貼上 Sprint 編號，並依照優先度在各個 Sprint 排好一個個 Story Item 卡片，視覺化出我們的現況，然後展開範疇選擇與取捨的討論。也開始了每次 Sprint Review 一起檢視這個圖表的機制，讓我們從原本只檢視 1~2 個 Sprint 的近光燈視野，拓展到能看見當前目標全貌的遠光燈，並在每次 Sprint 中按照當前的開發進度，去檢視與調整這些範疇，或是砍掉、或是延後。也會用不同的顏色標註出與目標無關但必須開發的 Item，提醒我們在這些時候不得不偏離目標，且大家都知道原因與考量是什麼。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過這樣的改變，我們在 Product Backlog 的透明度有了突破性的提高。整個 Scrum Team 更知道自己為何而戰，也知道我們因為什麼而取捨。團隊更暸解 PO 的考量，不只透過提問或是提供觀點補足 PO 的盲點，更也與 PO 站在一起，開發出我們心目中的產品。"}]},{"type":"element","tag":"h2","props":{"id":"工具"},"children":[{"type":"text","value":"工具"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"執行的框架"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"工具使用程度"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"正如前述，我們主要在開發上使用的是 Scrum 框架。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但經過了前一次大專案的開發後，我們意識到 Scrum 不一定是我們每次的最好選擇，當我們在商業模式、產品需求、技術掌握度都是明確、或經過數次迭代變成明確時，也可以為了減少會議時間的打斷與浪費，拋棄 Scrum Sprint 迭代的方式，採用比較像是瀑布流整合 Kanban 的概念，直接一次 Refine 完所有的待辦事項，用 Pull 的方式去一個個開發，遇到意外在即時像團隊與 PO 反應。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為此我們也會使用 Stacey Matrix 和 Cynefin 框架，讓整個 Scrum Team 一起討論上述所說的三種指標的狀態，一起判定風險與明確程度，一起選擇要透過怎樣的合作方式進行開發。當團隊是自己意識到產品狀態與選擇使用 Scrum 時，會更加暸解為何而跑，而不是因為組織號稱敏捷而跑。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"組織也在去年決定要發展出明確的 Product Roadmap，讓我們可以在產品的長期發展上，有更明確的策略與目標。我從中也協助透過 Workshop 的方式，一起和團隊發想產品策略，互相交流，為未來一年到三年的目標提供各個觀點，讓 PO 以及組織的管理層能與客戶討論，訂出團隊、客戶、組織都滿意的目標。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"也因應這兩年的疫情，身為 ScrumMaster，也在疫情期間協助 Scrum Team 嘗試數位化工具，包括用來 Retrospective 的 Metro Retro 和 Miro、協助我們管理 Product Backlog 的 Jira。在這些數位化工具的使用，我們也是逐漸改善與拓展我們的使用方式，包括開始用 Miro 進行 Workshop，以及呈現我們產品的 Product Roadmap 和 Release Plan。Jira 我們也進行各項的客製化，讓工具更貼近我們的使用習慣。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我也發會自身技術背景出身的優勢，讓 Jira 的使用上有更多自動化，降低團隊使用的門檻。甚至搭配 Google Sheet，讓我們可以自動化產出 Product Backlog 中我們想要看到、但是 Jira 難以提供圖性化介面的圖表。像是速率表、或是統計 Item 意圖與類型的數量，結合我們在執行的 KPI 與執行力修煉中的元素。甚至產出當次迭代的累積流量圖，讓我在觀察團隊上，除了行為面上，更可以用數據去給出一些觀察與觀點。"}]}]},"title_en":"Papers of Change Leader of the Year of ACT Taiwan Agile Awards","slug":"...","aliases":[],"created_at":"2023-06-15T14:01:23.000Z","updated_at":"2023-06-15T14:01:23.000Z","published_at":null,"tags":[],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"成果"},"children":[{"type":"text","value":"成果"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"交付結果"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"回顧成果"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"回顧成果的落實方式與樣貌"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我在鈦坦擔任了 3 年全職的 ScrumMaster，帶領組織從單團隊的 Scrum 逐漸演進成為實踐 LeSS 的多團隊 Scrum，持續為客戶迭代交付增量。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"從只存在 PO 腦海裡、沒有一個被視覺化出來的 Product Backlog，轉為使用 Jira 管理，讓整個 Scrum Team 可以一起維護的狀態。並且進而發展 Product Roadmap 與 Release Plan，突破過往只執行 Scrum 會陷於只專注在短期規劃的困境，讓整個 Scrum Team 更能夠專注、對準中長期目標，去討論、調整 Product Backlog 的 Priority，並且去取捨時間與範疇。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了增加敏捷的透明、檢視與調適性，也陸續使用各種方式揭露資訊前對齊我們的認知。從過去靠直覺去估算 Item 的大小，我們會使用相對估軟去比較過去記錄有參考價值的 Item，揭露彼此對於當張 Item 範疇與工作量的認知。並善用估算出來的點數，製作速率表，讓我們有能力去預判未來數個迭代的可能交付的範圍，並在發現與預期不合時，及時去做範疇的調整與相關協調。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了確保 Item 的品質，我們也從零到有去制定了完成的定義 (DoD)，從最基本的核心功能要手動測試，擴展到從 Refine 階段，到設計階段、開發階段、交付階段，整個 Item 生命週期各有要求的 DoD。也會每季一次檢視，進行調整。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在團隊的擴展上，除了具有全端能力的產品工程師團隊拓展外，也藉著組織的變動，導入了設計團隊進入 Scrum Team，讓整體 Scrum Team 更能符合有能力在一個部門內完成端對端的開發。這過程中不斷摸索摸索如何讓設計團隊執行 Scrum，包括讓設計師也暸解 User Story、Sprint Goal、估點的方式、寫出使用者導向而不是規格的 Acceptance Criteria。到現在設計團隊已經能與產品工程師團隊一起執行 Scrum，在確保當前產品工程師團隊能夠交付出增量外，也提前去持續交付設計的增量，讓產品的開發能夠持續推進。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在檢視產品增量的 Sprint Review，也協助 Scrum Team 從原本的報告與單向的展示成果的方式，轉向 LeSS 提倡的 Bazaar，也就是內部常稱的擺攤博覽會。我們是兩個產品合辦博覽會，團隊會在會議一開始預告擺攤的內容，然後鼓勵不同產品的夥伴去其他產品線去試玩。除了產出實際可運作的軟體增量的產品開發團隊，設計團隊也會擺攤和參與者介紹他們的設計，包括理念、流程，各攤位搜集回饋，讓 PO 參考，並在下個迭代 SP1 開始前的和團隊說明參考的理由。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在團隊成長的過程中，也持續培養能夠在團隊擔負 ScrumMaster 職責的成員，讓團隊有能力持續前進。讓身為全職的 ScrumMaster 能夠持續地放手，以 RACI 模型來說，就是從在 Scrum 的執行上佔據較多 Reponsible 逐漸轉移到 Consulting 的角色。包括原本逐漸成為多團隊的 Retrospective 引導者機器，透過分享技巧與工具箱的建立，讓團隊逐漸能夠自主去 Retrospective，也各自發展自己激發觀點與創意的主持方式，互相分享。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我也這過程中轉換成觀察者的角色，去觀察團隊，並將我看到的狀態鏡映團隊給團隊參考。為符合我們價值觀的給予肯定，點出團隊的需要注意的盲點，讓團隊能夠自己意識到自身狀態，逐漸調整成自己理想的樣貌。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"目前整個 Scrum Team 已經不用 ScrumMaster 時時刻刻的關注，能夠自己持續前進，並在需要 ScrumMaster 的專業時提出需求討論。身為 ScrumMaster 可以更多專注在重要但不緊急的事情去推進整個 Scrum Team 的成長，並且隨時做好準備與團隊面對在 VUCA 時代可能會迎來的動盪與暴風，一起討論如何應對與調整。"}]},{"type":"element","tag":"h2","props":{"id":"技巧"},"children":[{"type":"text","value":"技巧"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"執行的確實度"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"透明度"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"引導團隊的能力"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"帶領團隊逐步改善的成果"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了讓團隊逐漸成長為一個更加敏捷的團隊，身為沒有實權的 ScrumMaster，最忌諱的就是用 command 與 control 的方式要團隊去執行行動。也很高興在這個組織裡，團隊也不會是被動的接受改變，會去提出自己的困惑、不理解，甚至是提出基於當時認知的反對立場，讓我們可以聊解認知落差是什麼。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以在推動 Agile 與 Scrum 的過程中，是經過一次次的知識分享與討論而逐漸在這方面的知識建立理解，無論是在導入估算、速率表、DoD、LeSS 時，我總是會準備好題材，邀請大家一起來理解。或是說明一些改變的意圖，邀請 Scrum Team 一起實驗，並訂下下次檢視的日期，讓大家明確知道這真的只是嘗試，而不是一個定案，像是 Sprint Review 改成博覽會就是一場實驗。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"剛導入多團隊 Scrum 時，兩個來自不同小產品的團隊一起開 Scrum 時，更是一場大型實驗。我們會在每個 Scrum Events 結束時，當下面對白板進行五分鐘左右的 Retrospective，讓大家能夠及時提出覺得好，可以在下次會議保持的、覺得不好，我們要來想怎麼調整的，讓這些事件也跟著迭代，並且是一起變他，而不是單方面由 ScrumMaster 去規定要怎麼做。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過 ScrumMaster 確保事件發生，但執行方式卻是整個 Scrum Team 一起共創。唯有透過這樣的執行方式，能夠創造出最適合我們組織當下狀況的 Scrum 執行方式。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"身為 ScrumMaster，另外能做的事情就是做好各項準備，在團隊有痛點與需求時。也就是俗稱的 Learning Moment 出現時，端出事前就準備好的食材與料理指南，再次與團隊展開討論和實驗設計，料理出最合我們胃口的菜餚。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"就像是當團隊對於當前的估算感到困惑時，馬上約個時間在當週辦一場分享說明估算的概念。當團隊開始對於速率表與估算方式開始走偏以及沒有信心時，即時的提出一個在其他 Scrum Team 迭代過數次的新速率表，以及在 RSG 培訓課程中學到的估算執行方式，和團隊一起探討，重新對齊了我們之後在這方面的執行方式。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"又像是我們要開啟現在產品中，一個較大的專案時，團隊對於充滿未知與不確定性的範疇感到焦慮，就可以端出 User Story Mapping，一起釐清這次專案的全貌，並且劃分我們的 MVP、MMP、Good to have 的範疇，估算出最少和最多個迭代才能完成的預測。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"延續上段，當團隊對於這類和過去相比較大、長達數月的開發範疇感到絕望與失去動力時，我們就辦一場簡單的 Workshop，訂出這個專案的發布計畫。一起在牆上貼上 Sprint 編號，並依照優先度在各個 Sprint 排好一個個 Story Item 卡片，視覺化出我們的現況，然後展開範疇選擇與取捨的討論。也開始了每次 Sprint Review 一起檢視這個圖表的機制，讓我們從原本只檢視 1~2 個 Sprint 的近光燈視野，拓展到能看見當前目標全貌的遠光燈，並在每次 Sprint 中按照當前的開發進度，去檢視與調整這些範疇，或是砍掉、或是延後。也會用不同的顏色標註出與目標無關但必須開發的 Item，提醒我們在這些時候不得不偏離目標，且大家都知道原因與考量是什麼。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過這樣的改變，我們在 Product Backlog 的透明度有了突破性的提高。整個 Scrum Team 更知道自己為何而戰，也知道我們因為什麼而取捨。團隊更暸解 PO 的考量，不只透過提問或是提供觀點補足 PO 的盲點，更也與 PO 站在一起，開發出我們心目中的產品。"}]},{"type":"element","tag":"h2","props":{"id":"工具"},"children":[{"type":"text","value":"工具"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"執行的框架"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"工具使用程度"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"正如前述，我們主要在開發上使用的是 Scrum 框架。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但經過了前一次大專案的開發後，我們意識到 Scrum 不一定是我們每次的最好選擇，當我們在商業模式、產品需求、技術掌握度都是明確、或經過數次迭代變成明確時，也可以為了減少會議時間的打斷與浪費，拋棄 Scrum Sprint 迭代的方式，採用比較像是瀑布流整合 Kanban 的概念，直接一次 Refine 完所有的待辦事項，用 Pull 的方式去一個個開發，遇到意外在即時像團隊與 PO 反應。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為此我們也會使用 Stacey Matrix 和 Cynefin 框架，讓整個 Scrum Team 一起討論上述所說的三種指標的狀態，一起判定風險與明確程度，一起選擇要透過怎樣的合作方式進行開發。當團隊是自己意識到產品狀態與選擇使用 Scrum 時，會更加暸解為何而跑，而不是因為組織號稱敏捷而跑。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"組織也在去年決定要發展出明確的 Product Roadmap，讓我們可以在產品的長期發展上，有更明確的策略與目標。我從中也協助透過 Workshop 的方式，一起和團隊發想產品策略，互相交流，為未來一年到三年的目標提供各個觀點，讓 PO 以及組織的管理層能與客戶討論，訂出團隊、客戶、組織都滿意的目標。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"也因應這兩年的疫情，身為 ScrumMaster，也在疫情期間協助 Scrum Team 嘗試數位化工具，包括用來 Retrospective 的 Metro Retro 和 Miro、協助我們管理 Product Backlog 的 Jira。在這些數位化工具的使用，我們也是逐漸改善與拓展我們的使用方式，包括開始用 Miro 進行 Workshop，以及呈現我們產品的 Product Roadmap 和 Release Plan。Jira 我們也進行各項的客製化，讓工具更貼近我們的使用習慣。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"我也發會自身技術背景出身的優勢，讓 Jira 的使用上有更多自動化，降低團隊使用的門檻。甚至搭配 Google Sheet，讓我們可以自動化產出 Product Backlog 中我們想要看到、但是 Jira 難以提供圖性化介面的圖表。像是速率表、或是統計 Item 意圖與類型的數量，結合我們在執行的 KPI 與執行力修煉中的元素。甚至產出當次迭代的累積流量圖，讓我在觀察團隊上，除了行為面上，更可以用數據去給出一些觀察與觀點。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"成果","depth":2,"text":"成果"},{"id":"技巧","depth":2,"text":"技巧"},{"id":"工具","depth":2,"text":"工具"}]}},"_type":"markdown","_id":"garden:articles:Papers of Change Leader of the Year of ACT Taiwan Agile Awards.md","_source":"garden","_file":"articles/Papers of Change Leader of the Year of ACT Taiwan Agile Awards.md","_extension":"md","head":{"title":"ACT 台灣敏捷大賞 - 年度變革引導者 投稿文 - 深藏若虛"}},{"_path":"/articles/2021-06-18-slack-communication-guide","_dir":"articles","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Slack 溝通指南","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因為疫情影響，現在工作環境改為 WFH 已久。以往辦公室直接面對面溝通的方式，在這個環境下就難以達成。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"儘管有仰賴 Discord 或 Zoom 之類的工具，建立起數個語音頻道。但在實務上仍有許多缺點，例如："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"正在進行的對話時，常被外來者打斷"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"無法像實體環境下因遠距而有聲量大小差異，所以任何有關與無關的對話都讓自己難以專注"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"因為一片沈默或怕打斷他人專注狀態而不敢發言，導致溝通頻率更低"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如此困境，若再遇到工作時間開始不一致的情況，語音對話這類同步對話的方式就越不適合。所以透過文字溝通的非同步對話就顯得重要。但身邊的夥伴，也礙於過往習慣用對話的溝通方式，在文字溝通上會需要點指引，所以我就想起前公司 CrBoy 曾在 Wiki 寫的〈工作流程指南〉是一份還不錯的文件，於是再近一步編寫成為本篇文章。"}]},{"type":"element","tag":"h2","props":{"id":"指南"},"children":[{"type":"text","value":"指南"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本文件提供透過 Slack 進行文字對話的溝通指南給大家參考，以下是建議而非規範。  意思是你還是可以不遵循（也許迫於現實），但是照建議做可能會讓溝通更佳流暢。"}]},{"type":"element","tag":"h3","props":{"id":"文字和語音"},"children":[{"type":"text","value":"文字和語音"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"不緊急的事情，用文字留言在頻道上"}]},{"type":"text","value":"，會比起直接到語音頻道打斷他人的對話或專注狀態要好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"若是文字討論出現困難，直接邀請大家改用語音對話"}]},{"type":"text","value":"，會比繼續用文字討論好。"}]}]},{"type":"element","tag":"h3","props":{"id":"資訊透明"},"children":[{"type":"text","value":"資訊透明"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Slack channels 是主要的通訊管道。"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"公事儘量都在 Slack 的「頻道」中講"}]},{"type":"text","value":"，若有必要可私訊講。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"任何語音對話結束後，"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"將有需要讓其他人知道的事發到 Slack，把資訊擴散出去。"}]}]}]},{"type":"element","tag":"h3","props":{"id":"文字陳述"},"children":[{"type":"text","value":"文字陳述"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"在描述一件事或問題，先在前幾句破題、結論"}]},{"type":"text","value":"，會比先講冗長的脈絡好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在描述時，應先提供事實，再提供觀點與假設。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若描述的事情是自己的假設，應該明確指出這件事。"}]}]},{"type":"element","tag":"h3","props":{"id":"開啟話題"},"children":[{"type":"text","value":"開啟話題"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"要開啟一個話題，在頻道發言"}]},{"type":"text","value":"，會比私訊討論好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"若是敘述很長時，將細節補充在 Thread 裏"}]},{"type":"text","value":"，會比起整篇都打在本文好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"在本文或 Thread 中 mention"},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-mention","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-mention"},"children":[{"type":"text","value":"1"}]}]},{"type":"text","value":" 需要知道這份資訊的相關夥伴"}]},{"type":"text","value":"，讓他們能直接收到 Thread 裡有回覆的通知，會比要求他們時時關注 Slack 訊息好。"}]}]},{"type":"element","tag":"h3","props":{"id":"回覆話題"},"children":[{"type":"text","value":"回覆話題"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"同個話題，在 Thread 發言"}]},{"type":"text","value":"，比直接在頻道討論好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Thread 本文偏離的話題，另外在頻道上發言"}]},{"type":"text","value":"，比繼續在 Thread 討論好。可以善用分享功能在頻道開新的 Thread。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"遇到與自己預期不合的情況，以好奇、詢問、提示為問句"}]},{"type":"text","value":"，會比質疑好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"想要關注某個 Thread，可以主動對話題點擊「Get notified about new replies」去追蹤。"}]}]},{"type":"element","tag":"h3","props":{"id":"協助總結"},"children":[{"type":"text","value":"協助總結"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"若話題 Thread 進行了許多討論，為需要這些資訊但沒參與討論的人做總結"}]},{"type":"text","value":"，比起直接請他們看整個討論串好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"重要的結論同步發佈在頻道"},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-send-to-channel","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-send-to-channel"},"children":[{"type":"text","value":"2"}]}]},{"type":"text","value":" 讓所有人知道"}]},{"type":"text","value":"，會比起只留在 Thead，只有參與討論的人知道要好。"}]}]},{"type":"element","tag":"h2","props":{"id":"後話"},"children":[{"type":"text","value":"後話"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本篇文章不會是一個最好的指南，但若未來有時間或聽到一些回饋，會再嘗試持續更新。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在寫這邊文章時也懷念起在前公司時，和一群產品開發部門的夥伴，討論各種工作流程的改善方式。當時也透過 Asana 作為一個知識管理工具，裡面存放了許多相關的文件，至今仍成為我不時參考的依據。"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"section","props":{"className":["footnotes"],"dataFootnotes":true},"children":[{"type":"element","tag":"h2","props":{"id":"footnote-label","className":["sr-only"]},"children":[{"type":"text","value":"Footnotes"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{"id":"user-content-fn-mention"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"提示：mention"}]},{"type":"text","value":"：在 slack 使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@username"}]},{"type":"text","value":" 可 mention 這個人，讓他收到推播通知。使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@channel"}]},{"type":"text","value":" 可以讓整個頻道的人都收到通知，適合強迫大家看某則訊息。使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@here"}]},{"type":"text","value":" 會通知現在在線上的人，適合找人幫忙 "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-mention","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]},{"type":"element","tag":"li","props":{"id":"user-content-fn-send-to-channel"},"children":[{"type":"text","value":"將留言發佈到頻道：善用勾選「Also send to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#channel"}]},{"type":"text","value":"」，將結論發佈到頻道上讓大家知道。 "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-send-to-channel","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]}]}]}]},"title_en":"Slack Communication Guide","slug":"slack-communication-guide","aliases":["Slack 溝通指南","Slack Communication Guide"],"created_at":"2021-06-17T16:20:19.000Z","published_at":"2021-06-17T16:20:19.000Z","updated_at":"2023-06-20T16:34:39.000Z","tags":["slack","communication"],"moc":["Agile"],"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因為疫情影響，現在工作環境改為 WFH 已久。以往辦公室直接面對面溝通的方式，在這個環境下就難以達成。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"儘管有仰賴 Discord 或 Zoom 之類的工具，建立起數個語音頻道。但在實務上仍有許多缺點，例如："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"正在進行的對話時，常被外來者打斷"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"無法像實體環境下因遠距而有聲量大小差異，所以任何有關與無關的對話都讓自己難以專注"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"因為一片沈默或怕打斷他人專注狀態而不敢發言，導致溝通頻率更低"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如此困境，若再遇到工作時間開始不一致的情況，語音對話這類同步對話的方式就越不適合。所以透過文字溝通的非同步對話就顯得重要。但身邊的夥伴，也礙於過往習慣用對話的溝通方式，在文字溝通上會需要點指引，所以我就想起前公司 CrBoy 曾在 Wiki 寫的〈工作流程指南〉是一份還不錯的文件，於是再近一步編寫成為本篇文章。"}]},{"type":"element","tag":"h2","props":{"id":"指南"},"children":[{"type":"text","value":"指南"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本文件提供透過 Slack 進行文字對話的溝通指南給大家參考，以下是建議而非規範。  意思是你還是可以不遵循（也許迫於現實），但是照建議做可能會讓溝通更佳流暢。"}]},{"type":"element","tag":"h3","props":{"id":"文字和語音"},"children":[{"type":"text","value":"文字和語音"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"不緊急的事情，用文字留言在頻道上"}]},{"type":"text","value":"，會比起直接到語音頻道打斷他人的對話或專注狀態要好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"若是文字討論出現困難，直接邀請大家改用語音對話"}]},{"type":"text","value":"，會比繼續用文字討論好。"}]}]},{"type":"element","tag":"h3","props":{"id":"資訊透明"},"children":[{"type":"text","value":"資訊透明"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Slack channels 是主要的通訊管道。"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"公事儘量都在 Slack 的「頻道」中講"}]},{"type":"text","value":"，若有必要可私訊講。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"任何語音對話結束後，"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"將有需要讓其他人知道的事發到 Slack，把資訊擴散出去。"}]}]}]},{"type":"element","tag":"h3","props":{"id":"文字陳述"},"children":[{"type":"text","value":"文字陳述"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"在描述一件事或問題，先在前幾句破題、結論"}]},{"type":"text","value":"，會比先講冗長的脈絡好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在描述時，應先提供事實，再提供觀點與假設。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"若描述的事情是自己的假設，應該明確指出這件事。"}]}]},{"type":"element","tag":"h3","props":{"id":"開啟話題"},"children":[{"type":"text","value":"開啟話題"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"要開啟一個話題，在頻道發言"}]},{"type":"text","value":"，會比私訊討論好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"若是敘述很長時，將細節補充在 Thread 裏"}]},{"type":"text","value":"，會比起整篇都打在本文好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"在本文或 Thread 中 mention"},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-mention","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-mention"},"children":[{"type":"text","value":"1"}]}]},{"type":"text","value":" 需要知道這份資訊的相關夥伴"}]},{"type":"text","value":"，讓他們能直接收到 Thread 裡有回覆的通知，會比要求他們時時關注 Slack 訊息好。"}]}]},{"type":"element","tag":"h3","props":{"id":"回覆話題"},"children":[{"type":"text","value":"回覆話題"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"同個話題，在 Thread 發言"}]},{"type":"text","value":"，比直接在頻道討論好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Thread 本文偏離的話題，另外在頻道上發言"}]},{"type":"text","value":"，比繼續在 Thread 討論好。可以善用分享功能在頻道開新的 Thread。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"遇到與自己預期不合的情況，以好奇、詢問、提示為問句"}]},{"type":"text","value":"，會比質疑好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"想要關注某個 Thread，可以主動對話題點擊「Get notified about new replies」去追蹤。"}]}]},{"type":"element","tag":"h3","props":{"id":"協助總結"},"children":[{"type":"text","value":"協助總結"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"若話題 Thread 進行了許多討論，為需要這些資訊但沒參與討論的人做總結"}]},{"type":"text","value":"，比起直接請他們看整個討論串好。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"重要的結論同步發佈在頻道"},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-send-to-channel","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-send-to-channel"},"children":[{"type":"text","value":"2"}]}]},{"type":"text","value":" 讓所有人知道"}]},{"type":"text","value":"，會比起只留在 Thead，只有參與討論的人知道要好。"}]}]},{"type":"element","tag":"h2","props":{"id":"後話"},"children":[{"type":"text","value":"後話"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本篇文章不會是一個最好的指南，但若未來有時間或聽到一些回饋，會再嘗試持續更新。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在寫這邊文章時也懷念起在前公司時，和一群產品開發部門的夥伴，討論各種工作流程的改善方式。當時也透過 Asana 作為一個知識管理工具，裡面存放了許多相關的文件，至今仍成為我不時參考的依據。"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"section","props":{"className":["footnotes"],"dataFootnotes":true},"children":[{"type":"element","tag":"h2","props":{"id":"footnote-label","className":["sr-only"]},"children":[{"type":"text","value":"Footnotes"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{"id":"user-content-fn-mention"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"提示：mention"}]},{"type":"text","value":"：在 slack 使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@username"}]},{"type":"text","value":" 可 mention 這個人，讓他收到推播通知。使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@channel"}]},{"type":"text","value":" 可以讓整個頻道的人都收到通知，適合強迫大家看某則訊息。使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"@here"}]},{"type":"text","value":" 會通知現在在線上的人，適合找人幫忙 "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-mention","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]},{"type":"element","tag":"li","props":{"id":"user-content-fn-send-to-channel"},"children":[{"type":"text","value":"將留言發佈到頻道：善用勾選「Also send to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"#channel"}]},{"type":"text","value":"」，將結論發佈到頻道上讓大家知道。 "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-send-to-channel","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"指南","depth":2,"text":"指南","children":[{"id":"文字和語音","depth":3,"text":"文字和語音"},{"id":"資訊透明","depth":3,"text":"資訊透明"},{"id":"文字陳述","depth":3,"text":"文字陳述"},{"id":"開啟話題","depth":3,"text":"開啟話題"},{"id":"回覆話題","depth":3,"text":"回覆話題"},{"id":"協助總結","depth":3,"text":"協助總結"}]},{"id":"後話","depth":2,"text":"後話"},{"id":"footnote-label","depth":2,"text":"Footnotes"}]}},"_type":"markdown","_id":"garden:articles:2021-06-18-slack-communication-guide.md","_source":"garden","_file":"articles/2021-06-18-slack-communication-guide.md","_extension":"md","head":{"title":"Slack 溝通指南 - 深藏若虛"}},{"_path":"/articles/2018-06-02-how-to-describe-a-bug-report","_dir":"articles","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"如何敘述異常回報","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本文是 2018 年在 IThome 鐵人賽所寫的文章，好像也是唯一有完整釋出的文章（艸），用心寫完這篇就好就無力了 XD。在這邊稍微把這篇原本分四天的文章進行整併、校閱，讓有興趣閱讀的人可以讀得比較舒適。"}]}]},{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"今天來講講如何敘述一個議題（issue），通常議題有分兩種，一種是功能請求（feature request），另一種是異常回報（bug report）"},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-1","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-1"},"children":[{"type":"text","value":"1"}]}]},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-2","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-2"},"children":[{"type":"text","value":"2"}]}]},{"type":"text","value":"。由於功能請求中關於需求的描述會涉及不少知識與經驗，使用者和工程師的相關描述可能又大不相同，這方面的知識很難一次論述完整；而異常回報的描述則較為通泛，主要是講述在回報異常時，應該要附上哪些資訊會對開發者更有幫助，不太區分角色，較為簡單。所以本篇先著重在怎樣描述異常。"}]},{"type":"element","tag":"h2","props":{"id":"情境"},"children":[{"type":"text","value":"情境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"「為什麼我們要學會如何描述一個問題（異常）呢？問題描述有什麼難的？不就是把遇到的問題講出來就好了嗎？難道我講的還不夠清楚嗎？」我想這是多數使用者甚至少數開發者聽到這個主題會有的疑惑，事實上這是很正常的反應，對於多數異常回報者來說，他們已經盡力地把遇到的異常行為描述出來了，他們眼中的異常就是這樣，對於協助我們指出異常的使用者，我們很難用比較強硬的態度說：「這些資訊太少了，我不接受」。到最後我們也只能抱著疑惑的心情嘗試找出使用者遇到的異常，但在資訊不足的情況下，這些異常通常都石沈大海。尷尬的是，你若把異常議題關掉、結案，使用者可能還會抗議，於是這些議題就成為議題追蹤工具（issue tracker）的萬年大石頭，卡在那邊不上不下。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"崩潰的是，在議題追蹤工具裡不只前述的項目卡在那裡，甚至有更多的陳年議題是前輩們留下來的。裡面只簡短地用兩三句話（甚至更短、或只有標題）描述遇到什麼問題，再沒有其他資訊。我們看不懂這個問題到底在說什麼，我們也不知道這個問題要怎麼重現，我們更不知道這個問題是哪個版本的事，是不是在現在的版本已經不會出現了？抱著疑惑、抱著頭，我們・真的・非常・苦惱。 _(:3」∠)＿"}]},{"type":"element","tag":"h2","props":{"id":"目的"},"children":[{"type":"text","value":"目的"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在回報異常時提供充足的資訊，能夠讓開發者更快解決。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"是的，當我們在回報異常時提供充足的資訊，會讓開發者更能精準判斷這個「症狀」的「病因」是什麼，才能更精準的解決軟體的病灶 "},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-3","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-3"},"children":[{"type":"text","value":"3"}]}]},{"type":"text","value":"，從而快速解決問題，既省下開發者的時間成本，使用者也能更快的享受異常排除的成果。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以學會如何描述異常是任何與這份程式有關聯的人都應該要知道的。使用者要知道、客服要知道、專案經理要知道、工程師更要知道。如此一來，使用者或客戶能夠明確將情況描述給開發團隊，讓這異常迅速排除，繼續愉快的使用產品。若是使用者沒有這份知識時，客服就要幫忙過濾，在與使用者的溝通中引導他們把這些資訊回答出來，避免讓不必要的雜訊干擾開發團隊的進度。專案經理更要嚴格把關將送進開發團隊的異常回報，要求客服把缺漏的資訊補上，讓開發團隊可以將時間專注在解決異常而不是重新尋找如何重現它。工程師則更應該要謹記，現在的詳細記錄異常資訊，可以讓我們都不再多背一袋技術債，絕對不要嫌麻煩而省略，不然未來將會耗費更多時間重新釐清這個異常。"}]},{"type":"element","tag":"h2","props":{"id":"作法"},"children":[{"type":"text","value":"作法"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那在回報異常前，我們應注意哪些事項呢？那就是查看當前的議題清單裡，有沒有和我們所遇到的異常相同的情況，避免重複（duplicate）回報。同樣的異常應該集中在同個議題討論，而不是散落在清單各處，這樣只會增加開發團隊的排除成本。當我們發現已經有既定異常議題存在時，可以先嘗試了解該討論串的內容，若仍然無法排除，則可以將原本要回報的內容，於該議題討論串中回覆，增加樣本數。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那麼有哪些資訊是在回報異常時需要附上的呢？這邊先以清單的方式表述："}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"標題（Title）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"版本（Version number）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"問題簡述（Describe the problem）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"重現步驟（Steps to reproduce）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"預期行為（ What I expected）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"實際行為（What happened instead）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"影像（Screenshot / Video）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"環境（Environments）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"脈絡或程式碼（Context / Source）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"備註（Additional details）"}]}]},{"type":"element","tag":"h3","props":{"id":"標題title"},"children":[{"type":"text","value":"標題（Title）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"無論是什麼類型的文章，有個好的標題就是一個好的開始，議題的標題更是如此。如何用最少的字把異常的輪廓描述出來，就是這個資訊需要探討的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在探討什麼是好的標題前，我們先說說什麼叫做不好的標題。讓人最討厭的標題莫過於內容農場式的標題，也就是講得很誇大，但卻什麼重點都沒提到，像是「這裡有一個很嚴重的問題造成程式崩潰了！」或是「緊急！這個異常讓客戶抓狂了！」等等。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那到底標題要如何說清楚呢？把握一個原則就是至少詳細到不容易和其他類似異常搞混，以現實生活的情境來舉例，假設今天台中某處有個路燈壞了，你想舉報請市府趕緊請人維修："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"南區有個路燈壞了（Ｘ，太籠統，這樣同名不同處的異常可能會太多）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"南區台中路上靠近二二八公園處有路燈壞了（Ｏ，把異常發生的地點指名）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"南區台中路上靠近二二八公園處有路燈不斷閃爍（Ｏ，把故障狀況請得更清楚）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"南區編號 641549 的路燈不會亮（Ｏ，善用產品本身提供的除錯輔助資訊）"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另外多用客觀的描述取代主觀看法也會讓標題更好識別："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"網站的選單很難用，一直沒反應（Ｘ）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"網站的選單按鈕太小了，觸控容易失敗，或是誤觸其他按鈕（Ｏ）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"網頁會跳出奇怪的畫面，不知道發生什麼事（Ｘ）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"點擊編輯文章的按鈕，會跳出「We’re sorry, but something rent wrong」的畫面（Ｏ）"}]}]},{"type":"element","tag":"h3","props":{"id":"版本version-number"},"children":[{"type":"text","value":"版本（Version number）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"產品發生異常時的版本號非常重要，它可以開發者確認這個異常是在產品開發的什麼時間點發生的，是否已經在比較新的版本被修復了？或是該行為在以前沒問題，直到某個版本後才發生異常，開發者能透過版本號鎖定變動的位置，了解前後的脈絡，判斷是不是有一個變動提交（commit）沒有注意細節而引發了異常。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若說標題和描述是讓開發者了解空間與事件，那麼版本就是讓開發者知曉時間。在兩者資訊充足的情況下，雙方對談就容易聚焦，而不是在跟平行世界的對方雞同鴨講。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以程式在釋出時應該要有一套版本號訂定風格，讓使用者在回報異常時，開發者能迅速聚焦在準確的範圍去除錯。若是程式是沒有明確版本號，提供程式當前版本控制紀錄中的資訊（通常是最後一次提交的雜湊值（Hash））也是個方式。"}]},{"type":"element","tag":"h3","props":{"id":"問題描述describe-the-problem"},"children":[{"type":"text","value":"問題描述（Describe the problem）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果好的標題是一個好的開始，那麼問題簡述就是把這個好的開始延續下去。標題通常必須一句話簡述整個異常的輪廓，那問題描述就是把異常的細節描繪出來。標題中省略的細節、脈絡，或是你對這個問題的觀察和看法，都可以在這裡好好詳述。若同樣以路燈為例，那大概就是："}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"南區台中路上靠近二二八公園處有路燈壞了，它時不時在閃爍。這附近只有這個路燈有異常現象，其他路燈都是好的，該路燈的編號是 641549 。看它的桿身似乎有被撞擊過的痕跡，或許是最近被車輛擦撞過導致線路異常？我沒有很確定。詢問過附近的居民，似乎在前天還是好的。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在這個例子，可以看到除了標題所提到的資訊外，還多了許多來自於回報者的觀察，讓我們可以有更多資訊的得以除錯。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"異常描述：閃爍"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"同型比較：和其他路燈相比"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"產品資訊：路燈編號"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"額外表徵：被撞擊過的痕跡"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"個人推斷：或許是被擦撞過導致線路異常"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"其他資訊：詢問居民"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"用路燈來描述可能還是有點籠統，很難和實際程式做聯想結合，這邊改以登入發生錯誤的情境作為舉例："}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"用帳號密碼登入後，會跳到顯示 We’re sorry, but something went wrong 的畫面"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"輸入帳號密碼登入後沒有跳到正常頁面，而是顯示錯誤訊息的頁面（異常描述），出現錯誤訊息的網址是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"https://xxx.xxx.xxx/ooo?a=aaa&b=bbb"}]},{"type":"text","value":"（產品資訊）。其他頁面似乎都正常，透過社交平台登入的功能也正常（同型比較）。不管輸入的帳號密碼是否正確都會報錯。我不知道發生什麼事，會不會是帳號密碼驗證的程序出錯？因為社交平台登入是正常的（個人推斷）。問過朋友，他們使用帳號密碼登入也有同樣的異常。有朋友說早上七點時還是正常的（其他資訊）。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"當然，這些特徵與資訊項目都只是舉例，每個專案或情境可以提供的資訊類型都不相同，但希望這樣舉例能讓讀者們稍微了解「問題描述」與「標題」的差異，以及有什麼細節是可以提供的。"}]},{"type":"element","tag":"h3","props":{"id":"重現步驟steps-to-reproduce"},"children":[{"type":"text","value":"重現步驟（Steps to reproduce）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"重現步驟就是指經過哪些動作後，就一定會引發這個異常。這是讓開發者代入異常發生情境很重要的資訊。如果沒有提供重現步驟，開發者就要耗費更多時間去分析到底發生了什麼事，然後嘗試要如何重現，能將異常重現後才能開始進行除錯。如果直接提供重現步驟，那開發者就能直接面對異常，然後依照他的經驗快速除錯。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有重現步驟的異常回報，也容易使回報者和開發團隊站在同一個視角，而不是使用者一直在幹譙，然後開發團隊只能不斷道歉，卻還是找不到異常發生的原因，或是直接丟給使用者「這在我電腦是正常的！（It works on my computer!）」交差了事。當開發團隊非常努力想透過回報者的描述去重現異常，卻一直失敗時，面對回報者的催促，有可能會產生負面情緒，認為回報者是來鬧的，畢竟在兩者的觀點上，對方描述的事情都是沒發生過的呀！"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若是該異常無法百分之百重現，也要在這裡特別講明。儘管沒有一個肯定能重現的步驟，但仍可以試著把可能會發生異常的步驟寫出來，讓開發者了解到底再發生這個異常前，會經歷過什麼事，導致有機率觸發異常。回報者也需要有著「在沒有有永遠能重現異常的步驟時，這個議題可能會需要耗費較長時間除錯」的心理準備。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"好的重現步驟在於一個指令一個步驟，先以上節提到的登入異常為例，大致如下："}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"進入網站（"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"https://www.xxxx.tw"}]},{"type":"text","value":"）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"點擊首頁右上方的「登入」按鈕。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"再登入表單中輸入帳號密碼。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"點擊表單中的「送出」按鈕。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"發生異常。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"雖然這個例子這個重現步驟看起來似乎沒提供到什麼資訊，但某種層面上卻也讓開發者知道使用者是用合理的方式去進行登入，可以排除是非預期的行為模式導致異常發生。透過這樣一個指令就寫一個步驟的，讓開發者了解實際的行為模式，也讓開發者依照這樣的步驟執行時，能夠代入使用者的情境。若是開發者在執行步驟時是正常的，就可能會往是不是環境或版本的不同造成結果差異的方向去想，而不是不斷在程式碼中鑽牛角尖。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若回報者在使用產品時，有了一些非預期行為是開發者當初沒有想到的，就可以讓開發者不被既有的觀點束縛，突破盲點而瞭解錯誤的原因。畢竟我們都知道，身為開發者去執行一些情境，都一定會預設我們心中已經非常熟悉的合法步驟，而不會意識到有其他非預期行為的可能。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另外，若是能夠在每個步驟都附上畫面截圖，也會減少對步驟執行的誤解，並透過畫面提供了回報者可能沒意識到的額外資訊。"}]},{"type":"element","tag":"h3","props":{"id":"預期行為what-i-expected"},"children":[{"type":"text","value":"預期行為（ What I expected）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"預期行為就是指當我們透過「重現步驟」操作時，我們預想中理應該出現的行為、結果、狀態。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"預期行為在於讓開發團隊暸解我們心中認為正常的認知是否與當初產品設計時相同，讓兩方在這方面的資訊是對稱的。在產品設計時，難免會有產品的行為與使用者的預期行為不同的情況，使用者會因為這種情況認定是程式發生異常，進而回報。但事實上，程式並沒有問題，只是當初產品設計時在使用者經驗（UX）的決策不夠理想，或是設計概念比較新穎，使用者和市場並還沒被教育過。所以若能知道使用者預期行為，就能避免把時間成本耗費在處理其實不是異常的回報中，而能讓客服先將這部分的回報篩選掉，讓開發團隊得以專注在真正的異常回報中。"}]},{"type":"element","tag":"h3","props":{"id":"實際行為what-happened-instead"},"children":[{"type":"text","value":"實際行為（What happened instead）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"實際行為就是指當我們透過「重現步驟」操作時，實際發生行為的描述，通常也就是對異常的描述。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"與預期行為同理，這部分的描述能讓開發團隊暸解我們實際遇到的情況，並透過是否與產品設計相符或相異去進一步判斷發生什麼事。排除設計和使用這預期行為的非異常回報，這部分的資訊就是讓開發團隊搭配重現步驟去分析重要描述。與「問題描述」相似，但如同「問題描述」是「標題」的進一步說明，那「實際行為」就是「問題描述」中，關於異常更詳細的描述。"}]},{"type":"element","tag":"h3","props":{"id":"影像screenshot-video"},"children":[{"type":"text","value":"影像（Screenshot / Video）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"影像的部分是比較選擇性提供的資訊，包括螢幕截圖和操作的實際錄影。有時候這些資訊會直接在其他章節中提供，像是在重現步驟中，每步驟提供一個螢幕截圖、或是在實際行為中，把看到的情況截圖附上。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"影像是更真實的記錄，讓開發團隊若是對我們所描述的文字仍有點困惑時，能透過影像去暸解我們實際想表達的。或是如重現步驟中所說，透過畫面可以補足我們沒有意識到是有用處的資訊，但對開發者團隊來說是關鍵的細節。"}]},{"type":"element","tag":"h3","props":{"id":"環境environments"},"children":[{"type":"text","value":"環境（Environments）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"環境的部分是指程式運作的環境，舉凡作業系統、瀏覽器、相依函示庫等等，各家產品和版本都可能會影響程式的運作。這部分亦是很著要的資訊，其重要性不亞於版本、重現步驟等描述。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"環境資訊讓開發團隊在進行判斷時，可以先暸解異常會不會有可能只是環境造成的落差，而不是程式核心邏輯的錯誤，如此才能朝正確的方向進行異常排除。程式在開發時，很難保證在所有環境都能行為一致，尤其是網頁程式，在常見的四大瀏覽器（Chrome, Firefox, Safari, IE）的顯示可能都有細節的差異，甚至在同一種瀏覽器，在不同版本都會有不同。像是 IE 系列，在 6 ~ 11 的差異都滿大的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有時候程式可能會被執行的環境太多種，開發團隊沒有太多成本一一測試與驗證，或是為了支援太舊環境的成本太高，所以決定不再適用。但是就算開發團隊有在產品某處或者安裝程式提及，使用者不一定會知道這些訊息（忽略說明訊息），導致誤以為程式出了異常，但事實上只是該環境已經不被支援，或是不在驗證過的支援清單中。若有此資訊，就可以在客服階段就先為使用者解惑，減少處理時間與成本。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若是該環境是在程式認定的支援清單中，開發團隊也能搭配重現步驟快速了解狀況，並透過交叉比對去判斷是核心邏輯的錯誤，還是環境支援沒有完善。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以下提供比較常見的環境資訊："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"作業系統：Windows, Mac OS X, Android, iOS, Win10 Mobile"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"瀏覽器：Chrome, Firefox, Safari, IE, MS Edge, Opera 15+, Android Browser"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在提供這類資訊，除了環境名稱與主要版本號外，建議透過說明或者關於的資訊，取得比較詳細的版本號一併附上，會對開發團隊更有幫助。"}]},{"type":"element","tag":"h3","props":{"id":"脈絡或程式碼context-source"},"children":[{"type":"text","value":"脈絡或程式碼（Context / Source）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這部分又稱最小可重現模型（Minimal reproduction），比較偏向當產品是開發用的函式庫、框架時，會需要使用這個產品的開發者提供，而不是一般使用者。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"當我們使用某個函式庫、套件或框架時，若遇到異常，除了上述的資訊外，若能提供程式碼給產品的開發團隊去暸解，一定會更有幫助。但是我們也不能把我們自己產品的程式碼完全給開發團隊，一來可能是會有商業考量，這些程式碼是公司資產，不得任意外洩、二來是開發團隊也沒有時間和義務幫看你的產品的原始碼。這時候就需要針對發生異常的部分，實作最小可實現模型，不包含其他核心邏輯，純粹只有使用他們產品時的程式碼，越簡單且能重現異常越好。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而在實作小可實現模型時，也算是再次確認。我們自己在開發產品時，會由各種邏輯混雜在一起，若是架構沒設計好，很有可能就會互相影響。透過實作最小可重現模型，讓我們能夠排除是其他程式碼間接造成異常的可能性，而能聚焦該產品發生異常的原因與位置。"}]},{"type":"element","tag":"h3","props":{"id":"備註additional-details"},"children":[{"type":"text","value":"備註（Additional details）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"只要是不屬於本章中所提到的任何項目，但認定可能會對開發團隊排除異常有幫助的資訊都可以寫在這部分。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"像是這個異常沒辦法百分之百重現，甚至連重現步驟都難以確立，就可以在這邊加註。或是這個功能在以前都沒有發生過異常，是在某個版本後才故障。或是我們認為以我們的專業知識，能夠協助開發團隊排除異常，也可以在這邊寫下我們的看法。諸如此類。"}]},{"type":"element","tag":"h2","props":{"id":"困境"},"children":[{"type":"text","value":"困境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在前一章我們知道了哪些資訊應該在回報問題時附上，得以讓開發團隊善用該資訊儘速給予答覆或是除錯。但現實總是殘酷的，不見得所有的使用者都會知道這些要附上這些資訊，就算知道也不一定會勤於每次回報問題時都附上，講句難聽的，商業軟體有問題是開發團隊該負責的，使用者願意回報就已經是願意幫忙的，如果還要求每次都要制式風格回覆，不見得使用者都願意配合。（開源生態另當別論，開源生態是作者願意開發程式碼並開源提供給公眾使用已經仁至義盡了，並沒有義務要不斷維護。）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"要讓使用者願意回報完整的資訊給開發團隊，比較直接的作法就是在填寫回報的表單裡提供完整的資訊，讓使用者能夠了解有什麼資訊是開發團隊需要的、該怎麼取得那些資訊，而避免直接丟一個空白的文字框要求使用者自己填寫，填寫後又以提供資訊不足拒絕受理。若是透過 Github、Gitlab 管理問題回報，可以透過 Issue Template 的功能去自訂問題回報時，文字框預設會出現哪些資訊，這部分將在下一章提及。另外也可以在如前面陸續有在提及的，請客服和使用者溝通，協助使用者提供該資訊，透過此方法，就是要對客服做相關知識的教育訓練。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另外，若是在自家團隊或是開源專案，頻繁遇到內部人員在回報問題時，不遵守培訓或是表單提供的格式回報問題，不應該遷就接受，而是制定一個固定的時間（例如一到三天），在這個時間沒有改善，就直接關閉、封存該回報，不予受理。在這類議題，比較常遇到的就是業務或是客服無心遵守，認為自己的描述已經夠清楚了，而不願意再多耗費時間協助提供完整的資訊。或是工程師認為自己只是先輸入個關鍵描述，之後「自己」會再處理，不用那麼繁瑣再輸入。但通常結果都是開發團隊並不了解那些不完整的資訊是在填寫什麼問題，或是最後那個異常的處理者不是回報的工程師了，導致這個回報到最後並沒有提供它該有的幫助，反而成為異常清單中想移除卻又不敢移除的臭石頭。所以，打從最初就規定沒有符合規格的異常回報不受理，對於內部團隊是一個必須的措施。別把回報時的偷懶，連本帶利的變成開發團隊要代償的債務。"}]},{"type":"element","tag":"h2","props":{"id":"輔助"},"children":[{"type":"text","value":"輔助"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上一章有提到 Issue Template 可以協助我們自訂回報異常時的格式，本章將介紹在 GitHub、GitLab 這兩大開發者常用的程式碼託管與專案管理平台來如何善用此功能。"}]},{"type":"element","tag":"h3","props":{"id":"github-issue-template"},"children":[{"type":"text","value":"GitHub Issue Template"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GitHub 文件中的 "},{"type":"element","tag":"a","props":{"href":"https://help.github.com/articles/helping-people-contribute-to-your-project/","rel":["nofollow"]},"children":[{"type":"text","value":"Helping people contribute to your project"}]},{"type":"text","value":" 有提到許多關於如何協助其他人貢獻自己專案的一些方法，其中 "},{"type":"element","tag":"a","props":{"href":"https://help.github.com/articles/creating-an-issue-template-for-your-repository/","rel":["nofollow"]},"children":[{"type":"text","value":"Creating an issue template for your repository"}]},{"type":"text","value":" 就有提到如何自訂 Issue Template。本節稍微摘自裡面重要的流程在此說明。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GitHub 的 Issue Template 是透過在**預設分支（defaut branch）**中，建立一個名為 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"issue_template.md"}]},{"type":"text","value":"（大小寫皆可）的檔案來設置，並可以選擇放置在可見的專案根目錄下、docs 目錄底下、或是隱藏的 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".github"}]},{"type":"text","value":" 目錄底下。除了 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"md"}]},{"type":"text","value":" 以外，亦可以以 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"txt"}]},{"type":"text","value":" 為副檔名。"}]},{"type":"element","tag":"h3","props":{"id":"gitlab-issue-template"},"children":[{"type":"text","value":"GitLab Issue Template"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GitLab 文件中的 "},{"type":"element","tag":"a","props":{"href":"https://gitlab.com/help/user/project/description_templates.md","rel":["nofollow"]},"children":[{"type":"text","value":"Description templates"}]},{"type":"text","value":" 有提到如何自訂 issue 和 merge request 描述的樣板。本節稍微摘自裡面重要的流程在此說明。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"和 GitHub 相同，GitLab 也是透過在預設分支下建立檔案來設置 Issue Template。不同的是，GitLab 強制要求要以 Markdown 語法編寫，且必須放置在 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".gitlab/issue_templates/"}]},{"type":"text","value":" 目錄底下，檔案名稱即為樣板名稱，一個專案可以同時存在多種樣板，例如異常回報可以取名為 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Bug.md"}]},{"type":"text","value":"，我們也可以針對異常的種類再去做更詳細的分１類。目前 GitLab Free 方案或是 CE 版，並沒有提供設置"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"預設"}]},{"type":"text","value":"樣板的功能。"}]},{"type":"element","tag":"h3","props":{"id":"使用要點"},"children":[{"type":"text","value":"使用要點"}]},{"type":"element","tag":"h4","props":{"id":"在開頭前先附上說明文字"},"children":[{"type":"text","value":"在開頭前先附上說明文字"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在樣板的開頭，就把回報異常應注意哪些事項的說明寫上，讓回報者一定會看到這些描述也是個不錯的方式。TensorFlow 的 "},{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/tensorflow/tensorflow/master/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"Issue Template"}]},{"type":"text","value":" 就在開頭把說明講得很清楚。"}]},{"type":"element","tag":"h4","props":{"id":"透過-html-註解語法對回報者說明"},"children":[{"type":"text","value":"透過 HTML 註解語法對回報者說明"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"由於 Markdown 是有支援 HTML 語法的，所以理當可以使用 HTML 的註解語法。我們就可以善用這個特性，將想要對回報者說但不想在回報後顯示在頁面的話，透過註解語法包覆起來。像是："}]},{"type":"element","tag":"code","props":{"code":"<!--\n在最上面寫上回報時應該要注意那些事項\n....\n-->\n\n## 項目一\n<!--- 描述這個項目的意思，或是該如何取的這個項目的資訊 -->\n","language":"markdown"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!--\n在最上面寫上回報時應該要注意那些事項\n....\n-->\n\n## 項目一\n<!--- 描述這個項目的意思，或是該如何取的這個項目的資訊 -->\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Webpack 的 "},{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/webpack/webpack/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"Issue Template"}]},{"type":"text","value":" 就有善用此特性。"}]},{"type":"element","tag":"h4","props":{"id":"將所希望的回報格式先填好"},"children":[{"type":"text","value":"將所希望的回報格式先填好"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果我們希望使用者在填寫重現步驟時，能使用有序條列的方式表達，那我們就可以在該節先將有序清單的 Markdown 語法寫上；如果我們希望使用者在貼上程式碼或是程式輸出的訊息時，能用程式碼區塊包覆起來，我們就可以將相關語法也先寫上。諸如此類，舉例來說就像這樣："}]},{"type":"element","tag":"code","props":{"code":"**這個異常的重現步驟**\n1.\n2.\n3.\n\n**當你輸入 `echo $PATH` 後所輸出的訊息**\n\n~~~txt\n(paste your output here)\n~~~\n\n","language":"markdown"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"**這個異常的重現步驟**\n1.\n2.\n3.\n\n**當你輸入 `echo $PATH` 後所輸出的訊息**\n\n~~~txt\n(paste your output here)\n~~~\n\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這部分可以參考 Moby 的 "},{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/moby/moby/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"Issue Template"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"h2","props":{"id":"結語"},"children":[{"type":"text","value":"結語"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Issue Description 的部分講到這邊算是告一段落。希望讀者們能透過此主題的文章暸解回報異常時，需要回報哪些資訊，以及其背後的原因。並且能夠將相關知識再轉達給你身邊的工程師、客服、與使用者，讓彼此在溝通上能夠更加順暢，留下更多有效益的回報清單，而不再是一堆想刪又不敢刪議題的尷尬局面。"}]},{"type":"element","tag":"h2","props":{"id":"參考資料"},"children":[{"type":"text","value":"參考資料"}]},{"type":"element","tag":"h3","props":{"id":"github"},"children":[{"type":"text","value":"GitHub"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/laravel/framework/blob/5.5/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"laravel/framework · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/twbs/bootstrap/blob/v4-dev/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"twbs/bootsrap · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/angular/angular/blob/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"angular/angular · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/graphql/graphql-js/blob/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"graphql/graphql-js · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/rails/rails/blob/master/.github/issue_template.md","rel":["nofollow"]},"children":[{"type":"text","value":"rails/rails· ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/crystal-lang/crystal/blob/master/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"crystal-lang/crystal · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/moby/moby/blob/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"moby/moby · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/tensorflow/tensorflow/blob/master/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"tensorflow/tensorflow · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/webpack/webpack/blob/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"webpack/webpack · ISSUE_TEMPLATE.md"}]}]}]},{"type":"element","tag":"h4","props":{"id":"others"},"children":[{"type":"text","value":"Others"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://new-issue.vuejs.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Vue.js Issue Helper"}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"section","props":{"className":["footnotes"],"dataFootnotes":true},"children":[{"type":"element","tag":"h2","props":{"id":"footnote-label","className":["sr-only"]},"children":[{"type":"text","value":"Footnotes"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{"id":"user-content-fn-1"},"children":[{"type":"text","value":"除了此兩種外，還有一種類型容易被當作議題，但事實上是不建議提交在議題追蹤工具，那就是使用上的疑惑（usage question），這類型的議題通常建議先讀相關文件、使用者手冊、觀看影片教學、在論壇、社群、通訊平台上發問。如果是商業產品，則應該由客服處理，而不是丟給研發工程師。  "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-1","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]},{"type":"element","tag":"li","props":{"id":"user-content-fn-2"},"children":[{"type":"text","value":"bug 這個詞是比較口語的用法，通常會泛指 defect、error、fault 等，程式上看起來出錯或有異常的現象、行為。在翻譯上比較口語的情境我會使用「問題」作為對應，而在比較書面的情境我會使用「異常」作為代表。畢竟「問題」這個詞太過廣義，有可能是指 bug，也有可能是指 question，而「異常」則狹義的多（在中國社群，可能會另指 exception）。當然，平時在聊天時，大家還是繼續說 bug 唄。 "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-2","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]},{"type":"element","tag":"li","props":{"id":"user-content-fn-3"},"children":[{"type":"text","value":"通常「症」指的是疾病的徵象，「病」才是問題起源。  "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-3","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]}]}]}]},"title_en":"How to describe a bug report","slug":"how-to-describe-a-bug-report","aliases":["如何敘述異常回報","How to describe a bug report"],"created_at":"2018-06-02T02:58:10.000Z","updated_at":"2018-06-02T02:58:10.000Z","published_at":"2018-06-02T02:58:10.000Z","tags":["ithome-ironman","issue","bug"],"moc":["Information Technology"],"body":{"type":"root","children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本文是 2018 年在 IThome 鐵人賽所寫的文章，好像也是唯一有完整釋出的文章（艸），用心寫完這篇就好就無力了 XD。在這邊稍微把這篇原本分四天的文章進行整併、校閱，讓有興趣閱讀的人可以讀得比較舒適。"}]}]},{"type":"element","tag":"h2","props":{"id":"前言"},"children":[{"type":"text","value":"前言"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"今天來講講如何敘述一個議題（issue），通常議題有分兩種，一種是功能請求（feature request），另一種是異常回報（bug report）"},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-1","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-1"},"children":[{"type":"text","value":"1"}]}]},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-2","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-2"},"children":[{"type":"text","value":"2"}]}]},{"type":"text","value":"。由於功能請求中關於需求的描述會涉及不少知識與經驗，使用者和工程師的相關描述可能又大不相同，這方面的知識很難一次論述完整；而異常回報的描述則較為通泛，主要是講述在回報異常時，應該要附上哪些資訊會對開發者更有幫助，不太區分角色，較為簡單。所以本篇先著重在怎樣描述異常。"}]},{"type":"element","tag":"h2","props":{"id":"情境"},"children":[{"type":"text","value":"情境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"「為什麼我們要學會如何描述一個問題（異常）呢？問題描述有什麼難的？不就是把遇到的問題講出來就好了嗎？難道我講的還不夠清楚嗎？」我想這是多數使用者甚至少數開發者聽到這個主題會有的疑惑，事實上這是很正常的反應，對於多數異常回報者來說，他們已經盡力地把遇到的異常行為描述出來了，他們眼中的異常就是這樣，對於協助我們指出異常的使用者，我們很難用比較強硬的態度說：「這些資訊太少了，我不接受」。到最後我們也只能抱著疑惑的心情嘗試找出使用者遇到的異常，但在資訊不足的情況下，這些異常通常都石沈大海。尷尬的是，你若把異常議題關掉、結案，使用者可能還會抗議，於是這些議題就成為議題追蹤工具（issue tracker）的萬年大石頭，卡在那邊不上不下。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"崩潰的是，在議題追蹤工具裡不只前述的項目卡在那裡，甚至有更多的陳年議題是前輩們留下來的。裡面只簡短地用兩三句話（甚至更短、或只有標題）描述遇到什麼問題，再沒有其他資訊。我們看不懂這個問題到底在說什麼，我們也不知道這個問題要怎麼重現，我們更不知道這個問題是哪個版本的事，是不是在現在的版本已經不會出現了？抱著疑惑、抱著頭，我們・真的・非常・苦惱。 _(:3」∠)＿"}]},{"type":"element","tag":"h2","props":{"id":"目的"},"children":[{"type":"text","value":"目的"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在回報異常時提供充足的資訊，能夠讓開發者更快解決。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"是的，當我們在回報異常時提供充足的資訊，會讓開發者更能精準判斷這個「症狀」的「病因」是什麼，才能更精準的解決軟體的病灶 "},{"type":"element","tag":"sup","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#user-content-fn-3","ariaDescribedBy":"footnote-label","dataFootnoteRef":true,"id":"user-content-fnref-3"},"children":[{"type":"text","value":"3"}]}]},{"type":"text","value":"，從而快速解決問題，既省下開發者的時間成本，使用者也能更快的享受異常排除的成果。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以學會如何描述異常是任何與這份程式有關聯的人都應該要知道的。使用者要知道、客服要知道、專案經理要知道、工程師更要知道。如此一來，使用者或客戶能夠明確將情況描述給開發團隊，讓這異常迅速排除，繼續愉快的使用產品。若是使用者沒有這份知識時，客服就要幫忙過濾，在與使用者的溝通中引導他們把這些資訊回答出來，避免讓不必要的雜訊干擾開發團隊的進度。專案經理更要嚴格把關將送進開發團隊的異常回報，要求客服把缺漏的資訊補上，讓開發團隊可以將時間專注在解決異常而不是重新尋找如何重現它。工程師則更應該要謹記，現在的詳細記錄異常資訊，可以讓我們都不再多背一袋技術債，絕對不要嫌麻煩而省略，不然未來將會耗費更多時間重新釐清這個異常。"}]},{"type":"element","tag":"h2","props":{"id":"作法"},"children":[{"type":"text","value":"作法"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那在回報異常前，我們應注意哪些事項呢？那就是查看當前的議題清單裡，有沒有和我們所遇到的異常相同的情況，避免重複（duplicate）回報。同樣的異常應該集中在同個議題討論，而不是散落在清單各處，這樣只會增加開發團隊的排除成本。當我們發現已經有既定異常議題存在時，可以先嘗試了解該討論串的內容，若仍然無法排除，則可以將原本要回報的內容，於該議題討論串中回覆，增加樣本數。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那麼有哪些資訊是在回報異常時需要附上的呢？這邊先以清單的方式表述："}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"標題（Title）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"版本（Version number）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"問題簡述（Describe the problem）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"重現步驟（Steps to reproduce）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"預期行為（ What I expected）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"實際行為（What happened instead）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"影像（Screenshot / Video）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"環境（Environments）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"脈絡或程式碼（Context / Source）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"備註（Additional details）"}]}]},{"type":"element","tag":"h3","props":{"id":"標題title"},"children":[{"type":"text","value":"標題（Title）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"無論是什麼類型的文章，有個好的標題就是一個好的開始，議題的標題更是如此。如何用最少的字把異常的輪廓描述出來，就是這個資訊需要探討的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在探討什麼是好的標題前，我們先說說什麼叫做不好的標題。讓人最討厭的標題莫過於內容農場式的標題，也就是講得很誇大，但卻什麼重點都沒提到，像是「這裡有一個很嚴重的問題造成程式崩潰了！」或是「緊急！這個異常讓客戶抓狂了！」等等。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"那到底標題要如何說清楚呢？把握一個原則就是至少詳細到不容易和其他類似異常搞混，以現實生活的情境來舉例，假設今天台中某處有個路燈壞了，你想舉報請市府趕緊請人維修："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"南區有個路燈壞了（Ｘ，太籠統，這樣同名不同處的異常可能會太多）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"南區台中路上靠近二二八公園處有路燈壞了（Ｏ，把異常發生的地點指名）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"南區台中路上靠近二二八公園處有路燈不斷閃爍（Ｏ，把故障狀況請得更清楚）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"南區編號 641549 的路燈不會亮（Ｏ，善用產品本身提供的除錯輔助資訊）"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另外多用客觀的描述取代主觀看法也會讓標題更好識別："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"網站的選單很難用，一直沒反應（Ｘ）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"網站的選單按鈕太小了，觸控容易失敗，或是誤觸其他按鈕（Ｏ）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"網頁會跳出奇怪的畫面，不知道發生什麼事（Ｘ）"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"點擊編輯文章的按鈕，會跳出「We’re sorry, but something rent wrong」的畫面（Ｏ）"}]}]},{"type":"element","tag":"h3","props":{"id":"版本version-number"},"children":[{"type":"text","value":"版本（Version number）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"產品發生異常時的版本號非常重要，它可以開發者確認這個異常是在產品開發的什麼時間點發生的，是否已經在比較新的版本被修復了？或是該行為在以前沒問題，直到某個版本後才發生異常，開發者能透過版本號鎖定變動的位置，了解前後的脈絡，判斷是不是有一個變動提交（commit）沒有注意細節而引發了異常。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若說標題和描述是讓開發者了解空間與事件，那麼版本就是讓開發者知曉時間。在兩者資訊充足的情況下，雙方對談就容易聚焦，而不是在跟平行世界的對方雞同鴨講。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"所以程式在釋出時應該要有一套版本號訂定風格，讓使用者在回報異常時，開發者能迅速聚焦在準確的範圍去除錯。若是程式是沒有明確版本號，提供程式當前版本控制紀錄中的資訊（通常是最後一次提交的雜湊值（Hash））也是個方式。"}]},{"type":"element","tag":"h3","props":{"id":"問題描述describe-the-problem"},"children":[{"type":"text","value":"問題描述（Describe the problem）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果好的標題是一個好的開始，那麼問題簡述就是把這個好的開始延續下去。標題通常必須一句話簡述整個異常的輪廓，那問題描述就是把異常的細節描繪出來。標題中省略的細節、脈絡，或是你對這個問題的觀察和看法，都可以在這裡好好詳述。若同樣以路燈為例，那大概就是："}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"南區台中路上靠近二二八公園處有路燈壞了，它時不時在閃爍。這附近只有這個路燈有異常現象，其他路燈都是好的，該路燈的編號是 641549 。看它的桿身似乎有被撞擊過的痕跡，或許是最近被車輛擦撞過導致線路異常？我沒有很確定。詢問過附近的居民，似乎在前天還是好的。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在這個例子，可以看到除了標題所提到的資訊外，還多了許多來自於回報者的觀察，讓我們可以有更多資訊的得以除錯。"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"異常描述：閃爍"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"同型比較：和其他路燈相比"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"產品資訊：路燈編號"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"額外表徵：被撞擊過的痕跡"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"個人推斷：或許是被擦撞過導致線路異常"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"其他資訊：詢問居民"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"用路燈來描述可能還是有點籠統，很難和實際程式做聯想結合，這邊改以登入發生錯誤的情境作為舉例："}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"用帳號密碼登入後，會跳到顯示 We’re sorry, but something went wrong 的畫面"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"輸入帳號密碼登入後沒有跳到正常頁面，而是顯示錯誤訊息的頁面（異常描述），出現錯誤訊息的網址是 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"https://xxx.xxx.xxx/ooo?a=aaa&b=bbb"}]},{"type":"text","value":"（產品資訊）。其他頁面似乎都正常，透過社交平台登入的功能也正常（同型比較）。不管輸入的帳號密碼是否正確都會報錯。我不知道發生什麼事，會不會是帳號密碼驗證的程序出錯？因為社交平台登入是正常的（個人推斷）。問過朋友，他們使用帳號密碼登入也有同樣的異常。有朋友說早上七點時還是正常的（其他資訊）。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"當然，這些特徵與資訊項目都只是舉例，每個專案或情境可以提供的資訊類型都不相同，但希望這樣舉例能讓讀者們稍微了解「問題描述」與「標題」的差異，以及有什麼細節是可以提供的。"}]},{"type":"element","tag":"h3","props":{"id":"重現步驟steps-to-reproduce"},"children":[{"type":"text","value":"重現步驟（Steps to reproduce）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"重現步驟就是指經過哪些動作後，就一定會引發這個異常。這是讓開發者代入異常發生情境很重要的資訊。如果沒有提供重現步驟，開發者就要耗費更多時間去分析到底發生了什麼事，然後嘗試要如何重現，能將異常重現後才能開始進行除錯。如果直接提供重現步驟，那開發者就能直接面對異常，然後依照他的經驗快速除錯。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有重現步驟的異常回報，也容易使回報者和開發團隊站在同一個視角，而不是使用者一直在幹譙，然後開發團隊只能不斷道歉，卻還是找不到異常發生的原因，或是直接丟給使用者「這在我電腦是正常的！（It works on my computer!）」交差了事。當開發團隊非常努力想透過回報者的描述去重現異常，卻一直失敗時，面對回報者的催促，有可能會產生負面情緒，認為回報者是來鬧的，畢竟在兩者的觀點上，對方描述的事情都是沒發生過的呀！"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若是該異常無法百分之百重現，也要在這裡特別講明。儘管沒有一個肯定能重現的步驟，但仍可以試著把可能會發生異常的步驟寫出來，讓開發者了解到底再發生這個異常前，會經歷過什麼事，導致有機率觸發異常。回報者也需要有著「在沒有有永遠能重現異常的步驟時，這個議題可能會需要耗費較長時間除錯」的心理準備。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"好的重現步驟在於一個指令一個步驟，先以上節提到的登入異常為例，大致如下："}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"進入網站（"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"https://www.xxxx.tw"}]},{"type":"text","value":"）。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"點擊首頁右上方的「登入」按鈕。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"再登入表單中輸入帳號密碼。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"點擊表單中的「送出」按鈕。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"發生異常。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"雖然這個例子這個重現步驟看起來似乎沒提供到什麼資訊，但某種層面上卻也讓開發者知道使用者是用合理的方式去進行登入，可以排除是非預期的行為模式導致異常發生。透過這樣一個指令就寫一個步驟的，讓開發者了解實際的行為模式，也讓開發者依照這樣的步驟執行時，能夠代入使用者的情境。若是開發者在執行步驟時是正常的，就可能會往是不是環境或版本的不同造成結果差異的方向去想，而不是不斷在程式碼中鑽牛角尖。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若回報者在使用產品時，有了一些非預期行為是開發者當初沒有想到的，就可以讓開發者不被既有的觀點束縛，突破盲點而瞭解錯誤的原因。畢竟我們都知道，身為開發者去執行一些情境，都一定會預設我們心中已經非常熟悉的合法步驟，而不會意識到有其他非預期行為的可能。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另外，若是能夠在每個步驟都附上畫面截圖，也會減少對步驟執行的誤解，並透過畫面提供了回報者可能沒意識到的額外資訊。"}]},{"type":"element","tag":"h3","props":{"id":"預期行為what-i-expected"},"children":[{"type":"text","value":"預期行為（ What I expected）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"預期行為就是指當我們透過「重現步驟」操作時，我們預想中理應該出現的行為、結果、狀態。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"預期行為在於讓開發團隊暸解我們心中認為正常的認知是否與當初產品設計時相同，讓兩方在這方面的資訊是對稱的。在產品設計時，難免會有產品的行為與使用者的預期行為不同的情況，使用者會因為這種情況認定是程式發生異常，進而回報。但事實上，程式並沒有問題，只是當初產品設計時在使用者經驗（UX）的決策不夠理想，或是設計概念比較新穎，使用者和市場並還沒被教育過。所以若能知道使用者預期行為，就能避免把時間成本耗費在處理其實不是異常的回報中，而能讓客服先將這部分的回報篩選掉，讓開發團隊得以專注在真正的異常回報中。"}]},{"type":"element","tag":"h3","props":{"id":"實際行為what-happened-instead"},"children":[{"type":"text","value":"實際行為（What happened instead）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"實際行為就是指當我們透過「重現步驟」操作時，實際發生行為的描述，通常也就是對異常的描述。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"與預期行為同理，這部分的描述能讓開發團隊暸解我們實際遇到的情況，並透過是否與產品設計相符或相異去進一步判斷發生什麼事。排除設計和使用這預期行為的非異常回報，這部分的資訊就是讓開發團隊搭配重現步驟去分析重要描述。與「問題描述」相似，但如同「問題描述」是「標題」的進一步說明，那「實際行為」就是「問題描述」中，關於異常更詳細的描述。"}]},{"type":"element","tag":"h3","props":{"id":"影像screenshot-video"},"children":[{"type":"text","value":"影像（Screenshot / Video）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"影像的部分是比較選擇性提供的資訊，包括螢幕截圖和操作的實際錄影。有時候這些資訊會直接在其他章節中提供，像是在重現步驟中，每步驟提供一個螢幕截圖、或是在實際行為中，把看到的情況截圖附上。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"影像是更真實的記錄，讓開發團隊若是對我們所描述的文字仍有點困惑時，能透過影像去暸解我們實際想表達的。或是如重現步驟中所說，透過畫面可以補足我們沒有意識到是有用處的資訊，但對開發者團隊來說是關鍵的細節。"}]},{"type":"element","tag":"h3","props":{"id":"環境environments"},"children":[{"type":"text","value":"環境（Environments）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"環境的部分是指程式運作的環境，舉凡作業系統、瀏覽器、相依函示庫等等，各家產品和版本都可能會影響程式的運作。這部分亦是很著要的資訊，其重要性不亞於版本、重現步驟等描述。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"環境資訊讓開發團隊在進行判斷時，可以先暸解異常會不會有可能只是環境造成的落差，而不是程式核心邏輯的錯誤，如此才能朝正確的方向進行異常排除。程式在開發時，很難保證在所有環境都能行為一致，尤其是網頁程式，在常見的四大瀏覽器（Chrome, Firefox, Safari, IE）的顯示可能都有細節的差異，甚至在同一種瀏覽器，在不同版本都會有不同。像是 IE 系列，在 6 ~ 11 的差異都滿大的。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有時候程式可能會被執行的環境太多種，開發團隊沒有太多成本一一測試與驗證，或是為了支援太舊環境的成本太高，所以決定不再適用。但是就算開發團隊有在產品某處或者安裝程式提及，使用者不一定會知道這些訊息（忽略說明訊息），導致誤以為程式出了異常，但事實上只是該環境已經不被支援，或是不在驗證過的支援清單中。若有此資訊，就可以在客服階段就先為使用者解惑，減少處理時間與成本。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"若是該環境是在程式認定的支援清單中，開發團隊也能搭配重現步驟快速了解狀況，並透過交叉比對去判斷是核心邏輯的錯誤，還是環境支援沒有完善。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以下提供比較常見的環境資訊："}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"作業系統：Windows, Mac OS X, Android, iOS, Win10 Mobile"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"瀏覽器：Chrome, Firefox, Safari, IE, MS Edge, Opera 15+, Android Browser"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在提供這類資訊，除了環境名稱與主要版本號外，建議透過說明或者關於的資訊，取得比較詳細的版本號一併附上，會對開發團隊更有幫助。"}]},{"type":"element","tag":"h3","props":{"id":"脈絡或程式碼context-source"},"children":[{"type":"text","value":"脈絡或程式碼（Context / Source）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這部分又稱最小可重現模型（Minimal reproduction），比較偏向當產品是開發用的函式庫、框架時，會需要使用這個產品的開發者提供，而不是一般使用者。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"當我們使用某個函式庫、套件或框架時，若遇到異常，除了上述的資訊外，若能提供程式碼給產品的開發團隊去暸解，一定會更有幫助。但是我們也不能把我們自己產品的程式碼完全給開發團隊，一來可能是會有商業考量，這些程式碼是公司資產，不得任意外洩、二來是開發團隊也沒有時間和義務幫看你的產品的原始碼。這時候就需要針對發生異常的部分，實作最小可實現模型，不包含其他核心邏輯，純粹只有使用他們產品時的程式碼，越簡單且能重現異常越好。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而在實作小可實現模型時，也算是再次確認。我們自己在開發產品時，會由各種邏輯混雜在一起，若是架構沒設計好，很有可能就會互相影響。透過實作最小可重現模型，讓我們能夠排除是其他程式碼間接造成異常的可能性，而能聚焦該產品發生異常的原因與位置。"}]},{"type":"element","tag":"h3","props":{"id":"備註additional-details"},"children":[{"type":"text","value":"備註（Additional details）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"只要是不屬於本章中所提到的任何項目，但認定可能會對開發團隊排除異常有幫助的資訊都可以寫在這部分。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"像是這個異常沒辦法百分之百重現，甚至連重現步驟都難以確立，就可以在這邊加註。或是這個功能在以前都沒有發生過異常，是在某個版本後才故障。或是我們認為以我們的專業知識，能夠協助開發團隊排除異常，也可以在這邊寫下我們的看法。諸如此類。"}]},{"type":"element","tag":"h2","props":{"id":"困境"},"children":[{"type":"text","value":"困境"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在前一章我們知道了哪些資訊應該在回報問題時附上，得以讓開發團隊善用該資訊儘速給予答覆或是除錯。但現實總是殘酷的，不見得所有的使用者都會知道這些要附上這些資訊，就算知道也不一定會勤於每次回報問題時都附上，講句難聽的，商業軟體有問題是開發團隊該負責的，使用者願意回報就已經是願意幫忙的，如果還要求每次都要制式風格回覆，不見得使用者都願意配合。（開源生態另當別論，開源生態是作者願意開發程式碼並開源提供給公眾使用已經仁至義盡了，並沒有義務要不斷維護。）"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"要讓使用者願意回報完整的資訊給開發團隊，比較直接的作法就是在填寫回報的表單裡提供完整的資訊，讓使用者能夠了解有什麼資訊是開發團隊需要的、該怎麼取得那些資訊，而避免直接丟一個空白的文字框要求使用者自己填寫，填寫後又以提供資訊不足拒絕受理。若是透過 Github、Gitlab 管理問題回報，可以透過 Issue Template 的功能去自訂問題回報時，文字框預設會出現哪些資訊，這部分將在下一章提及。另外也可以在如前面陸續有在提及的，請客服和使用者溝通，協助使用者提供該資訊，透過此方法，就是要對客服做相關知識的教育訓練。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"另外，若是在自家團隊或是開源專案，頻繁遇到內部人員在回報問題時，不遵守培訓或是表單提供的格式回報問題，不應該遷就接受，而是制定一個固定的時間（例如一到三天），在這個時間沒有改善，就直接關閉、封存該回報，不予受理。在這類議題，比較常遇到的就是業務或是客服無心遵守，認為自己的描述已經夠清楚了，而不願意再多耗費時間協助提供完整的資訊。或是工程師認為自己只是先輸入個關鍵描述，之後「自己」會再處理，不用那麼繁瑣再輸入。但通常結果都是開發團隊並不了解那些不完整的資訊是在填寫什麼問題，或是最後那個異常的處理者不是回報的工程師了，導致這個回報到最後並沒有提供它該有的幫助，反而成為異常清單中想移除卻又不敢移除的臭石頭。所以，打從最初就規定沒有符合規格的異常回報不受理，對於內部團隊是一個必須的措施。別把回報時的偷懶，連本帶利的變成開發團隊要代償的債務。"}]},{"type":"element","tag":"h2","props":{"id":"輔助"},"children":[{"type":"text","value":"輔助"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在上一章有提到 Issue Template 可以協助我們自訂回報異常時的格式，本章將介紹在 GitHub、GitLab 這兩大開發者常用的程式碼託管與專案管理平台來如何善用此功能。"}]},{"type":"element","tag":"h3","props":{"id":"github-issue-template"},"children":[{"type":"text","value":"GitHub Issue Template"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GitHub 文件中的 "},{"type":"element","tag":"a","props":{"href":"https://help.github.com/articles/helping-people-contribute-to-your-project/","rel":["nofollow"]},"children":[{"type":"text","value":"Helping people contribute to your project"}]},{"type":"text","value":" 有提到許多關於如何協助其他人貢獻自己專案的一些方法，其中 "},{"type":"element","tag":"a","props":{"href":"https://help.github.com/articles/creating-an-issue-template-for-your-repository/","rel":["nofollow"]},"children":[{"type":"text","value":"Creating an issue template for your repository"}]},{"type":"text","value":" 就有提到如何自訂 Issue Template。本節稍微摘自裡面重要的流程在此說明。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GitHub 的 Issue Template 是透過在**預設分支（defaut branch）**中，建立一個名為 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"issue_template.md"}]},{"type":"text","value":"（大小寫皆可）的檔案來設置，並可以選擇放置在可見的專案根目錄下、docs 目錄底下、或是隱藏的 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".github"}]},{"type":"text","value":" 目錄底下。除了 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"md"}]},{"type":"text","value":" 以外，亦可以以 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"txt"}]},{"type":"text","value":" 為副檔名。"}]},{"type":"element","tag":"h3","props":{"id":"gitlab-issue-template"},"children":[{"type":"text","value":"GitLab Issue Template"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GitLab 文件中的 "},{"type":"element","tag":"a","props":{"href":"https://gitlab.com/help/user/project/description_templates.md","rel":["nofollow"]},"children":[{"type":"text","value":"Description templates"}]},{"type":"text","value":" 有提到如何自訂 issue 和 merge request 描述的樣板。本節稍微摘自裡面重要的流程在此說明。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"和 GitHub 相同，GitLab 也是透過在預設分支下建立檔案來設置 Issue Template。不同的是，GitLab 強制要求要以 Markdown 語法編寫，且必須放置在 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".gitlab/issue_templates/"}]},{"type":"text","value":" 目錄底下，檔案名稱即為樣板名稱，一個專案可以同時存在多種樣板，例如異常回報可以取名為 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Bug.md"}]},{"type":"text","value":"，我們也可以針對異常的種類再去做更詳細的分１類。目前 GitLab Free 方案或是 CE 版，並沒有提供設置"},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"預設"}]},{"type":"text","value":"樣板的功能。"}]},{"type":"element","tag":"h3","props":{"id":"使用要點"},"children":[{"type":"text","value":"使用要點"}]},{"type":"element","tag":"h4","props":{"id":"在開頭前先附上說明文字"},"children":[{"type":"text","value":"在開頭前先附上說明文字"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在樣板的開頭，就把回報異常應注意哪些事項的說明寫上，讓回報者一定會看到這些描述也是個不錯的方式。TensorFlow 的 "},{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/tensorflow/tensorflow/master/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"Issue Template"}]},{"type":"text","value":" 就在開頭把說明講得很清楚。"}]},{"type":"element","tag":"h4","props":{"id":"透過-html-註解語法對回報者說明"},"children":[{"type":"text","value":"透過 HTML 註解語法對回報者說明"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"由於 Markdown 是有支援 HTML 語法的，所以理當可以使用 HTML 的註解語法。我們就可以善用這個特性，將想要對回報者說但不想在回報後顯示在頁面的話，透過註解語法包覆起來。像是："}]},{"type":"element","tag":"code","props":{"code":"<!--\n在最上面寫上回報時應該要注意那些事項\n....\n-->\n\n## 項目一\n<!--- 描述這個項目的意思，或是該如何取的這個項目的資訊 -->\n","language":"markdown"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"<!--"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"在最上面寫上回報時應該要注意那些事項"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"...."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"-->"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5e2d43"},"children":[{"type":"text","value":"## 項目一"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"<!--- 描述這個項目的意思，或是該如何取的這個項目的資訊 -->"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Webpack 的 "},{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/webpack/webpack/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"Issue Template"}]},{"type":"text","value":" 就有善用此特性。"}]},{"type":"element","tag":"h4","props":{"id":"將所希望的回報格式先填好"},"children":[{"type":"text","value":"將所希望的回報格式先填好"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果我們希望使用者在填寫重現步驟時，能使用有序條列的方式表達，那我們就可以在該節先將有序清單的 Markdown 語法寫上；如果我們希望使用者在貼上程式碼或是程式輸出的訊息時，能用程式碼區塊包覆起來，我們就可以將相關語法也先寫上。諸如此類，舉例來說就像這樣："}]},{"type":"element","tag":"code","props":{"code":"**這個異常的重現步驟**\n1.\n2.\n3.\n\n**當你輸入 `echo $PATH` 後所輸出的訊息**\n\n~~~txt\n(paste your output here)\n~~~\n\n","language":"markdown"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5e2d43"},"children":[{"type":"text","value":"**這個異常的重現步驟**"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"1."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"2."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"3."}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-5e2d43"},"children":[{"type":"text","value":"**當你輸入 "}]},{"type":"element","tag":"span","props":{"class":"ct-1ddf64"},"children":[{"type":"text","value":"`echo $PATH`"}]},{"type":"element","tag":"span","props":{"class":"ct-5e2d43"},"children":[{"type":"text","value":" 後所輸出的訊息**"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"~~~txt"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"(paste your output here)"}]}]},{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-2b46d0"},"children":[{"type":"text","value":"~~~"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"這部分可以參考 Moby 的 "},{"type":"element","tag":"a","props":{"href":"https://raw.githubusercontent.com/moby/moby/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"Issue Template"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"h2","props":{"id":"結語"},"children":[{"type":"text","value":"結語"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Issue Description 的部分講到這邊算是告一段落。希望讀者們能透過此主題的文章暸解回報異常時，需要回報哪些資訊，以及其背後的原因。並且能夠將相關知識再轉達給你身邊的工程師、客服、與使用者，讓彼此在溝通上能夠更加順暢，留下更多有效益的回報清單，而不再是一堆想刪又不敢刪議題的尷尬局面。"}]},{"type":"element","tag":"h2","props":{"id":"參考資料"},"children":[{"type":"text","value":"參考資料"}]},{"type":"element","tag":"h3","props":{"id":"github"},"children":[{"type":"text","value":"GitHub"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/laravel/framework/blob/5.5/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"laravel/framework · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/twbs/bootstrap/blob/v4-dev/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"twbs/bootsrap · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/angular/angular/blob/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"angular/angular · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/graphql/graphql-js/blob/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"graphql/graphql-js · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/rails/rails/blob/master/.github/issue_template.md","rel":["nofollow"]},"children":[{"type":"text","value":"rails/rails· ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/crystal-lang/crystal/blob/master/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"crystal-lang/crystal · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/moby/moby/blob/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"moby/moby · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/tensorflow/tensorflow/blob/master/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"tensorflow/tensorflow · ISSUE_TEMPLATE.md"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/webpack/webpack/blob/master/.github/ISSUE_TEMPLATE.md","rel":["nofollow"]},"children":[{"type":"text","value":"webpack/webpack · ISSUE_TEMPLATE.md"}]}]}]},{"type":"element","tag":"h4","props":{"id":"others"},"children":[{"type":"text","value":"Others"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://new-issue.vuejs.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Vue.js Issue Helper"}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"section","props":{"className":["footnotes"],"dataFootnotes":true},"children":[{"type":"element","tag":"h2","props":{"id":"footnote-label","className":["sr-only"]},"children":[{"type":"text","value":"Footnotes"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{"id":"user-content-fn-1"},"children":[{"type":"text","value":"除了此兩種外，還有一種類型容易被當作議題，但事實上是不建議提交在議題追蹤工具，那就是使用上的疑惑（usage question），這類型的議題通常建議先讀相關文件、使用者手冊、觀看影片教學、在論壇、社群、通訊平台上發問。如果是商業產品，則應該由客服處理，而不是丟給研發工程師。  "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-1","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]},{"type":"element","tag":"li","props":{"id":"user-content-fn-2"},"children":[{"type":"text","value":"bug 這個詞是比較口語的用法，通常會泛指 defect、error、fault 等，程式上看起來出錯或有異常的現象、行為。在翻譯上比較口語的情境我會使用「問題」作為對應，而在比較書面的情境我會使用「異常」作為代表。畢竟「問題」這個詞太過廣義，有可能是指 bug，也有可能是指 question，而「異常」則狹義的多（在中國社群，可能會另指 exception）。當然，平時在聊天時，大家還是繼續說 bug 唄。 "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-2","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]},{"type":"element","tag":"li","props":{"id":"user-content-fn-3"},"children":[{"type":"text","value":"通常「症」指的是疾病的徵象，「病」才是問題起源。  "},{"type":"element","tag":"a","props":{"href":"#user-content-fnref-3","ariaLabel":"Back to content","className":["data-footnote-backref"],"dataFootnoteBackref":true},"children":[{"type":"text","value":"↩"}]}]}]}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-1ddf64{color:#CE9178}\n.ct-5e2d43{color:#569CD6}\n.ct-2b46d0{color:#D4D4D4}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"前言","depth":2,"text":"前言"},{"id":"情境","depth":2,"text":"情境"},{"id":"目的","depth":2,"text":"目的"},{"id":"作法","depth":2,"text":"作法","children":[{"id":"標題title","depth":3,"text":"標題（Title）"},{"id":"版本version-number","depth":3,"text":"版本（Version number）"},{"id":"問題描述describe-the-problem","depth":3,"text":"問題描述（Describe the problem）"},{"id":"重現步驟steps-to-reproduce","depth":3,"text":"重現步驟（Steps to reproduce）"},{"id":"預期行為what-i-expected","depth":3,"text":"預期行為（ What I expected）"},{"id":"實際行為what-happened-instead","depth":3,"text":"實際行為（What happened instead）"},{"id":"影像screenshot-video","depth":3,"text":"影像（Screenshot / Video）"},{"id":"環境environments","depth":3,"text":"環境（Environments）"},{"id":"脈絡或程式碼context-source","depth":3,"text":"脈絡或程式碼（Context / Source）"},{"id":"備註additional-details","depth":3,"text":"備註（Additional details）"}]},{"id":"困境","depth":2,"text":"困境"},{"id":"輔助","depth":2,"text":"輔助","children":[{"id":"github-issue-template","depth":3,"text":"GitHub Issue Template"},{"id":"gitlab-issue-template","depth":3,"text":"GitLab Issue Template"},{"id":"使用要點","depth":3,"text":"使用要點"}]},{"id":"結語","depth":2,"text":"結語"},{"id":"參考資料","depth":2,"text":"參考資料","children":[{"id":"github","depth":3,"text":"GitHub"}]},{"id":"footnote-label","depth":2,"text":"Footnotes"}]}},"_type":"markdown","_id":"garden:articles:2018-06-02-how-to-describe-a-bug-report.md","_source":"garden","_file":"articles/2018-06-02-how-to-describe-a-bug-report.md","_extension":"md","head":{"title":"如何敘述異常回報 - 深藏若虛"}}]