{"_path":"/about/portfolios/web/2018-08-web-agile-dashboard","_dir":"web","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"...","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"code","props":{"code":"---\nalias: [\"Agile Dashbaord\"]\nid: agile-dashboard\nname: Agile Dashbaord\nresponsibility: 開發\ndate: \"2018-08-07\"\nlanguages:\n    - JavaScript\n    - HTML\n    - CSS\n    - Ruby\nframeworks:\n    - Vue.js\n    - Bootstrap\nlibraries:\n    - Vuestic Admin\n    - Chart.js\nothers:\n    - Firebase Cloud Firestore\ndescription:\n    - 為了讓團隊能夠自組織的進行回顧會議，且有鑒於以人工的方式搜集團隊的客觀性資料費時易錯，所以就在初期使用 Ruby 編寫腳本，透過 API 擷取 Asana 與 GitLab 的資料，並在每次開回顧會議前手動執行腳本，獲得相關資訊。並透過 Google 試算表的資料透視表和圖表功能，將這些資訊轉換成比較直覺且方便比較的圖表模式提供給團隊參考。\n    - 又由於每次開會前都還要手動執行腳本並套用在 Google 試算表也是耗費時間與精力，為了節省日後的產能，於是著手進行更進一步的自動化。首先是將原本 Ruby 腳本產生的資料從檔案儲存改到 Firebase 的雲端資料庫，接著使用 Vue.js 搭配 Vuestic Admin 提供的組件進行視覺化，並透過 GitLab CI 的 Schedule 功能定時執行，如此便能每日、每次會前都擷取當前規劃估算點數值、GitLab 活動紀錄等，不再需要 Scrum Master 去介入。\n    - 透過這項專案，讓客觀性資料的工作完全自動化，並在日後 Scrum Master 有事必須缺席的情況，團隊也能自行依照原本就定好的開會流程搭配自動化抓取的客觀數據進行回顧會議了。\nscreenshots: []\n---\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"---\nalias: [\"Agile Dashbaord\"]\nid: agile-dashboard\nname: Agile Dashbaord\nresponsibility: 開發\ndate: \"2018-08-07\"\nlanguages:\n    - JavaScript\n    - HTML\n    - CSS\n    - Ruby\nframeworks:\n    - Vue.js\n    - Bootstrap\nlibraries:\n    - Vuestic Admin\n    - Chart.js\nothers:\n    - Firebase Cloud Firestore\ndescription:\n    - 為了讓團隊能夠自組織的進行回顧會議，且有鑒於以人工的方式搜集團隊的客觀性資料費時易錯，所以就在初期使用 Ruby 編寫腳本，透過 API 擷取 Asana 與 GitLab 的資料，並在每次開回顧會議前手動執行腳本，獲得相關資訊。並透過 Google 試算表的資料透視表和圖表功能，將這些資訊轉換成比較直覺且方便比較的圖表模式提供給團隊參考。\n    - 又由於每次開會前都還要手動執行腳本並套用在 Google 試算表也是耗費時間與精力，為了節省日後的產能，於是著手進行更進一步的自動化。首先是將原本 Ruby 腳本產生的資料從檔案儲存改到 Firebase 的雲端資料庫，接著使用 Vue.js 搭配 Vuestic Admin 提供的組件進行視覺化，並透過 GitLab CI 的 Schedule 功能定時執行，如此便能每日、每次會前都擷取當前規劃估算點數值、GitLab 活動紀錄等，不再需要 Scrum Master 去介入。\n    - 透過這項專案，讓客觀性資料的工作完全自動化，並在日後 Scrum Master 有事必須缺席的情況，團隊也能自行依照原本就定好的開會流程搭配自動化抓取的客觀數據進行回顧會議了。\nscreenshots: []\n---\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Agile Dashbaord開發"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"JavaScript HTML CSS Ruby Vue.js Bootstrap Vuestic Admin Chart.js Firebase Cloud Firestore"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了讓團隊能夠自組織的進行回顧會議，且有鑒於以人工的方式搜集團隊的客觀性資料費時易錯，所以就在初期使用 Ruby 編寫腳本，透過 API 擷取 Asana 與 GitLab 的資料，並在每次開回顧會議前手動執行腳本，獲得相關資訊。並透過 Google 試算表的資料透視表和圖表功能，將這些資訊轉換成比較直覺且方便比較的圖表模式提供給團隊參考。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"又由於每次開會前都還要手動執行腳本並套用在 Google 試算表也是耗費時間與精力，為了節省日後的產能，於是著手進行更進一步的自動化。首先是將原本 Ruby 腳本產生的資料從檔案儲存改到 Firebase 的雲端資料庫，接著使用 Vue.js 搭配 Vuestic Admin 提供的組件進行視覺化，並透過 GitLab CI 的 Schedule 功能定時執行，如此便能每日、每次會前都擷取當前規劃估算點數值、GitLab 活動紀錄等，不再需要 Scrum Master 去介入。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過這項專案，讓客觀性資料的工作完全自動化，並在日後 Scrum Master 有事必須缺席的情況，團隊也能自行依照原本就定好的開會流程搭配自動化抓取的客觀數據進行回顧會議了。"}]}]},"title_en":"...","slug":"...","aliases":[],"created_at":"2023-06-13T22:15:18.000Z","updated_at":"2023-06-13T22:15:18.000Z","published_at":null,"tags":[],"body":{"type":"root","children":[{"type":"element","tag":"code","props":{"code":"---\nalias: [\"Agile Dashbaord\"]\nid: agile-dashboard\nname: Agile Dashbaord\nresponsibility: 開發\ndate: \"2018-08-07\"\nlanguages:\n    - JavaScript\n    - HTML\n    - CSS\n    - Ruby\nframeworks:\n    - Vue.js\n    - Bootstrap\nlibraries:\n    - Vuestic Admin\n    - Chart.js\nothers:\n    - Firebase Cloud Firestore\ndescription:\n    - 為了讓團隊能夠自組織的進行回顧會議，且有鑒於以人工的方式搜集團隊的客觀性資料費時易錯，所以就在初期使用 Ruby 編寫腳本，透過 API 擷取 Asana 與 GitLab 的資料，並在每次開回顧會議前手動執行腳本，獲得相關資訊。並透過 Google 試算表的資料透視表和圖表功能，將這些資訊轉換成比較直覺且方便比較的圖表模式提供給團隊參考。\n    - 又由於每次開會前都還要手動執行腳本並套用在 Google 試算表也是耗費時間與精力，為了節省日後的產能，於是著手進行更進一步的自動化。首先是將原本 Ruby 腳本產生的資料從檔案儲存改到 Firebase 的雲端資料庫，接著使用 Vue.js 搭配 Vuestic Admin 提供的組件進行視覺化，並透過 GitLab CI 的 Schedule 功能定時執行，如此便能每日、每次會前都擷取當前規劃估算點數值、GitLab 活動紀錄等，不再需要 Scrum Master 去介入。\n    - 透過這項專案，讓客觀性資料的工作完全自動化，並在日後 Scrum Master 有事必須缺席的情況，團隊也能自行依照原本就定好的開會流程搭配自動化抓取的客觀數據進行回顧會議了。\nscreenshots: []\n---\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"---\nalias: [\"Agile Dashbaord\"]\nid: agile-dashboard\nname: Agile Dashbaord\nresponsibility: 開發\ndate: \"2018-08-07\"\nlanguages:\n    - JavaScript\n    - HTML\n    - CSS\n    - Ruby\nframeworks:\n    - Vue.js\n    - Bootstrap\nlibraries:\n    - Vuestic Admin\n    - Chart.js\nothers:\n    - Firebase Cloud Firestore\ndescription:\n    - 為了讓團隊能夠自組織的進行回顧會議，且有鑒於以人工的方式搜集團隊的客觀性資料費時易錯，所以就在初期使用 Ruby 編寫腳本，透過 API 擷取 Asana 與 GitLab 的資料，並在每次開回顧會議前手動執行腳本，獲得相關資訊。並透過 Google 試算表的資料透視表和圖表功能，將這些資訊轉換成比較直覺且方便比較的圖表模式提供給團隊參考。\n    - 又由於每次開會前都還要手動執行腳本並套用在 Google 試算表也是耗費時間與精力，為了節省日後的產能，於是著手進行更進一步的自動化。首先是將原本 Ruby 腳本產生的資料從檔案儲存改到 Firebase 的雲端資料庫，接著使用 Vue.js 搭配 Vuestic Admin 提供的組件進行視覺化，並透過 GitLab CI 的 Schedule 功能定時執行，如此便能每日、每次會前都擷取當前規劃估算點數值、GitLab 活動紀錄等，不再需要 Scrum Master 去介入。\n    - 透過這項專案，讓客觀性資料的工作完全自動化，並在日後 Scrum Master 有事必須缺席的情況，團隊也能自行依照原本就定好的開會流程搭配自動化抓取的客觀數據進行回顧會議了。\nscreenshots: []\n---"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Agile Dashbaord開發"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"JavaScript HTML CSS Ruby Vue.js Bootstrap Vuestic Admin Chart.js Firebase Cloud Firestore"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"為了讓團隊能夠自組織的進行回顧會議，且有鑒於以人工的方式搜集團隊的客觀性資料費時易錯，所以就在初期使用 Ruby 編寫腳本，透過 API 擷取 Asana 與 GitLab 的資料，並在每次開回顧會議前手動執行腳本，獲得相關資訊。並透過 Google 試算表的資料透視表和圖表功能，將這些資訊轉換成比較直覺且方便比較的圖表模式提供給團隊參考。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"又由於每次開會前都還要手動執行腳本並套用在 Google 試算表也是耗費時間與精力，為了節省日後的產能，於是著手進行更進一步的自動化。首先是將原本 Ruby 腳本產生的資料從檔案儲存改到 Firebase 的雲端資料庫，接著使用 Vue.js 搭配 Vuestic Admin 提供的組件進行視覺化，並透過 GitLab CI 的 Schedule 功能定時執行，如此便能每日、每次會前都擷取當前規劃估算點數值、GitLab 活動紀錄等，不再需要 Scrum Master 去介入。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"透過這項專案，讓客觀性資料的工作完全自動化，並在日後 Scrum Master 有事必須缺席的情況，團隊也能自行依照原本就定好的開會流程搭配自動化抓取的客觀數據進行回顧會議了。"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"garden:about:portfolios:web:2018-08-web-agile-dashboard.md","_source":"garden","_file":"about/portfolios/web/2018-08-web-agile-dashboard.md","_extension":"md","head":{"title":"... - 深藏若虛"}}